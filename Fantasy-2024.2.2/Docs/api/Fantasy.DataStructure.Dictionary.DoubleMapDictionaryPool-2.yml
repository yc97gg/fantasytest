### YamlMime:ManagedReference
items:
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
  commentId: T:Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
  id: DoubleMapDictionaryPool`2
  parent: Fantasy.DataStructure.Dictionary
  children:
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Create
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Dispose
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.IsPool
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.SetIsPool(System.Boolean)
  langs:
  - csharp
  - vb
  name: DoubleMapDictionaryPool<TKey, TValue>
  nameWithType: DoubleMapDictionaryPool<TKey, TValue>
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Dictionary/DoubleMapDictionaryPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: DoubleMapDictionaryPool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Dictionary/DoubleMapDictionaryPool.cs
    startLine: 15
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Dictionary
  summary: 提供一个双向映射字典对象池类，用于双向键值对映射。
  example: []
  syntax:
    content: 'public class DoubleMapDictionaryPool<TKey, TValue> : DoubleMapDictionary<TKey, TValue>, IDisposable, IPool where TKey : notnull where TValue : notnull'
    typeParameters:
    - id: TKey
      description: 字典中键的类型。
    - id: TValue
      description: 字典中值的类型。
    content.vb: Public Class DoubleMapDictionaryPool(Of TKey, TValue) Inherits DoubleMapDictionary(Of TKey, TValue) Implements IDisposable, IPool
  inheritance:
  - System.Object
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  implements:
  - System.IDisposable
  - Fantasy.Pool.IPool
  inheritedMembers:
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.Keys
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.Values
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.ForEach(System.Action{{TKey},{TValue}})
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.GetValueByKey({TKey})
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.TryGetValueByKey({TKey},{TValue}@)
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.GetKeyByValue({TValue})
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.TryGetKeyByValue({TValue},{TKey}@)
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.RemoveByKey({TKey})
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.RemoveByValue({TValue})
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.Clear
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.ContainsValue({TValue})
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.Contains({TKey},{TValue})
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Fantasy.Helper.JsonHelper.ToJson``1
  nameWithType.vb: DoubleMapDictionaryPool(Of TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue)
  name.vb: DoubleMapDictionaryPool(Of TKey, TValue)
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Create
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Create
  id: Create
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: DoubleMapDictionaryPool<TKey, TValue>.Create()
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>.Create()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Dictionary/DoubleMapDictionaryPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Create
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Dictionary/DoubleMapDictionaryPool.cs
    startLine: 24
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Dictionary
  summary: 创建一个新的 <xref href="Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool%602" data-throw-if-not-resolved="false"></xref> 实例。
  example: []
  syntax:
    content: public static DoubleMapDictionaryPool<TKey, TValue> Create()
    return:
      type: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
      description: 新创建的实例。
    content.vb: Public Shared Function Create() As DoubleMapDictionaryPool(Of TKey, TValue)
  overload: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Create*
  nameWithType.vb: DoubleMapDictionaryPool(Of TKey, TValue).Create()
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue).Create()
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Dispose
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Dispose
  id: Dispose
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: DoubleMapDictionaryPool<TKey, TValue>.Dispose()
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>.Dispose()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Dictionary/DoubleMapDictionaryPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Dispose
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Dictionary/DoubleMapDictionaryPool.cs
    startLine: 39
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Dictionary
  summary: 释放实例占用的资源。
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: DoubleMapDictionaryPool(Of TKey, TValue).Dispose()
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue).Dispose()
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.IsPool
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.IsPool
  id: IsPool
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
  langs:
  - csharp
  - vb
  name: IsPool()
  nameWithType: DoubleMapDictionaryPool<TKey, TValue>.IsPool()
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>.IsPool()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Dictionary/DoubleMapDictionaryPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: IsPool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Dictionary/DoubleMapDictionaryPool.cs
    startLine: 59
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Dictionary
  summary: 获取一个值，该值指示当前实例是否为对象池中的实例。
  example: []
  syntax:
    content: public bool IsPool()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsPool() As Boolean
  overload: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.IsPool*
  implements:
  - Fantasy.Pool.IPool.IsPool
  nameWithType.vb: DoubleMapDictionaryPool(Of TKey, TValue).IsPool()
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue).IsPool()
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.SetIsPool(System.Boolean)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.SetIsPool(System.Boolean)
  id: SetIsPool(System.Boolean)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
  langs:
  - csharp
  - vb
  name: SetIsPool(bool)
  nameWithType: DoubleMapDictionaryPool<TKey, TValue>.SetIsPool(bool)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>.SetIsPool(bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Dictionary/DoubleMapDictionaryPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: SetIsPool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Dictionary/DoubleMapDictionaryPool.cs
    startLine: 68
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Dictionary
  summary: 设置一个值，该值指示当前实例是否为对象池中的实例。
  example: []
  syntax:
    content: public void SetIsPool(bool isPool)
    parameters:
    - id: isPool
      type: System.Boolean
      description: ''
    content.vb: Public Sub SetIsPool(isPool As Boolean)
  overload: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.SetIsPool*
  implements:
  - Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  nameWithType.vb: DoubleMapDictionaryPool(Of TKey, TValue).SetIsPool(Boolean)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue).SetIsPool(Boolean)
  name.vb: SetIsPool(Boolean)
references:
- uid: Fantasy.DataStructure.Dictionary
  commentId: N:Fantasy.DataStructure.Dictionary
  href: Fantasy.html
  name: Fantasy.DataStructure.Dictionary
  nameWithType: Fantasy.DataStructure.Dictionary
  fullName: Fantasy.DataStructure.Dictionary
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.Dictionary
    name: Dictionary
    href: Fantasy.DataStructure.Dictionary.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.Dictionary
    name: Dictionary
    href: Fantasy.DataStructure.Dictionary.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  commentId: T:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}
  parent: Fantasy.DataStructure.Dictionary
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html
  name: DoubleMapDictionary<TKey, TValue>
  nameWithType: DoubleMapDictionary<TKey, TValue>
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue)
  name.vb: DoubleMapDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2
    name: DoubleMapDictionary
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2
    name: DoubleMapDictionary
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Fantasy.Pool.IPool
  commentId: T:Fantasy.Pool.IPool
  parent: Fantasy.Pool
  href: Fantasy.Pool.IPool.html
  name: IPool
  nameWithType: IPool
  fullName: Fantasy.Pool.IPool
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.Keys
  commentId: P:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Keys
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Keys
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Keys
  name: Keys
  nameWithType: DoubleMapDictionary<TKey, TValue>.Keys
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.Keys
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).Keys
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).Keys
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.Values
  commentId: P:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Values
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Values
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Values
  name: Values
  nameWithType: DoubleMapDictionary<TKey, TValue>.Values
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.Values
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).Values
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).Values
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.ForEach(System.Action{{TKey},{TValue}})
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.ForEach(System.Action{`0,`1})
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ForEach(System.Action{`0,`1})
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ForEach_System_Action__0__1__
  name: ForEach(Action<TKey, TValue>)
  nameWithType: DoubleMapDictionary<TKey, TValue>.ForEach(Action<TKey, TValue>)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.ForEach(System.Action<TKey, TValue>)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).ForEach(Action(Of TKey, TValue))
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).ForEach(System.Action(Of TKey, TValue))
  name.vb: ForEach(Action(Of TKey, TValue))
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.ForEach(System.Action{`0,`1})
    name: ForEach
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ForEach_System_Action__0__1__
  - name: (
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.ForEach(System.Action{`0,`1})
    name: ForEach
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ForEach_System_Action__0__1__
  - name: (
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.Add({TKey},{TValue})
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Add(`0,`1)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Add(`0,`1)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Add__0__1_
  name: Add(TKey, TValue)
  nameWithType: DoubleMapDictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Add(`0,`1)
    name: Add
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Add__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Add(`0,`1)
    name: Add
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Add__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.GetValueByKey({TKey})
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.GetValueByKey(`0)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.GetValueByKey(`0)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetValueByKey__0_
  name: GetValueByKey(TKey)
  nameWithType: DoubleMapDictionary<TKey, TValue>.GetValueByKey(TKey)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.GetValueByKey(TKey)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).GetValueByKey(TKey)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).GetValueByKey(TKey)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.GetValueByKey(`0)
    name: GetValueByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetValueByKey__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.GetValueByKey(`0)
    name: GetValueByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetValueByKey__0_
  - name: (
  - name: TKey
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.TryGetValueByKey({TKey},{TValue}@)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.TryGetValueByKey(`0,`1@)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.TryGetValueByKey(`0,`1@)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetValueByKey__0__1__
  name: TryGetValueByKey(TKey, out TValue)
  nameWithType: DoubleMapDictionary<TKey, TValue>.TryGetValueByKey(TKey, out TValue)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.TryGetValueByKey(TKey, out TValue)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).TryGetValueByKey(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).TryGetValueByKey(TKey, TValue)
  name.vb: TryGetValueByKey(TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.TryGetValueByKey(`0,`1@)
    name: TryGetValueByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetValueByKey__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.TryGetValueByKey(`0,`1@)
    name: TryGetValueByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetValueByKey__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.GetKeyByValue({TValue})
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.GetKeyByValue(`1)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.GetKeyByValue(`1)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetKeyByValue__1_
  name: GetKeyByValue(TValue)
  nameWithType: DoubleMapDictionary<TKey, TValue>.GetKeyByValue(TValue)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.GetKeyByValue(TValue)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).GetKeyByValue(TValue)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).GetKeyByValue(TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.GetKeyByValue(`1)
    name: GetKeyByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetKeyByValue__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.GetKeyByValue(`1)
    name: GetKeyByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetKeyByValue__1_
  - name: (
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.TryGetKeyByValue({TValue},{TKey}@)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.TryGetKeyByValue(`1,`0@)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.TryGetKeyByValue(`1,`0@)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetKeyByValue__1__0__
  name: TryGetKeyByValue(TValue, out TKey)
  nameWithType: DoubleMapDictionary<TKey, TValue>.TryGetKeyByValue(TValue, out TKey)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.TryGetKeyByValue(TValue, out TKey)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).TryGetKeyByValue(TValue, TKey)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).TryGetKeyByValue(TValue, TKey)
  name.vb: TryGetKeyByValue(TValue, TKey)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.TryGetKeyByValue(`1,`0@)
    name: TryGetKeyByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetKeyByValue__1__0__
  - name: (
  - name: TValue
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TKey
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.TryGetKeyByValue(`1,`0@)
    name: TryGetKeyByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetKeyByValue__1__0__
  - name: (
  - name: TValue
  - name: ','
  - name: " "
  - name: TKey
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.RemoveByKey({TKey})
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.RemoveByKey(`0)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.RemoveByKey(`0)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByKey__0_
  name: RemoveByKey(TKey)
  nameWithType: DoubleMapDictionary<TKey, TValue>.RemoveByKey(TKey)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.RemoveByKey(TKey)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).RemoveByKey(TKey)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).RemoveByKey(TKey)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.RemoveByKey(`0)
    name: RemoveByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByKey__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.RemoveByKey(`0)
    name: RemoveByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByKey__0_
  - name: (
  - name: TKey
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.RemoveByValue({TValue})
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.RemoveByValue(`1)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.RemoveByValue(`1)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByValue__1_
  name: RemoveByValue(TValue)
  nameWithType: DoubleMapDictionary<TKey, TValue>.RemoveByValue(TValue)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.RemoveByValue(TValue)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).RemoveByValue(TValue)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).RemoveByValue(TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.RemoveByValue(`1)
    name: RemoveByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByValue__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.RemoveByValue(`1)
    name: RemoveByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByValue__1_
  - name: (
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.Clear
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Clear
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Clear
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Clear
  name: Clear()
  nameWithType: DoubleMapDictionary<TKey, TValue>.Clear()
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.Clear()
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).Clear()
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Clear
    name: Clear
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Clear
    name: Clear
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Clear
  - name: (
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.ContainsKey({TKey})
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.ContainsKey(`0)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ContainsKey(`0)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsKey__0_
  name: ContainsKey(TKey)
  nameWithType: DoubleMapDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsKey__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.ContainsKey(`0)
    name: ContainsKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsKey__0_
  - name: (
  - name: TKey
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.ContainsValue({TValue})
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.ContainsValue(`1)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ContainsValue(`1)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsValue__1_
  name: ContainsValue(TValue)
  nameWithType: DoubleMapDictionary<TKey, TValue>.ContainsValue(TValue)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.ContainsValue(TValue)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).ContainsValue(TValue)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).ContainsValue(TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.ContainsValue(`1)
    name: ContainsValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsValue__1_
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.ContainsValue(`1)
    name: ContainsValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsValue__1_
  - name: (
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}.Contains({TKey},{TValue})
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Contains(`0,`1)
  parent: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Contains(`0,`1)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Contains__0__1_
  name: Contains(TKey, TValue)
  nameWithType: DoubleMapDictionary<TKey, TValue>.Contains(TKey, TValue)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TKey, TValue>.Contains(TKey, TValue)
  nameWithType.vb: DoubleMapDictionary(Of TKey, TValue).Contains(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TKey, TValue).Contains(TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Contains(`0,`1)
    name: Contains
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Contains__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary{`0,`1}.Contains(`0,`1)
    name: Contains
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Contains__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Fantasy.Helper.JsonHelper.ToJson``1
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  parent: Fantasy.Helper.JsonHelper
  definition: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<DoubleMapDictionaryPool<TKey, TValue>>(DoubleMapDictionaryPool<TKey, TValue>)
  nameWithType: JsonHelper.ToJson<DoubleMapDictionaryPool<TKey, TValue>>(DoubleMapDictionaryPool<TKey, TValue>)
  fullName: Fantasy.Helper.JsonHelper.ToJson<Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>>(Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>)
  nameWithType.vb: JsonHelper.ToJson(Of DoubleMapDictionaryPool(Of TKey, TValue))(DoubleMapDictionaryPool(Of TKey, TValue))
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue))(Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue))
  name.vb: ToJson(Of DoubleMapDictionaryPool(Of TKey, TValue))(DoubleMapDictionaryPool(Of TKey, TValue))
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool{`0,`1})
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
    name: DoubleMapDictionaryPool
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  - name: (
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
    name: DoubleMapDictionaryPool
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool{`0,`1})
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
    name: DoubleMapDictionaryPool
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: (
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
    name: DoubleMapDictionaryPool
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2
  commentId: T:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html
  name: DoubleMapDictionary<TK, TV>
  nameWithType: DoubleMapDictionary<TK, TV>
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>
  nameWithType.vb: DoubleMapDictionary(Of TK, TV)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV)
  name.vb: DoubleMapDictionary(Of TK, TV)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2
    name: DoubleMapDictionary
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html
  - name: <
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: '>'
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2
    name: DoubleMapDictionary
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: )
- uid: Fantasy.Pool
  commentId: N:Fantasy.Pool
  href: Fantasy.html
  name: Fantasy.Pool
  nameWithType: Fantasy.Pool
  fullName: Fantasy.Pool
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Pool
    name: Pool
    href: Fantasy.Pool.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Pool
    name: Pool
    href: Fantasy.Pool.html
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Keys
  commentId: P:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Keys
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Keys
  name: Keys
  nameWithType: DoubleMapDictionary<TK, TV>.Keys
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.Keys
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).Keys
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).Keys
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Values
  commentId: P:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Values
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Values
  name: Values
  nameWithType: DoubleMapDictionary<TK, TV>.Values
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.Values
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).Values
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).Values
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ForEach(System.Action{`0,`1})
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ForEach(System.Action{`0,`1})
  isExternal: true
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ForEach_System_Action__0__1__
  name: ForEach(Action<TK, TV>)
  nameWithType: DoubleMapDictionary<TK, TV>.ForEach(Action<TK, TV>)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.ForEach(System.Action<TK, TV>)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).ForEach(Action(Of TK, TV))
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).ForEach(System.Action(Of TK, TV))
  name.vb: ForEach(Action(Of TK, TV))
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ForEach(System.Action{`0,`1})
    name: ForEach
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ForEach_System_Action__0__1__
  - name: (
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: <
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ForEach(System.Action{`0,`1})
    name: ForEach
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ForEach_System_Action__0__1__
  - name: (
  - uid: System.Action`2
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-2
  - name: (
  - name: Of
  - name: " "
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: )
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Add(`0,`1)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Add(`0,`1)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Add__0__1_
  name: Add(TK, TV)
  nameWithType: DoubleMapDictionary<TK, TV>.Add(TK, TV)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.Add(TK, TV)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).Add(TK, TV)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).Add(TK, TV)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Add(`0,`1)
    name: Add
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Add__0__1_
  - name: (
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Add(`0,`1)
    name: Add
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Add__0__1_
  - name: (
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.GetValueByKey(`0)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.GetValueByKey(`0)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetValueByKey__0_
  name: GetValueByKey(TK)
  nameWithType: DoubleMapDictionary<TK, TV>.GetValueByKey(TK)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.GetValueByKey(TK)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).GetValueByKey(TK)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).GetValueByKey(TK)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.GetValueByKey(`0)
    name: GetValueByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetValueByKey__0_
  - name: (
  - name: TK
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.GetValueByKey(`0)
    name: GetValueByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetValueByKey__0_
  - name: (
  - name: TK
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.TryGetValueByKey(`0,`1@)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.TryGetValueByKey(`0,`1@)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetValueByKey__0__1__
  name: TryGetValueByKey(TK, out TV)
  nameWithType: DoubleMapDictionary<TK, TV>.TryGetValueByKey(TK, out TV)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.TryGetValueByKey(TK, out TV)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).TryGetValueByKey(TK, TV)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).TryGetValueByKey(TK, TV)
  name.vb: TryGetValueByKey(TK, TV)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.TryGetValueByKey(`0,`1@)
    name: TryGetValueByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetValueByKey__0__1__
  - name: (
  - name: TK
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TV
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.TryGetValueByKey(`0,`1@)
    name: TryGetValueByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetValueByKey__0__1__
  - name: (
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.GetKeyByValue(`1)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.GetKeyByValue(`1)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetKeyByValue__1_
  name: GetKeyByValue(TV)
  nameWithType: DoubleMapDictionary<TK, TV>.GetKeyByValue(TV)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.GetKeyByValue(TV)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).GetKeyByValue(TV)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).GetKeyByValue(TV)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.GetKeyByValue(`1)
    name: GetKeyByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetKeyByValue__1_
  - name: (
  - name: TV
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.GetKeyByValue(`1)
    name: GetKeyByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_GetKeyByValue__1_
  - name: (
  - name: TV
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.TryGetKeyByValue(`1,`0@)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.TryGetKeyByValue(`1,`0@)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetKeyByValue__1__0__
  name: TryGetKeyByValue(TV, out TK)
  nameWithType: DoubleMapDictionary<TK, TV>.TryGetKeyByValue(TV, out TK)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.TryGetKeyByValue(TV, out TK)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).TryGetKeyByValue(TV, TK)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).TryGetKeyByValue(TV, TK)
  name.vb: TryGetKeyByValue(TV, TK)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.TryGetKeyByValue(`1,`0@)
    name: TryGetKeyByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetKeyByValue__1__0__
  - name: (
  - name: TV
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TK
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.TryGetKeyByValue(`1,`0@)
    name: TryGetKeyByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_TryGetKeyByValue__1__0__
  - name: (
  - name: TV
  - name: ','
  - name: " "
  - name: TK
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.RemoveByKey(`0)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.RemoveByKey(`0)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByKey__0_
  name: RemoveByKey(TK)
  nameWithType: DoubleMapDictionary<TK, TV>.RemoveByKey(TK)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.RemoveByKey(TK)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).RemoveByKey(TK)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).RemoveByKey(TK)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.RemoveByKey(`0)
    name: RemoveByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByKey__0_
  - name: (
  - name: TK
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.RemoveByKey(`0)
    name: RemoveByKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByKey__0_
  - name: (
  - name: TK
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.RemoveByValue(`1)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.RemoveByValue(`1)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByValue__1_
  name: RemoveByValue(TV)
  nameWithType: DoubleMapDictionary<TK, TV>.RemoveByValue(TV)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.RemoveByValue(TV)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).RemoveByValue(TV)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).RemoveByValue(TV)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.RemoveByValue(`1)
    name: RemoveByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByValue__1_
  - name: (
  - name: TV
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.RemoveByValue(`1)
    name: RemoveByValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_RemoveByValue__1_
  - name: (
  - name: TV
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Clear
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Clear
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Clear
  name: Clear()
  nameWithType: DoubleMapDictionary<TK, TV>.Clear()
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.Clear()
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).Clear()
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).Clear()
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Clear
    name: Clear
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Clear
    name: Clear
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Clear
  - name: (
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ContainsKey(`0)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ContainsKey(`0)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsKey__0_
  name: ContainsKey(TK)
  nameWithType: DoubleMapDictionary<TK, TV>.ContainsKey(TK)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.ContainsKey(TK)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).ContainsKey(TK)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).ContainsKey(TK)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ContainsKey(`0)
    name: ContainsKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsKey__0_
  - name: (
  - name: TK
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ContainsKey(`0)
    name: ContainsKey
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsKey__0_
  - name: (
  - name: TK
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ContainsValue(`1)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ContainsValue(`1)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsValue__1_
  name: ContainsValue(TV)
  nameWithType: DoubleMapDictionary<TK, TV>.ContainsValue(TV)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.ContainsValue(TV)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).ContainsValue(TV)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).ContainsValue(TV)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ContainsValue(`1)
    name: ContainsValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsValue__1_
  - name: (
  - name: TV
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.ContainsValue(`1)
    name: ContainsValue
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_ContainsValue__1_
  - name: (
  - name: TV
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Contains(`0,`1)
  commentId: M:Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Contains(`0,`1)
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Contains__0__1_
  name: Contains(TK, TV)
  nameWithType: DoubleMapDictionary<TK, TV>.Contains(TK, TV)
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionary<TK, TV>.Contains(TK, TV)
  nameWithType.vb: DoubleMapDictionary(Of TK, TV).Contains(TK, TV)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionary(Of TK, TV).Contains(TK, TV)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Contains(`0,`1)
    name: Contains
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Contains__0__1_
  - name: (
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionary`2.Contains(`0,`1)
    name: Contains
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionary-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionary_2_Contains__0__1_
  - name: (
  - name: TK
  - name: ','
  - name: " "
  - name: TV
  - name: )
- uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<T>(T)
  nameWithType: JsonHelper.ToJson<T>(T)
  fullName: Fantasy.Helper.JsonHelper.ToJson<T>(T)
  nameWithType.vb: JsonHelper.ToJson(Of T)(T)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of T)(T)
  name.vb: ToJson(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Fantasy.Helper.JsonHelper
  commentId: T:Fantasy.Helper.JsonHelper
  parent: Fantasy.Helper
  href: Fantasy.Helper.JsonHelper.html
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: Fantasy.Helper.JsonHelper
- uid: Fantasy.Helper
  commentId: N:Fantasy.Helper
  href: Fantasy.html
  name: Fantasy.Helper
  nameWithType: Fantasy.Helper
  fullName: Fantasy.Helper
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
  commentId: T:Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
  parent: Fantasy.DataStructure.Dictionary
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html
  name: DoubleMapDictionaryPool<TKey, TValue>
  nameWithType: DoubleMapDictionaryPool<TKey, TValue>
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>
  nameWithType.vb: DoubleMapDictionaryPool(Of TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue)
  name.vb: DoubleMapDictionaryPool(Of TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
    name: DoubleMapDictionaryPool
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2
    name: DoubleMapDictionaryPool
    href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Create*
  commentId: Overload:Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Create
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionaryPool_2_Create
  name: Create
  nameWithType: DoubleMapDictionaryPool<TKey, TValue>.Create
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>.Create
  nameWithType.vb: DoubleMapDictionaryPool(Of TKey, TValue).Create
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue).Create
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Dispose*
  commentId: Overload:Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.Dispose
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionaryPool_2_Dispose
  name: Dispose
  nameWithType: DoubleMapDictionaryPool<TKey, TValue>.Dispose
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>.Dispose
  nameWithType.vb: DoubleMapDictionaryPool(Of TKey, TValue).Dispose
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.IsPool*
  commentId: Overload:Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.IsPool
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionaryPool_2_IsPool
  name: IsPool
  nameWithType: DoubleMapDictionaryPool<TKey, TValue>.IsPool
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>.IsPool
  nameWithType.vb: DoubleMapDictionaryPool(Of TKey, TValue).IsPool
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue).IsPool
- uid: Fantasy.Pool.IPool.IsPool
  commentId: M:Fantasy.Pool.IPool.IsPool
  parent: Fantasy.Pool.IPool
  href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  name: IsPool()
  nameWithType: IPool.IsPool()
  fullName: Fantasy.Pool.IPool.IsPool()
  spec.csharp:
  - uid: Fantasy.Pool.IPool.IsPool
    name: IsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  - name: (
  - name: )
  spec.vb:
  - uid: Fantasy.Pool.IPool.IsPool
    name: IsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.SetIsPool*
  commentId: Overload:Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool`2.SetIsPool
  href: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool-2.html#Fantasy_DataStructure_Dictionary_DoubleMapDictionaryPool_2_SetIsPool_System_Boolean_
  name: SetIsPool
  nameWithType: DoubleMapDictionaryPool<TKey, TValue>.SetIsPool
  fullName: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool<TKey, TValue>.SetIsPool
  nameWithType.vb: DoubleMapDictionaryPool(Of TKey, TValue).SetIsPool
  fullName.vb: Fantasy.DataStructure.Dictionary.DoubleMapDictionaryPool(Of TKey, TValue).SetIsPool
- uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  commentId: M:Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  parent: Fantasy.Pool.IPool
  isExternal: true
  href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  name: SetIsPool(bool)
  nameWithType: IPool.SetIsPool(bool)
  fullName: Fantasy.Pool.IPool.SetIsPool(bool)
  nameWithType.vb: IPool.SetIsPool(Boolean)
  fullName.vb: Fantasy.Pool.IPool.SetIsPool(Boolean)
  name.vb: SetIsPool(Boolean)
  spec.csharp:
  - uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
    name: SetIsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
    name: SetIsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
