### YamlMime:ManagedReference
items:
- uid: Fantasy.Network.Route.AddressableHelper
  commentId: T:Fantasy.Network.Route.AddressableHelper
  id: AddressableHelper
  parent: Fantasy.Network.Route
  children:
  - Fantasy.Network.Route.AddressableHelper.AddAddressable(Fantasy.Scene,System.Int64,System.Int64,System.Boolean)
  - Fantasy.Network.Route.AddressableHelper.GetAddressableRouteId(Fantasy.Scene,System.Int64)
  - Fantasy.Network.Route.AddressableHelper.LockAddressable(Fantasy.Scene,System.Int64)
  - Fantasy.Network.Route.AddressableHelper.RemoveAddressable(Fantasy.Scene,System.Int64)
  - Fantasy.Network.Route.AddressableHelper.UnLockAddressable(Fantasy.Scene,System.Int64,System.Int64,System.String)
  langs:
  - csharp
  - vb
  name: AddressableHelper
  nameWithType: AddressableHelper
  fullName: Fantasy.Network.Route.AddressableHelper
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: AddressableHelper
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
    startLine: 9
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Network.Route
  summary: 提供操作地址映射的辅助方法。
  example: []
  syntax:
    content: public static class AddressableHelper
    content.vb: Public Module AddressableHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Fantasy.Network.Route.AddressableHelper.AddAddressable(Fantasy.Scene,System.Int64,System.Int64,System.Boolean)
  commentId: M:Fantasy.Network.Route.AddressableHelper.AddAddressable(Fantasy.Scene,System.Int64,System.Int64,System.Boolean)
  id: AddAddressable(Fantasy.Scene,System.Int64,System.Int64,System.Boolean)
  parent: Fantasy.Network.Route.AddressableHelper
  langs:
  - csharp
  - vb
  name: AddAddressable(Scene, long, long, bool)
  nameWithType: AddressableHelper.AddAddressable(Scene, long, long, bool)
  fullName: Fantasy.Network.Route.AddressableHelper.AddAddressable(Fantasy.Scene, long, long, bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: AddAddressable
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
    startLine: 33
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Network.Route
  summary: 添加地址映射并返回操作结果。
  example: []
  syntax:
    content: public static FTask AddAddressable(Scene scene, long addressableId, long routeId, bool isLock = true)
    parameters:
    - id: scene
      type: Fantasy.Scene
      description: 场景实例。
    - id: addressableId
      type: System.Int64
      description: 地址映射的唯一标识。
    - id: routeId
      type: System.Int64
      description: 路由 ID。
    - id: isLock
      type: System.Boolean
      description: 是否锁定。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Shared Function AddAddressable(scene As Scene, addressableId As Long, routeId As Long, isLock As Boolean = True) As FTask
  overload: Fantasy.Network.Route.AddressableHelper.AddAddressable*
  nameWithType.vb: AddressableHelper.AddAddressable(Scene, Long, Long, Boolean)
  fullName.vb: Fantasy.Network.Route.AddressableHelper.AddAddressable(Fantasy.Scene, Long, Long, Boolean)
  name.vb: AddAddressable(Scene, Long, Long, Boolean)
- uid: Fantasy.Network.Route.AddressableHelper.GetAddressableRouteId(Fantasy.Scene,System.Int64)
  commentId: M:Fantasy.Network.Route.AddressableHelper.GetAddressableRouteId(Fantasy.Scene,System.Int64)
  id: GetAddressableRouteId(Fantasy.Scene,System.Int64)
  parent: Fantasy.Network.Route.AddressableHelper
  langs:
  - csharp
  - vb
  name: GetAddressableRouteId(Scene, long)
  nameWithType: AddressableHelper.GetAddressableRouteId(Scene, long)
  fullName: Fantasy.Network.Route.AddressableHelper.GetAddressableRouteId(Fantasy.Scene, long)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetAddressableRouteId
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
    startLine: 55
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Network.Route
  summary: 获取地址映射的路由 ID。
  example: []
  syntax:
    content: public static FTask<long> GetAddressableRouteId(Scene scene, long addressableId)
    parameters:
    - id: scene
      type: Fantasy.Scene
      description: 场景实例。
    - id: addressableId
      type: System.Int64
      description: 地址映射的唯一标识。
    return:
      type: Fantasy.Async.FTask{System.Int64}
      description: 地址映射的路由 ID。
    content.vb: Public Shared Function GetAddressableRouteId(scene As Scene, addressableId As Long) As FTask(Of Long)
  overload: Fantasy.Network.Route.AddressableHelper.GetAddressableRouteId*
  nameWithType.vb: AddressableHelper.GetAddressableRouteId(Scene, Long)
  fullName.vb: Fantasy.Network.Route.AddressableHelper.GetAddressableRouteId(Fantasy.Scene, Long)
  name.vb: GetAddressableRouteId(Scene, Long)
- uid: Fantasy.Network.Route.AddressableHelper.RemoveAddressable(Fantasy.Scene,System.Int64)
  commentId: M:Fantasy.Network.Route.AddressableHelper.RemoveAddressable(Fantasy.Scene,System.Int64)
  id: RemoveAddressable(Fantasy.Scene,System.Int64)
  parent: Fantasy.Network.Route.AddressableHelper
  langs:
  - csharp
  - vb
  name: RemoveAddressable(Scene, long)
  nameWithType: AddressableHelper.RemoveAddressable(Scene, long)
  fullName: Fantasy.Network.Route.AddressableHelper.RemoveAddressable(Fantasy.Scene, long)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: RemoveAddressable
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
    startLine: 80
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Network.Route
  summary: 移除指定地址映射。
  example: []
  syntax:
    content: public static FTask RemoveAddressable(Scene scene, long addressableId)
    parameters:
    - id: scene
      type: Fantasy.Scene
      description: 场景实例。
    - id: addressableId
      type: System.Int64
      description: 地址映射的唯一标识。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Shared Function RemoveAddressable(scene As Scene, addressableId As Long) As FTask
  overload: Fantasy.Network.Route.AddressableHelper.RemoveAddressable*
  nameWithType.vb: AddressableHelper.RemoveAddressable(Scene, Long)
  fullName.vb: Fantasy.Network.Route.AddressableHelper.RemoveAddressable(Fantasy.Scene, Long)
  name.vb: RemoveAddressable(Scene, Long)
- uid: Fantasy.Network.Route.AddressableHelper.LockAddressable(Fantasy.Scene,System.Int64)
  commentId: M:Fantasy.Network.Route.AddressableHelper.LockAddressable(Fantasy.Scene,System.Int64)
  id: LockAddressable(Fantasy.Scene,System.Int64)
  parent: Fantasy.Network.Route.AddressableHelper
  langs:
  - csharp
  - vb
  name: LockAddressable(Scene, long)
  nameWithType: AddressableHelper.LockAddressable(Scene, long)
  fullName: Fantasy.Network.Route.AddressableHelper.LockAddressable(Fantasy.Scene, long)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: LockAddressable
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
    startLine: 100
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Network.Route
  summary: 锁定指定地址映射。
  example: []
  syntax:
    content: public static FTask LockAddressable(Scene scene, long addressableId)
    parameters:
    - id: scene
      type: Fantasy.Scene
      description: 场景实例。
    - id: addressableId
      type: System.Int64
      description: 地址映射的唯一标识。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Shared Function LockAddressable(scene As Scene, addressableId As Long) As FTask
  overload: Fantasy.Network.Route.AddressableHelper.LockAddressable*
  nameWithType.vb: AddressableHelper.LockAddressable(Scene, Long)
  fullName.vb: Fantasy.Network.Route.AddressableHelper.LockAddressable(Fantasy.Scene, Long)
  name.vb: LockAddressable(Scene, Long)
- uid: Fantasy.Network.Route.AddressableHelper.UnLockAddressable(Fantasy.Scene,System.Int64,System.Int64,System.String)
  commentId: M:Fantasy.Network.Route.AddressableHelper.UnLockAddressable(Fantasy.Scene,System.Int64,System.Int64,System.String)
  id: UnLockAddressable(Fantasy.Scene,System.Int64,System.Int64,System.String)
  parent: Fantasy.Network.Route.AddressableHelper
  langs:
  - csharp
  - vb
  name: UnLockAddressable(Scene, long, long, string)
  nameWithType: AddressableHelper.UnLockAddressable(Scene, long, long, string)
  fullName: Fantasy.Network.Route.AddressableHelper.UnLockAddressable(Fantasy.Scene, long, long, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: UnLockAddressable
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Network/Addressable/AddressableHelper.cs
    startLine: 122
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Network.Route
  summary: 解锁指定地址映射。
  example: []
  syntax:
    content: public static FTask UnLockAddressable(Scene scene, long addressableId, long routeId, string source)
    parameters:
    - id: scene
      type: Fantasy.Scene
      description: 场景实例。
    - id: addressableId
      type: System.Int64
      description: 地址映射的唯一标识。
    - id: routeId
      type: System.Int64
      description: 路由 ID。
    - id: source
      type: System.String
      description: 解锁来源。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Shared Function UnLockAddressable(scene As Scene, addressableId As Long, routeId As Long, source As String) As FTask
  overload: Fantasy.Network.Route.AddressableHelper.UnLockAddressable*
  nameWithType.vb: AddressableHelper.UnLockAddressable(Scene, Long, Long, String)
  fullName.vb: Fantasy.Network.Route.AddressableHelper.UnLockAddressable(Fantasy.Scene, Long, Long, String)
  name.vb: UnLockAddressable(Scene, Long, Long, String)
references:
- uid: Fantasy.Network.Route
  commentId: N:Fantasy.Network.Route
  href: Fantasy.html
  name: Fantasy.Network.Route
  nameWithType: Fantasy.Network.Route
  fullName: Fantasy.Network.Route
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Network
    name: Network
    href: Fantasy.Network.html
  - name: .
  - uid: Fantasy.Network.Route
    name: Route
    href: Fantasy.Network.Route.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Network
    name: Network
    href: Fantasy.Network.html
  - name: .
  - uid: Fantasy.Network.Route
    name: Route
    href: Fantasy.Network.Route.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantasy.Network.Route.AddressableHelper.AddAddressable*
  commentId: Overload:Fantasy.Network.Route.AddressableHelper.AddAddressable
  href: Fantasy.Network.Route.AddressableHelper.html#Fantasy_Network_Route_AddressableHelper_AddAddressable_Fantasy_Scene_System_Int64_System_Int64_System_Boolean_
  name: AddAddressable
  nameWithType: AddressableHelper.AddAddressable
  fullName: Fantasy.Network.Route.AddressableHelper.AddAddressable
- uid: Fantasy.Scene
  commentId: T:Fantasy.Scene
  parent: Fantasy
  href: Fantasy.Scene.html
  name: Scene
  nameWithType: Scene
  fullName: Fantasy.Scene
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Fantasy.Async.FTask
  commentId: T:Fantasy.Async.FTask
  parent: Fantasy.Async
  href: Fantasy.Async.FTask.html
  name: FTask
  nameWithType: FTask
  fullName: Fantasy.Async.FTask
- uid: Fantasy
  commentId: N:Fantasy
  href: Fantasy.html
  name: Fantasy
  nameWithType: Fantasy
  fullName: Fantasy
- uid: Fantasy.Async
  commentId: N:Fantasy.Async
  href: Fantasy.html
  name: Fantasy.Async
  nameWithType: Fantasy.Async
  fullName: Fantasy.Async
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Async
    name: Async
    href: Fantasy.Async.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Async
    name: Async
    href: Fantasy.Async.html
- uid: Fantasy.Network.Route.AddressableHelper.GetAddressableRouteId*
  commentId: Overload:Fantasy.Network.Route.AddressableHelper.GetAddressableRouteId
  href: Fantasy.Network.Route.AddressableHelper.html#Fantasy_Network_Route_AddressableHelper_GetAddressableRouteId_Fantasy_Scene_System_Int64_
  name: GetAddressableRouteId
  nameWithType: AddressableHelper.GetAddressableRouteId
  fullName: Fantasy.Network.Route.AddressableHelper.GetAddressableRouteId
- uid: Fantasy.Async.FTask{System.Int64}
  commentId: T:Fantasy.Async.FTask{System.Int64}
  parent: Fantasy.Async
  definition: Fantasy.Async.FTask`1
  href: Fantasy.Async.FTask-1.html
  name: FTask<long>
  nameWithType: FTask<long>
  fullName: Fantasy.Async.FTask<long>
  nameWithType.vb: FTask(Of Long)
  fullName.vb: Fantasy.Async.FTask(Of Long)
  name.vb: FTask(Of Long)
  spec.csharp:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: <
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '>'
  spec.vb:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Fantasy.Async.FTask`1
  commentId: T:Fantasy.Async.FTask`1
  parent: Fantasy.Async
  href: Fantasy.Async.FTask-1.html
  name: FTask<T>
  nameWithType: FTask<T>
  fullName: Fantasy.Async.FTask<T>
  nameWithType.vb: FTask(Of T)
  fullName.vb: Fantasy.Async.FTask(Of T)
  name.vb: FTask(Of T)
  spec.csharp:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Fantasy.Network.Route.AddressableHelper.RemoveAddressable*
  commentId: Overload:Fantasy.Network.Route.AddressableHelper.RemoveAddressable
  href: Fantasy.Network.Route.AddressableHelper.html#Fantasy_Network_Route_AddressableHelper_RemoveAddressable_Fantasy_Scene_System_Int64_
  name: RemoveAddressable
  nameWithType: AddressableHelper.RemoveAddressable
  fullName: Fantasy.Network.Route.AddressableHelper.RemoveAddressable
- uid: Fantasy.Network.Route.AddressableHelper.LockAddressable*
  commentId: Overload:Fantasy.Network.Route.AddressableHelper.LockAddressable
  href: Fantasy.Network.Route.AddressableHelper.html#Fantasy_Network_Route_AddressableHelper_LockAddressable_Fantasy_Scene_System_Int64_
  name: LockAddressable
  nameWithType: AddressableHelper.LockAddressable
  fullName: Fantasy.Network.Route.AddressableHelper.LockAddressable
- uid: Fantasy.Network.Route.AddressableHelper.UnLockAddressable*
  commentId: Overload:Fantasy.Network.Route.AddressableHelper.UnLockAddressable
  href: Fantasy.Network.Route.AddressableHelper.html#Fantasy_Network_Route_AddressableHelper_UnLockAddressable_Fantasy_Scene_System_Int64_System_Int64_System_String_
  name: UnLockAddressable
  nameWithType: AddressableHelper.UnLockAddressable
  fullName: Fantasy.Network.Route.AddressableHelper.UnLockAddressable
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
