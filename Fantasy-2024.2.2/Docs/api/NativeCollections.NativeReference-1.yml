### YamlMime:ManagedReference
items:
- uid: NativeCollections.NativeReference`1
  commentId: T:NativeCollections.NativeReference`1
  id: NativeReference`1
  parent: NativeCollections
  children:
  - NativeCollections.NativeReference`1.#ctor(`0)
  - NativeCollections.NativeReference`1.#ctor(`0*)
  - NativeCollections.NativeReference`1.Dispose
  - NativeCollections.NativeReference`1.Empty
  - NativeCollections.NativeReference`1.Equals(NativeCollections.NativeReference{`0})
  - NativeCollections.NativeReference`1.Equals(System.Object)
  - NativeCollections.NativeReference`1.GetHashCode
  - NativeCollections.NativeReference`1.Handle
  - NativeCollections.NativeReference`1.IsCreated
  - NativeCollections.NativeReference`1.ToString
  - NativeCollections.NativeReference`1.Value
  - NativeCollections.NativeReference`1.op_Equality(NativeCollections.NativeReference{`0},NativeCollections.NativeReference{`0})
  - NativeCollections.NativeReference`1.op_Implicit(NativeCollections.NativeReference{`0})~System.IntPtr
  - NativeCollections.NativeReference`1.op_Implicit(NativeCollections.NativeReference{`0})~`0*
  - NativeCollections.NativeReference`1.op_Implicit(System.IntPtr)~NativeCollections.NativeReference{`0}
  - NativeCollections.NativeReference`1.op_Implicit(`0*)~NativeCollections.NativeReference{`0}
  - NativeCollections.NativeReference`1.op_Inequality(NativeCollections.NativeReference{`0},NativeCollections.NativeReference{`0})
  langs:
  - csharp
  - vb
  name: NativeReference<T>
  nameWithType: NativeReference<T>
  fullName: NativeCollections.NativeReference<T>
  type: Struct
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: NativeReference
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 22
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Native reference
  example: []
  syntax:
    content: >-
      [StructLayout(LayoutKind.Sequential)]

      public readonly struct NativeReference<T> : IDisposable, IEquatable<NativeReference<T>> where T : unmanaged
    typeParameters:
    - id: T
      description: Type
    content.vb: >-
      <StructLayout(LayoutKind.Sequential)>

      Public Structure NativeReference(Of T As Structure) Implements IDisposable, IEquatable(Of NativeReference(Of T))
  implements:
  - System.IDisposable
  - System.IEquatable{NativeCollections.NativeReference`1}
  inheritedMembers:
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  extensionMethods:
  - NativeCollections.NativeReference`1.Fantasy.Helper.JsonHelper.ToJson``1
  attributes:
  - type: System.Runtime.InteropServices.StructLayoutAttribute
    ctor: System.Runtime.InteropServices.StructLayoutAttribute.#ctor(System.Runtime.InteropServices.LayoutKind)
    arguments:
    - type: System.Runtime.InteropServices.LayoutKind
      value: 0
  nameWithType.vb: NativeReference(Of T)
  fullName.vb: NativeCollections.NativeReference(Of T)
  name.vb: NativeReference(Of T)
- uid: NativeCollections.NativeReference`1.#ctor(`0*)
  commentId: M:NativeCollections.NativeReference`1.#ctor(`0*)
  id: '#ctor(`0*)'
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: NativeReference(T*)
  nameWithType: NativeReference<T>.NativeReference(T*)
  fullName: NativeCollections.NativeReference<T>.NativeReference(T*)
  type: Constructor
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: .ctor
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 34
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Structure
  example: []
  syntax:
    content: >-
      [MethodImpl(MethodImplOptions.AggressiveInlining)]

      public NativeReference(T* handle)
    parameters:
    - id: handle
      type: '{T}*'
      description: Handle
    content.vb: >-
      <MethodImpl(MethodImplOptions.AggressiveInlining)>

      Public Sub New(handle As T*)
  overload: NativeCollections.NativeReference`1.#ctor*
  attributes:
  - type: System.Runtime.CompilerServices.MethodImplAttribute
    ctor: System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)
    arguments:
    - type: System.Runtime.CompilerServices.MethodImplOptions
      value: 256
  nameWithType.vb: NativeReference(Of T).New(T*)
  fullName.vb: NativeCollections.NativeReference(Of T).New(T*)
  name.vb: New(T*)
- uid: NativeCollections.NativeReference`1.#ctor(`0)
  commentId: M:NativeCollections.NativeReference`1.#ctor(`0)
  id: '#ctor(`0)'
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: NativeReference(T)
  nameWithType: NativeReference<T>.NativeReference(T)
  fullName: NativeCollections.NativeReference<T>.NativeReference(T)
  type: Constructor
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: .ctor
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 41
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Structure
  example: []
  syntax:
    content: >-
      [MethodImpl(MethodImplOptions.AggressiveInlining)]

      public NativeReference(T value)
    parameters:
    - id: value
      type: '{T}'
      description: Value
    content.vb: >-
      <MethodImpl(MethodImplOptions.AggressiveInlining)>

      Public Sub New(value As T)
  overload: NativeCollections.NativeReference`1.#ctor*
  attributes:
  - type: System.Runtime.CompilerServices.MethodImplAttribute
    ctor: System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)
    arguments:
    - type: System.Runtime.CompilerServices.MethodImplOptions
      value: 256
  nameWithType.vb: NativeReference(Of T).New(T)
  fullName.vb: NativeCollections.NativeReference(Of T).New(T)
  name.vb: New(T)
- uid: NativeCollections.NativeReference`1.Handle
  commentId: P:NativeCollections.NativeReference`1.Handle
  id: Handle
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: Handle
  nameWithType: NativeReference<T>.Handle
  fullName: NativeCollections.NativeReference<T>.Handle
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Handle
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 51
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Handle
  example: []
  syntax:
    content: public T* Handle { get; }
    parameters: []
    return:
      type: '{T}*'
    content.vb: Public ReadOnly Property Handle As T*
  overload: NativeCollections.NativeReference`1.Handle*
  nameWithType.vb: NativeReference(Of T).Handle
  fullName.vb: NativeCollections.NativeReference(Of T).Handle
- uid: NativeCollections.NativeReference`1.Value
  commentId: P:NativeCollections.NativeReference`1.Value
  id: Value
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: NativeReference<T>.Value
  fullName: NativeCollections.NativeReference<T>.Value
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Value
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 56
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Value
  example: []
  syntax:
    content: public T Value { get; set; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public Property Value As T
  overload: NativeCollections.NativeReference`1.Value*
  nameWithType.vb: NativeReference(Of T).Value
  fullName.vb: NativeCollections.NativeReference(Of T).Value
- uid: NativeCollections.NativeReference`1.IsCreated
  commentId: P:NativeCollections.NativeReference`1.IsCreated
  id: IsCreated
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: IsCreated
  nameWithType: NativeReference<T>.IsCreated
  fullName: NativeCollections.NativeReference<T>.IsCreated
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: IsCreated
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 67
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Is created
  example: []
  syntax:
    content: public bool IsCreated { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsCreated As Boolean
  overload: NativeCollections.NativeReference`1.IsCreated*
  nameWithType.vb: NativeReference(Of T).IsCreated
  fullName.vb: NativeCollections.NativeReference(Of T).IsCreated
- uid: NativeCollections.NativeReference`1.Equals(NativeCollections.NativeReference{`0})
  commentId: M:NativeCollections.NativeReference`1.Equals(NativeCollections.NativeReference{`0})
  id: Equals(NativeCollections.NativeReference{`0})
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: Equals(NativeReference<T>)
  nameWithType: NativeReference<T>.Equals(NativeReference<T>)
  fullName: NativeCollections.NativeReference<T>.Equals(NativeCollections.NativeReference<T>)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Equals
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 74
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Equals
  example: []
  syntax:
    content: public bool Equals(NativeReference<T> other)
    parameters:
    - id: other
      type: NativeCollections.NativeReference`1
      description: Other
    return:
      type: System.Boolean
      description: Equals
    content.vb: Public Function Equals(other As NativeReference(Of T)) As Boolean
  overload: NativeCollections.NativeReference`1.Equals*
  implements:
  - System.IEquatable{NativeCollections.NativeReference`1}.Equals(NativeCollections.NativeReference{{T}})
  nameWithType.vb: NativeReference(Of T).Equals(NativeReference(Of T))
  fullName.vb: NativeCollections.NativeReference(Of T).Equals(NativeCollections.NativeReference(Of T))
  name.vb: Equals(NativeReference(Of T))
- uid: NativeCollections.NativeReference`1.Equals(System.Object)
  commentId: M:NativeCollections.NativeReference`1.Equals(System.Object)
  id: Equals(System.Object)
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: Equals(object?)
  nameWithType: NativeReference<T>.Equals(object?)
  fullName: NativeCollections.NativeReference<T>.Equals(object?)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Equals
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 81
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Equals
  example: []
  syntax:
    content: public override bool Equals(object? obj)
    parameters:
    - id: obj
      type: System.Object
      description: object
    return:
      type: System.Boolean
      description: Equals
    content.vb: Public Overrides Function Equals(obj As Object) As Boolean
  overridden: System.ValueType.Equals(System.Object)
  overload: NativeCollections.NativeReference`1.Equals*
  nameWithType.vb: NativeReference(Of T).Equals(Object)
  fullName.vb: NativeCollections.NativeReference(Of T).Equals(Object)
  name.vb: Equals(Object)
- uid: NativeCollections.NativeReference`1.GetHashCode
  commentId: M:NativeCollections.NativeReference`1.GetHashCode
  id: GetHashCode
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: GetHashCode()
  nameWithType: NativeReference<T>.GetHashCode()
  fullName: NativeCollections.NativeReference<T>.GetHashCode()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetHashCode
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 87
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Get hashCode
  example: []
  syntax:
    content: public override int GetHashCode()
    return:
      type: System.Int32
      description: HashCode
    content.vb: Public Overrides Function GetHashCode() As Integer
  overridden: System.ValueType.GetHashCode
  overload: NativeCollections.NativeReference`1.GetHashCode*
  nameWithType.vb: NativeReference(Of T).GetHashCode()
  fullName.vb: NativeCollections.NativeReference(Of T).GetHashCode()
- uid: NativeCollections.NativeReference`1.ToString
  commentId: M:NativeCollections.NativeReference`1.ToString
  id: ToString
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: NativeReference<T>.ToString()
  fullName: NativeCollections.NativeReference<T>.ToString()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ToString
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 93
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: To string
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.ValueType.ToString
  overload: NativeCollections.NativeReference`1.ToString*
  nameWithType.vb: NativeReference(Of T).ToString()
  fullName.vb: NativeCollections.NativeReference(Of T).ToString()
- uid: NativeCollections.NativeReference`1.op_Implicit(`0*)~NativeCollections.NativeReference{`0}
  commentId: M:NativeCollections.NativeReference`1.op_Implicit(`0*)~NativeCollections.NativeReference{`0}
  id: op_Implicit(`0*)~NativeCollections.NativeReference{`0}
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: implicit operator NativeReference<T>(T*)
  nameWithType: NativeReference<T>.implicit operator NativeReference<T>(T*)
  fullName: NativeCollections.NativeReference<T>.implicit operator NativeCollections.NativeReference<T>(T*)
  type: Operator
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: op_Implicit
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 99
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: As reference
  example: []
  syntax:
    content: >-
      [MethodImpl(MethodImplOptions.AggressiveInlining)]

      public static implicit operator NativeReference<T>(T* handle)
    parameters:
    - id: handle
      type: '{T}*'
    return:
      type: NativeCollections.NativeReference`1
      description: NativeReference
    content.vb: >-
      <MethodImpl(MethodImplOptions.AggressiveInlining)>

      Public Shared Widening Operator CType(handle As T*) As NativeReference(Of T)
  overload: NativeCollections.NativeReference`1.op_Implicit*
  attributes:
  - type: System.Runtime.CompilerServices.MethodImplAttribute
    ctor: System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)
    arguments:
    - type: System.Runtime.CompilerServices.MethodImplOptions
      value: 256
  nameWithType.vb: NativeReference(Of T).CType(T*)
  fullName.vb: NativeCollections.NativeReference(Of T).CType(T*)
  name.vb: CType(T*)
- uid: NativeCollections.NativeReference`1.op_Implicit(NativeCollections.NativeReference{`0})~`0*
  commentId: M:NativeCollections.NativeReference`1.op_Implicit(NativeCollections.NativeReference{`0})~`0*
  id: op_Implicit(NativeCollections.NativeReference{`0})~`0*
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: implicit operator T*(NativeReference<T>)
  nameWithType: NativeReference<T>.implicit operator T*(NativeReference<T>)
  fullName: NativeCollections.NativeReference<T>.implicit operator T*(NativeCollections.NativeReference<T>)
  type: Operator
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: op_Implicit
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 106
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: As handle
  example: []
  syntax:
    content: >-
      [MethodImpl(MethodImplOptions.AggressiveInlining)]

      public static implicit operator T*(NativeReference<T> nativeReference)
    parameters:
    - id: nativeReference
      type: NativeCollections.NativeReference`1
    return:
      type: '{T}*'
      description: Handle
    content.vb: >-
      <MethodImpl(MethodImplOptions.AggressiveInlining)>

      Public Shared Widening Operator CType(nativeReference As NativeReference(Of T)) As T*
  overload: NativeCollections.NativeReference`1.op_Implicit*
  attributes:
  - type: System.Runtime.CompilerServices.MethodImplAttribute
    ctor: System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)
    arguments:
    - type: System.Runtime.CompilerServices.MethodImplOptions
      value: 256
  nameWithType.vb: NativeReference(Of T).CType(NativeReference(Of T))
  fullName.vb: NativeCollections.NativeReference(Of T).CType(NativeCollections.NativeReference(Of T))
  name.vb: CType(NativeReference(Of T))
- uid: NativeCollections.NativeReference`1.op_Implicit(System.IntPtr)~NativeCollections.NativeReference{`0}
  commentId: M:NativeCollections.NativeReference`1.op_Implicit(System.IntPtr)~NativeCollections.NativeReference{`0}
  id: op_Implicit(System.IntPtr)~NativeCollections.NativeReference{`0}
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: implicit operator NativeReference<T>(nint)
  nameWithType: NativeReference<T>.implicit operator NativeReference<T>(nint)
  fullName: NativeCollections.NativeReference<T>.implicit operator NativeCollections.NativeReference<T>(nint)
  type: Operator
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: op_Implicit
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 113
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: As reference
  example: []
  syntax:
    content: >-
      [MethodImpl(MethodImplOptions.AggressiveInlining)]

      public static implicit operator NativeReference<T>(nint handle)
    parameters:
    - id: handle
      type: System.IntPtr
    return:
      type: NativeCollections.NativeReference`1
      description: NativeReference
    content.vb: >-
      <MethodImpl(MethodImplOptions.AggressiveInlining)>

      Public Shared Widening Operator CType(handle As IntPtr) As NativeReference(Of T)
  overload: NativeCollections.NativeReference`1.op_Implicit*
  attributes:
  - type: System.Runtime.CompilerServices.MethodImplAttribute
    ctor: System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)
    arguments:
    - type: System.Runtime.CompilerServices.MethodImplOptions
      value: 256
  nameWithType.vb: NativeReference(Of T).CType(IntPtr)
  fullName.vb: NativeCollections.NativeReference(Of T).CType(System.IntPtr)
  name.vb: CType(IntPtr)
- uid: NativeCollections.NativeReference`1.op_Implicit(NativeCollections.NativeReference{`0})~System.IntPtr
  commentId: M:NativeCollections.NativeReference`1.op_Implicit(NativeCollections.NativeReference{`0})~System.IntPtr
  id: op_Implicit(NativeCollections.NativeReference{`0})~System.IntPtr
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: implicit operator nint(NativeReference<T>)
  nameWithType: NativeReference<T>.implicit operator nint(NativeReference<T>)
  fullName: NativeCollections.NativeReference<T>.implicit operator nint(NativeCollections.NativeReference<T>)
  type: Operator
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: op_Implicit
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 120
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: As handle
  example: []
  syntax:
    content: >-
      [MethodImpl(MethodImplOptions.AggressiveInlining)]

      public static implicit operator nint(NativeReference<T> nativeReference)
    parameters:
    - id: nativeReference
      type: NativeCollections.NativeReference`1
    return:
      type: System.IntPtr
      description: Handle
    content.vb: >-
      <MethodImpl(MethodImplOptions.AggressiveInlining)>

      Public Shared Widening Operator CType(nativeReference As NativeReference(Of T)) As IntPtr
  overload: NativeCollections.NativeReference`1.op_Implicit*
  attributes:
  - type: System.Runtime.CompilerServices.MethodImplAttribute
    ctor: System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)
    arguments:
    - type: System.Runtime.CompilerServices.MethodImplOptions
      value: 256
  nameWithType.vb: NativeReference(Of T).CType(NativeReference(Of T))
  fullName.vb: NativeCollections.NativeReference(Of T).CType(NativeCollections.NativeReference(Of T))
  name.vb: CType(NativeReference(Of T))
- uid: NativeCollections.NativeReference`1.op_Equality(NativeCollections.NativeReference{`0},NativeCollections.NativeReference{`0})
  commentId: M:NativeCollections.NativeReference`1.op_Equality(NativeCollections.NativeReference{`0},NativeCollections.NativeReference{`0})
  id: op_Equality(NativeCollections.NativeReference{`0},NativeCollections.NativeReference{`0})
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: operator ==(NativeReference<T>, NativeReference<T>)
  nameWithType: NativeReference<T>.operator ==(NativeReference<T>, NativeReference<T>)
  fullName: NativeCollections.NativeReference<T>.operator ==(NativeCollections.NativeReference<T>, NativeCollections.NativeReference<T>)
  type: Operator
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: op_Equality
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 129
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Equals
  example: []
  syntax:
    content: public static bool operator ==(NativeReference<T> left, NativeReference<T> right)
    parameters:
    - id: left
      type: NativeCollections.NativeReference`1
      description: Left
    - id: right
      type: NativeCollections.NativeReference`1
      description: Right
    return:
      type: System.Boolean
      description: Equals
    content.vb: Public Shared Operator =(left As NativeReference(Of T), right As NativeReference(Of T)) As Boolean
  overload: NativeCollections.NativeReference`1.op_Equality*
  nameWithType.vb: NativeReference(Of T).=(NativeReference(Of T), NativeReference(Of T))
  fullName.vb: NativeCollections.NativeReference(Of T).=(NativeCollections.NativeReference(Of T), NativeCollections.NativeReference(Of T))
  name.vb: =(NativeReference(Of T), NativeReference(Of T))
- uid: NativeCollections.NativeReference`1.op_Inequality(NativeCollections.NativeReference{`0},NativeCollections.NativeReference{`0})
  commentId: M:NativeCollections.NativeReference`1.op_Inequality(NativeCollections.NativeReference{`0},NativeCollections.NativeReference{`0})
  id: op_Inequality(NativeCollections.NativeReference{`0},NativeCollections.NativeReference{`0})
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: operator !=(NativeReference<T>, NativeReference<T>)
  nameWithType: NativeReference<T>.operator !=(NativeReference<T>, NativeReference<T>)
  fullName: NativeCollections.NativeReference<T>.operator !=(NativeCollections.NativeReference<T>, NativeCollections.NativeReference<T>)
  type: Operator
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: op_Inequality
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 137
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Not equals
  example: []
  syntax:
    content: public static bool operator !=(NativeReference<T> left, NativeReference<T> right)
    parameters:
    - id: left
      type: NativeCollections.NativeReference`1
      description: Left
    - id: right
      type: NativeCollections.NativeReference`1
      description: Right
    return:
      type: System.Boolean
      description: Not equals
    content.vb: Public Shared Operator <>(left As NativeReference(Of T), right As NativeReference(Of T)) As Boolean
  overload: NativeCollections.NativeReference`1.op_Inequality*
  nameWithType.vb: NativeReference(Of T).<>(NativeReference(Of T), NativeReference(Of T))
  fullName.vb: NativeCollections.NativeReference(Of T).<>(NativeCollections.NativeReference(Of T), NativeCollections.NativeReference(Of T))
  name.vb: <>(NativeReference(Of T), NativeReference(Of T))
- uid: NativeCollections.NativeReference`1.Dispose
  commentId: M:NativeCollections.NativeReference`1.Dispose
  id: Dispose
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: NativeReference<T>.Dispose()
  fullName: NativeCollections.NativeReference<T>.Dispose()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Dispose
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 142
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Dispose
  example: []
  syntax:
    content: >-
      [MethodImpl(MethodImplOptions.AggressiveInlining)]

      public void Dispose()
    content.vb: >-
      <MethodImpl(MethodImplOptions.AggressiveInlining)>

      Public Sub Dispose()
  overload: NativeCollections.NativeReference`1.Dispose*
  implements:
  - System.IDisposable.Dispose
  attributes:
  - type: System.Runtime.CompilerServices.MethodImplAttribute
    ctor: System.Runtime.CompilerServices.MethodImplAttribute.#ctor(System.Runtime.CompilerServices.MethodImplOptions)
    arguments:
    - type: System.Runtime.CompilerServices.MethodImplOptions
      value: 256
  nameWithType.vb: NativeReference(Of T).Dispose()
  fullName.vb: NativeCollections.NativeReference(Of T).Dispose()
- uid: NativeCollections.NativeReference`1.Empty
  commentId: P:NativeCollections.NativeReference`1.Empty
  id: Empty
  parent: NativeCollections.NativeReference`1
  langs:
  - csharp
  - vb
  name: Empty
  nameWithType: NativeReference<T>.Empty
  fullName: NativeCollections.NativeReference<T>.Empty
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Empty
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/NativeCollections/NativeCollections/NativeReference.cs
    startLine: 153
  assemblies:
  - Fantasy.Net
  namespace: NativeCollections
  summary: Empty
  example: []
  syntax:
    content: public static NativeReference<T> Empty { get; }
    parameters: []
    return:
      type: NativeCollections.NativeReference`1
    content.vb: Public Shared ReadOnly Property Empty As NativeReference(Of T)
  overload: NativeCollections.NativeReference`1.Empty*
  nameWithType.vb: NativeReference(Of T).Empty
  fullName.vb: NativeCollections.NativeReference(Of T).Empty
references:
- uid: NativeCollections
  commentId: N:NativeCollections
  href: NativeCollections.html
  name: NativeCollections
  nameWithType: NativeCollections
  fullName: NativeCollections
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IEquatable{NativeCollections.NativeReference`1}
  commentId: T:System.IEquatable{NativeCollections.NativeReference`1}
  parent: System
  definition: System.IEquatable`1
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<NativeReference<T>>
  nameWithType: IEquatable<NativeReference<T>>
  fullName: System.IEquatable<NativeCollections.NativeReference<T>>
  nameWithType.vb: IEquatable(Of NativeReference(Of T))
  fullName.vb: System.IEquatable(Of NativeCollections.NativeReference(Of T))
  name.vb: IEquatable(Of NativeReference(Of T))
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - uid: NativeCollections.NativeReference`1
    name: NativeReference
    href: NativeCollections.NativeReference-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - uid: NativeCollections.NativeReference`1
    name: NativeReference
    href: NativeCollections.NativeReference-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: NativeCollections.NativeReference`1.Fantasy.Helper.JsonHelper.ToJson``1
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  parent: Fantasy.Helper.JsonHelper
  definition: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<NativeReference<T>>(NativeReference<T>)
  nameWithType: JsonHelper.ToJson<NativeReference<T>>(NativeReference<T>)
  fullName: Fantasy.Helper.JsonHelper.ToJson<NativeCollections.NativeReference<T>>(NativeCollections.NativeReference<T>)
  nameWithType.vb: JsonHelper.ToJson(Of NativeReference(Of T))(NativeReference(Of T))
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of NativeCollections.NativeReference(Of T))(NativeCollections.NativeReference(Of T))
  name.vb: ToJson(Of NativeReference(Of T))(NativeReference(Of T))
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(NativeCollections.NativeReference{`0})
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - uid: NativeCollections.NativeReference`1
    name: NativeReference
    href: NativeCollections.NativeReference-1.html
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  - name: (
  - uid: NativeCollections.NativeReference`1
    name: NativeReference
    href: NativeCollections.NativeReference-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(NativeCollections.NativeReference{`0})
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: NativeCollections.NativeReference`1
    name: NativeReference
    href: NativeCollections.NativeReference-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: (
  - uid: NativeCollections.NativeReference`1
    name: NativeReference
    href: NativeCollections.NativeReference-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IEquatable`1
  commentId: T:System.IEquatable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  name: IEquatable<T>
  nameWithType: IEquatable<T>
  fullName: System.IEquatable<T>
  nameWithType.vb: IEquatable(Of T)
  fullName.vb: System.IEquatable(Of T)
  name.vb: IEquatable(Of T)
  spec.csharp:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.IEquatable`1
    name: IEquatable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<T>(T)
  nameWithType: JsonHelper.ToJson<T>(T)
  fullName: Fantasy.Helper.JsonHelper.ToJson<T>(T)
  nameWithType.vb: JsonHelper.ToJson(Of T)(T)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of T)(T)
  name.vb: ToJson(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Fantasy.Helper.JsonHelper
  commentId: T:Fantasy.Helper.JsonHelper
  parent: Fantasy.Helper
  href: Fantasy.Helper.JsonHelper.html
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: Fantasy.Helper.JsonHelper
- uid: Fantasy.Helper
  commentId: N:Fantasy.Helper
  href: Fantasy.html
  name: Fantasy.Helper
  nameWithType: Fantasy.Helper
  fullName: Fantasy.Helper
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
- uid: NativeCollections.NativeReference`1.#ctor*
  commentId: Overload:NativeCollections.NativeReference`1.#ctor
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1__ctor__0__
  name: NativeReference
  nameWithType: NativeReference<T>.NativeReference
  fullName: NativeCollections.NativeReference<T>.NativeReference
  nameWithType.vb: NativeReference(Of T).New
  fullName.vb: NativeCollections.NativeReference(Of T).New
  name.vb: New
- uid: '{T}*'
  isExternal: true
  name: T*
  nameWithType: T*
  fullName: T*
  spec.csharp:
  - name: T
  - name: '*'
  spec.vb:
  - name: T
  - name: '*'
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: NativeCollections.NativeReference`1.Handle*
  commentId: Overload:NativeCollections.NativeReference`1.Handle
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_Handle
  name: Handle
  nameWithType: NativeReference<T>.Handle
  fullName: NativeCollections.NativeReference<T>.Handle
  nameWithType.vb: NativeReference(Of T).Handle
  fullName.vb: NativeCollections.NativeReference(Of T).Handle
- uid: NativeCollections.NativeReference`1.Value*
  commentId: Overload:NativeCollections.NativeReference`1.Value
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_Value
  name: Value
  nameWithType: NativeReference<T>.Value
  fullName: NativeCollections.NativeReference<T>.Value
  nameWithType.vb: NativeReference(Of T).Value
  fullName.vb: NativeCollections.NativeReference(Of T).Value
- uid: NativeCollections.NativeReference`1.IsCreated*
  commentId: Overload:NativeCollections.NativeReference`1.IsCreated
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_IsCreated
  name: IsCreated
  nameWithType: NativeReference<T>.IsCreated
  fullName: NativeCollections.NativeReference<T>.IsCreated
  nameWithType.vb: NativeReference(Of T).IsCreated
  fullName.vb: NativeCollections.NativeReference(Of T).IsCreated
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NativeCollections.NativeReference`1.Equals*
  commentId: Overload:NativeCollections.NativeReference`1.Equals
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_Equals_NativeCollections_NativeReference__0__
  name: Equals
  nameWithType: NativeReference<T>.Equals
  fullName: NativeCollections.NativeReference<T>.Equals
  nameWithType.vb: NativeReference(Of T).Equals
  fullName.vb: NativeCollections.NativeReference(Of T).Equals
- uid: System.IEquatable{NativeCollections.NativeReference`1}.Equals(NativeCollections.NativeReference{{T}})
  commentId: M:System.IEquatable{NativeCollections.NativeReference`1}.Equals(NativeCollections.NativeReference{`0})
  parent: System.IEquatable{NativeCollections.NativeReference`1}
  definition: System.IEquatable`1.Equals(`0)
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(NativeReference<T>)
  nameWithType: IEquatable<NativeReference<T>>.Equals(NativeReference<T>)
  fullName: System.IEquatable<NativeCollections.NativeReference<T>>.Equals(NativeCollections.NativeReference<T>)
  nameWithType.vb: IEquatable(Of NativeReference(Of T)).Equals(NativeReference(Of T))
  fullName.vb: System.IEquatable(Of NativeCollections.NativeReference(Of T)).Equals(NativeCollections.NativeReference(Of T))
  name.vb: Equals(NativeReference(Of T))
  spec.csharp:
  - uid: System.IEquatable{NativeCollections.NativeReference`1}.Equals(NativeCollections.NativeReference{`0})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NativeCollections.NativeReference`1
    name: NativeReference
    href: NativeCollections.NativeReference-1.html
  - name: <
  - name: T
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IEquatable{NativeCollections.NativeReference`1}.Equals(NativeCollections.NativeReference{`0})
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - uid: NativeCollections.NativeReference`1
    name: NativeReference
    href: NativeCollections.NativeReference-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: NativeCollections.NativeReference`1
  commentId: T:NativeCollections.NativeReference`1
  parent: NativeCollections
  href: NativeCollections.NativeReference-1.html
  name: NativeReference<T>
  nameWithType: NativeReference<T>
  fullName: NativeCollections.NativeReference<T>
  nameWithType.vb: NativeReference(Of T)
  fullName.vb: NativeCollections.NativeReference(Of T)
  name.vb: NativeReference(Of T)
  spec.csharp:
  - uid: NativeCollections.NativeReference`1
    name: NativeReference
    href: NativeCollections.NativeReference-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: NativeCollections.NativeReference`1
    name: NativeReference
    href: NativeCollections.NativeReference-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.IEquatable`1.Equals(`0)
  commentId: M:System.IEquatable`1.Equals(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  name: Equals(T)
  nameWithType: IEquatable<T>.Equals(T)
  fullName: System.IEquatable<T>.Equals(T)
  nameWithType.vb: IEquatable(Of T).Equals(T)
  fullName.vb: System.IEquatable(Of T).Equals(T)
  spec.csharp:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: System.IEquatable`1.Equals(`0)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.iequatable-1.equals
  - name: (
  - name: T
  - name: )
- uid: System.ValueType.Equals(System.Object)
  commentId: M:System.ValueType.Equals(System.Object)
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  name: Equals(object)
  nameWithType: ValueType.Equals(object)
  fullName: System.ValueType.Equals(object)
  nameWithType.vb: ValueType.Equals(Object)
  fullName.vb: System.ValueType.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.ValueType.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.equals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.ValueType
  commentId: T:System.ValueType
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype
  name: ValueType
  nameWithType: ValueType
  fullName: System.ValueType
- uid: System.ValueType.GetHashCode
  commentId: M:System.ValueType.GetHashCode
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  name: GetHashCode()
  nameWithType: ValueType.GetHashCode()
  fullName: System.ValueType.GetHashCode()
  spec.csharp:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.gethashcode
  - name: (
  - name: )
- uid: NativeCollections.NativeReference`1.GetHashCode*
  commentId: Overload:NativeCollections.NativeReference`1.GetHashCode
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_GetHashCode
  name: GetHashCode
  nameWithType: NativeReference<T>.GetHashCode
  fullName: NativeCollections.NativeReference<T>.GetHashCode
  nameWithType.vb: NativeReference(Of T).GetHashCode
  fullName.vb: NativeCollections.NativeReference(Of T).GetHashCode
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.ValueType.ToString
  commentId: M:System.ValueType.ToString
  parent: System.ValueType
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  name: ToString()
  nameWithType: ValueType.ToString()
  fullName: System.ValueType.ToString()
  spec.csharp:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.ValueType.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.valuetype.tostring
  - name: (
  - name: )
- uid: NativeCollections.NativeReference`1.ToString*
  commentId: Overload:NativeCollections.NativeReference`1.ToString
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_ToString
  name: ToString
  nameWithType: NativeReference<T>.ToString
  fullName: NativeCollections.NativeReference<T>.ToString
  nameWithType.vb: NativeReference(Of T).ToString
  fullName.vb: NativeCollections.NativeReference(Of T).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NativeCollections.NativeReference`1.op_Implicit*
  commentId: Overload:NativeCollections.NativeReference`1.op_Implicit
  name: implicit operator
  nameWithType: NativeReference<T>.implicit operator
  fullName: NativeCollections.NativeReference<T>.implicit operator
  nameWithType.vb: NativeReference(Of T).CType
  fullName.vb: NativeCollections.NativeReference(Of T).CType
  name.vb: CType
  spec.csharp:
  - name: implicit
  - name: " "
  - name: operator
- uid: System.IntPtr
  commentId: T:System.IntPtr
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.intptr
  name: nint
  nameWithType: nint
  fullName: nint
  nameWithType.vb: IntPtr
  fullName.vb: System.IntPtr
  name.vb: IntPtr
- uid: NativeCollections.NativeReference`1.op_Equality*
  commentId: Overload:NativeCollections.NativeReference`1.op_Equality
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_op_Equality_NativeCollections_NativeReference__0__NativeCollections_NativeReference__0__
  name: operator ==
  nameWithType: NativeReference<T>.operator ==
  fullName: NativeCollections.NativeReference<T>.operator ==
  nameWithType.vb: NativeReference(Of T).=
  fullName.vb: NativeCollections.NativeReference(Of T).=
  name.vb: =
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NativeCollections.NativeReference`1.op_Equality*
    name: ==
    href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_op_Equality_NativeCollections_NativeReference__0__NativeCollections_NativeReference__0__
- uid: NativeCollections.NativeReference`1.op_Inequality*
  commentId: Overload:NativeCollections.NativeReference`1.op_Inequality
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_op_Inequality_NativeCollections_NativeReference__0__NativeCollections_NativeReference__0__
  name: operator !=
  nameWithType: NativeReference<T>.operator !=
  fullName: NativeCollections.NativeReference<T>.operator !=
  nameWithType.vb: NativeReference(Of T).<>
  fullName.vb: NativeCollections.NativeReference(Of T).<>
  name.vb: <>
  spec.csharp:
  - name: operator
  - name: " "
  - uid: NativeCollections.NativeReference`1.op_Inequality*
    name: '!='
    href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_op_Inequality_NativeCollections_NativeReference__0__NativeCollections_NativeReference__0__
- uid: NativeCollections.NativeReference`1.Dispose*
  commentId: Overload:NativeCollections.NativeReference`1.Dispose
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_Dispose
  name: Dispose
  nameWithType: NativeReference<T>.Dispose
  fullName: NativeCollections.NativeReference<T>.Dispose
  nameWithType.vb: NativeReference(Of T).Dispose
  fullName.vb: NativeCollections.NativeReference(Of T).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: NativeCollections.NativeReference`1.Empty*
  commentId: Overload:NativeCollections.NativeReference`1.Empty
  href: NativeCollections.NativeReference-1.html#NativeCollections_NativeReference_1_Empty
  name: Empty
  nameWithType: NativeReference<T>.Empty
  fullName: NativeCollections.NativeReference<T>.Empty
  nameWithType.vb: NativeReference(Of T).Empty
  fullName.vb: NativeCollections.NativeReference(Of T).Empty
