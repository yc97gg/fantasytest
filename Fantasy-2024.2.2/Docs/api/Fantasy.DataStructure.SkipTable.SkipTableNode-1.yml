### YamlMime:ManagedReference
items:
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  commentId: T:Fantasy.DataStructure.SkipTable.SkipTableNode`1
  id: SkipTableNode`1
  parent: Fantasy.DataStructure.SkipTable
  children:
  - Fantasy.DataStructure.SkipTable.SkipTableNode`1.#ctor(System.Int64,System.Int64,System.Int64,`0,System.Int32,Fantasy.DataStructure.SkipTable.SkipTableNode{`0},Fantasy.DataStructure.SkipTable.SkipTableNode{`0},Fantasy.DataStructure.SkipTable.SkipTableNode{`0})
  - Fantasy.DataStructure.SkipTable.SkipTableNode`1.Down
  - Fantasy.DataStructure.SkipTable.SkipTableNode`1.Index
  - Fantasy.DataStructure.SkipTable.SkipTableNode`1.Key
  - Fantasy.DataStructure.SkipTable.SkipTableNode`1.Left
  - Fantasy.DataStructure.SkipTable.SkipTableNode`1.Right
  - Fantasy.DataStructure.SkipTable.SkipTableNode`1.SortKey
  - Fantasy.DataStructure.SkipTable.SkipTableNode`1.Value
  - Fantasy.DataStructure.SkipTable.SkipTableNode`1.ViceKey
  langs:
  - csharp
  - vb
  name: SkipTableNode<TValue>
  nameWithType: SkipTableNode<TValue>
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: SkipTableNode
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
    startLine: 6
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.SkipTable
  summary: 跳跃表节点。
  example: []
  syntax:
    content: public class SkipTableNode<TValue>
    typeParameters:
    - id: TValue
      description: 节点的值的类型。
    content.vb: Public Class SkipTableNode(Of TValue)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Fantasy.DataStructure.SkipTable.SkipTableNode`1.Fantasy.Helper.JsonHelper.ToJson``1
  nameWithType.vb: SkipTableNode(Of TValue)
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue)
  name.vb: SkipTableNode(Of TValue)
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.Index
  commentId: F:Fantasy.DataStructure.SkipTable.SkipTableNode`1.Index
  id: Index
  parent: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: SkipTableNode<TValue>.Index
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>.Index
  type: Field
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Index
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
    startLine: 11
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.SkipTable
  summary: 节点在跳跃表中的索引。
  example: []
  syntax:
    content: public int Index
    return:
      type: System.Int32
    content.vb: Public Index As Integer
  nameWithType.vb: SkipTableNode(Of TValue).Index
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue).Index
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.Key
  commentId: F:Fantasy.DataStructure.SkipTable.SkipTableNode`1.Key
  id: Key
  parent: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  langs:
  - csharp
  - vb
  name: Key
  nameWithType: SkipTableNode<TValue>.Key
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>.Key
  type: Field
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Key
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
    startLine: 15
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.SkipTable
  summary: 节点的主键。
  example: []
  syntax:
    content: public long Key
    return:
      type: System.Int64
    content.vb: Public Key As Long
  nameWithType.vb: SkipTableNode(Of TValue).Key
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue).Key
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.SortKey
  commentId: F:Fantasy.DataStructure.SkipTable.SkipTableNode`1.SortKey
  id: SortKey
  parent: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  langs:
  - csharp
  - vb
  name: SortKey
  nameWithType: SkipTableNode<TValue>.SortKey
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>.SortKey
  type: Field
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: SortKey
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
    startLine: 19
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.SkipTable
  summary: 节点的排序键。
  example: []
  syntax:
    content: public long SortKey
    return:
      type: System.Int64
    content.vb: Public SortKey As Long
  nameWithType.vb: SkipTableNode(Of TValue).SortKey
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue).SortKey
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.ViceKey
  commentId: F:Fantasy.DataStructure.SkipTable.SkipTableNode`1.ViceKey
  id: ViceKey
  parent: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  langs:
  - csharp
  - vb
  name: ViceKey
  nameWithType: SkipTableNode<TValue>.ViceKey
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>.ViceKey
  type: Field
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ViceKey
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
    startLine: 23
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.SkipTable
  summary: 节点的副键。
  example: []
  syntax:
    content: public long ViceKey
    return:
      type: System.Int64
    content.vb: Public ViceKey As Long
  nameWithType.vb: SkipTableNode(Of TValue).ViceKey
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue).ViceKey
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.Value
  commentId: F:Fantasy.DataStructure.SkipTable.SkipTableNode`1.Value
  id: Value
  parent: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: SkipTableNode<TValue>.Value
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>.Value
  type: Field
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Value
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
    startLine: 27
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.SkipTable
  summary: 节点存储的值。
  example: []
  syntax:
    content: public TValue Value
    return:
      type: '{TValue}'
    content.vb: Public Value As TValue
  nameWithType.vb: SkipTableNode(Of TValue).Value
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue).Value
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.Left
  commentId: F:Fantasy.DataStructure.SkipTable.SkipTableNode`1.Left
  id: Left
  parent: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  langs:
  - csharp
  - vb
  name: Left
  nameWithType: SkipTableNode<TValue>.Left
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>.Left
  type: Field
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Left
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
    startLine: 31
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.SkipTable
  summary: 指向左侧节点的引用。
  example: []
  syntax:
    content: public SkipTableNode<TValue> Left
    return:
      type: Fantasy.DataStructure.SkipTable.SkipTableNode`1
    content.vb: Public Left As SkipTableNode(Of TValue)
  nameWithType.vb: SkipTableNode(Of TValue).Left
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue).Left
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.Right
  commentId: F:Fantasy.DataStructure.SkipTable.SkipTableNode`1.Right
  id: Right
  parent: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  langs:
  - csharp
  - vb
  name: Right
  nameWithType: SkipTableNode<TValue>.Right
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>.Right
  type: Field
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Right
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
    startLine: 35
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.SkipTable
  summary: 指向右侧节点的引用。
  example: []
  syntax:
    content: public SkipTableNode<TValue> Right
    return:
      type: Fantasy.DataStructure.SkipTable.SkipTableNode`1
    content.vb: Public Right As SkipTableNode(Of TValue)
  nameWithType.vb: SkipTableNode(Of TValue).Right
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue).Right
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.Down
  commentId: F:Fantasy.DataStructure.SkipTable.SkipTableNode`1.Down
  id: Down
  parent: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  langs:
  - csharp
  - vb
  name: Down
  nameWithType: SkipTableNode<TValue>.Down
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>.Down
  type: Field
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Down
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
    startLine: 39
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.SkipTable
  summary: 指向下一层节点的引用。
  example: []
  syntax:
    content: public SkipTableNode<TValue> Down
    return:
      type: Fantasy.DataStructure.SkipTable.SkipTableNode`1
    content.vb: Public Down As SkipTableNode(Of TValue)
  nameWithType.vb: SkipTableNode(Of TValue).Down
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue).Down
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.#ctor(System.Int64,System.Int64,System.Int64,`0,System.Int32,Fantasy.DataStructure.SkipTable.SkipTableNode{`0},Fantasy.DataStructure.SkipTable.SkipTableNode{`0},Fantasy.DataStructure.SkipTable.SkipTableNode{`0})
  commentId: M:Fantasy.DataStructure.SkipTable.SkipTableNode`1.#ctor(System.Int64,System.Int64,System.Int64,`0,System.Int32,Fantasy.DataStructure.SkipTable.SkipTableNode{`0},Fantasy.DataStructure.SkipTable.SkipTableNode{`0},Fantasy.DataStructure.SkipTable.SkipTableNode{`0})
  id: '#ctor(System.Int64,System.Int64,System.Int64,`0,System.Int32,Fantasy.DataStructure.SkipTable.SkipTableNode{`0},Fantasy.DataStructure.SkipTable.SkipTableNode{`0},Fantasy.DataStructure.SkipTable.SkipTableNode{`0})'
  parent: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  langs:
  - csharp
  - vb
  name: SkipTableNode(long, long, long, TValue, int, SkipTableNode<TValue>, SkipTableNode<TValue>, SkipTableNode<TValue>)
  nameWithType: SkipTableNode<TValue>.SkipTableNode(long, long, long, TValue, int, SkipTableNode<TValue>, SkipTableNode<TValue>, SkipTableNode<TValue>)
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>.SkipTableNode(long, long, long, TValue, int, Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>, Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>, Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>)
  type: Constructor
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: .ctor
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/SkipTable/SkipTableNode.cs
    startLine: 52
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.SkipTable
  summary: 初始化跳跃表节点的新实例。
  example: []
  syntax:
    content: public SkipTableNode(long sortKey, long viceKey, long key, TValue value, int index, SkipTableNode<TValue> l, SkipTableNode<TValue> r, SkipTableNode<TValue> d)
    parameters:
    - id: sortKey
      type: System.Int64
      description: 节点的排序键。
    - id: viceKey
      type: System.Int64
      description: 节点的副键。
    - id: key
      type: System.Int64
      description: 节点的主键。
    - id: value
      type: '{TValue}'
      description: 节点存储的值。
    - id: index
      type: System.Int32
      description: 节点在跳跃表中的索引。
    - id: l
      type: Fantasy.DataStructure.SkipTable.SkipTableNode`1
      description: 指向左侧节点的引用。
    - id: r
      type: Fantasy.DataStructure.SkipTable.SkipTableNode`1
      description: 指向右侧节点的引用。
    - id: d
      type: Fantasy.DataStructure.SkipTable.SkipTableNode`1
      description: 指向下一层节点的引用。
    content.vb: Public Sub New(sortKey As Long, viceKey As Long, key As Long, value As TValue, index As Integer, l As SkipTableNode(Of TValue), r As SkipTableNode(Of TValue), d As SkipTableNode(Of TValue))
  overload: Fantasy.DataStructure.SkipTable.SkipTableNode`1.#ctor*
  nameWithType.vb: SkipTableNode(Of TValue).New(Long, Long, Long, TValue, Integer, SkipTableNode(Of TValue), SkipTableNode(Of TValue), SkipTableNode(Of TValue))
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue).New(Long, Long, Long, TValue, Integer, Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue), Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue), Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue))
  name.vb: New(Long, Long, Long, TValue, Integer, SkipTableNode(Of TValue), SkipTableNode(Of TValue), SkipTableNode(Of TValue))
references:
- uid: Fantasy.DataStructure.SkipTable
  commentId: N:Fantasy.DataStructure.SkipTable
  href: Fantasy.html
  name: Fantasy.DataStructure.SkipTable
  nameWithType: Fantasy.DataStructure.SkipTable
  fullName: Fantasy.DataStructure.SkipTable
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.SkipTable
    name: SkipTable
    href: Fantasy.DataStructure.SkipTable.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.SkipTable
    name: SkipTable
    href: Fantasy.DataStructure.SkipTable.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.Fantasy.Helper.JsonHelper.ToJson``1
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  parent: Fantasy.Helper.JsonHelper
  definition: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<SkipTableNode<TValue>>(SkipTableNode<TValue>)
  nameWithType: JsonHelper.ToJson<SkipTableNode<TValue>>(SkipTableNode<TValue>)
  fullName: Fantasy.Helper.JsonHelper.ToJson<Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>>(Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>)
  nameWithType.vb: JsonHelper.ToJson(Of SkipTableNode(Of TValue))(SkipTableNode(Of TValue))
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue))(Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue))
  name.vb: ToJson(Of SkipTableNode(Of TValue))(SkipTableNode(Of TValue))
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.DataStructure.SkipTable.SkipTableNode{`0})
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1
    name: SkipTableNode
    href: Fantasy.DataStructure.SkipTable.SkipTableNode-1.html
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: (
  - uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1
    name: SkipTableNode
    href: Fantasy.DataStructure.SkipTable.SkipTableNode-1.html
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.DataStructure.SkipTable.SkipTableNode{`0})
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1
    name: SkipTableNode
    href: Fantasy.DataStructure.SkipTable.SkipTableNode-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: (
  - uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1
    name: SkipTableNode
    href: Fantasy.DataStructure.SkipTable.SkipTableNode-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<T>(T)
  nameWithType: JsonHelper.ToJson<T>(T)
  fullName: Fantasy.Helper.JsonHelper.ToJson<T>(T)
  nameWithType.vb: JsonHelper.ToJson(Of T)(T)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of T)(T)
  name.vb: ToJson(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Fantasy.Helper.JsonHelper
  commentId: T:Fantasy.Helper.JsonHelper
  parent: Fantasy.Helper
  href: Fantasy.Helper.JsonHelper.html
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: Fantasy.Helper.JsonHelper
- uid: Fantasy.Helper
  commentId: N:Fantasy.Helper
  href: Fantasy.html
  name: Fantasy.Helper
  nameWithType: Fantasy.Helper
  fullName: Fantasy.Helper
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1
  commentId: T:Fantasy.DataStructure.SkipTable.SkipTableNode`1
  parent: Fantasy.DataStructure.SkipTable
  href: Fantasy.DataStructure.SkipTable.SkipTableNode-1.html
  name: SkipTableNode<TValue>
  nameWithType: SkipTableNode<TValue>
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>
  nameWithType.vb: SkipTableNode(Of TValue)
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue)
  name.vb: SkipTableNode(Of TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1
    name: SkipTableNode
    href: Fantasy.DataStructure.SkipTable.SkipTableNode-1.html
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1
    name: SkipTableNode
    href: Fantasy.DataStructure.SkipTable.SkipTableNode-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.SkipTable.SkipTableNode`1.#ctor*
  commentId: Overload:Fantasy.DataStructure.SkipTable.SkipTableNode`1.#ctor
  href: Fantasy.DataStructure.SkipTable.SkipTableNode-1.html#Fantasy_DataStructure_SkipTable_SkipTableNode_1__ctor_System_Int64_System_Int64_System_Int64__0_System_Int32_Fantasy_DataStructure_SkipTable_SkipTableNode__0__Fantasy_DataStructure_SkipTable_SkipTableNode__0__Fantasy_DataStructure_SkipTable_SkipTableNode__0__
  name: SkipTableNode
  nameWithType: SkipTableNode<TValue>.SkipTableNode
  fullName: Fantasy.DataStructure.SkipTable.SkipTableNode<TValue>.SkipTableNode
  nameWithType.vb: SkipTableNode(Of TValue).New
  fullName.vb: Fantasy.DataStructure.SkipTable.SkipTableNode(Of TValue).New
  name.vb: New
