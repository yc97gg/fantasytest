### YamlMime:ManagedReference
items:
- uid: Fantasy.DataBase.MongoDataBase
  commentId: T:Fantasy.DataBase.MongoDataBase
  id: MongoDataBase
  parent: Fantasy.DataBase
  children:
  - Fantasy.DataBase.MongoDataBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  - Fantasy.DataBase.MongoDataBase.Count``1(System.String)
  - Fantasy.DataBase.MongoDataBase.CreateDB(System.Type)
  - Fantasy.DataBase.MongoDataBase.CreateDB``1
  - Fantasy.DataBase.MongoDataBase.CreateIndex``1(System.Object[])
  - Fantasy.DataBase.MongoDataBase.CreateIndex``1(System.String,System.Object[])
  - Fantasy.DataBase.MongoDataBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  - Fantasy.DataBase.MongoDataBase.Exist``1(System.String)
  - Fantasy.DataBase.MongoDataBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  - Fantasy.DataBase.MongoDataBase.First``1(System.String,System.String[],System.String)
  - Fantasy.DataBase.MongoDataBase.Initialize(Fantasy.Scene,System.String,System.String)
  - Fantasy.DataBase.MongoDataBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
  - Fantasy.DataBase.MongoDataBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
  - Fantasy.DataBase.MongoDataBase.Insert``1(``0,System.String)
  - Fantasy.DataBase.MongoDataBase.Query(System.Int64,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Fantasy.Entitas.Entity})
  - Fantasy.DataBase.MongoDataBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  - Fantasy.DataBase.MongoDataBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  - Fantasy.DataBase.MongoDataBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  - Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  - Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  - Fantasy.DataBase.MongoDataBase.QueryJson``1(System.Int64,System.String,System.String)
  - Fantasy.DataBase.MongoDataBase.QueryJson``1(System.String,System.String)
  - Fantasy.DataBase.MongoDataBase.QueryJson``1(System.String,System.String[],System.String)
  - Fantasy.DataBase.MongoDataBase.QueryNotLock``1(System.Int64,System.String)
  - Fantasy.DataBase.MongoDataBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  - Fantasy.DataBase.MongoDataBase.Query``1(System.Int64,System.String)
  - Fantasy.DataBase.MongoDataBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  - Fantasy.DataBase.MongoDataBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
  - Fantasy.DataBase.MongoDataBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  - Fantasy.DataBase.MongoDataBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  - Fantasy.DataBase.MongoDataBase.Remove``1(System.Int64,System.String)
  - Fantasy.DataBase.MongoDataBase.Remove``1(System.Object,System.Int64,System.String)
  - Fantasy.DataBase.MongoDataBase.Save(System.Int64,System.Collections.Generic.List{Fantasy.Entitas.Entity})
  - Fantasy.DataBase.MongoDataBase.Save``1(System.Object,``0,System.String)
  - Fantasy.DataBase.MongoDataBase.Save``1(``0,System.String)
  - Fantasy.DataBase.MongoDataBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  langs:
  - csharp
  - vb
  name: MongoDataBase
  nameWithType: MongoDataBase
  fullName: Fantasy.DataBase.MongoDataBase
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: MongoDataBase
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 16
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 使用 MongoDB 数据库的实现。
  example: []
  syntax:
    content: 'public sealed class MongoDataBase : IDateBase'
    content.vb: Public NotInheritable Class MongoDataBase Implements IDateBase
  inheritance:
  - System.Object
  implements:
  - Fantasy.DataBase.IDateBase
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Fantasy.DataBase.MongoDataBase.Fantasy.Helper.JsonHelper.ToJson``1
- uid: Fantasy.DataBase.MongoDataBase.Initialize(Fantasy.Scene,System.String,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Initialize(Fantasy.Scene,System.String,System.String)
  id: Initialize(Fantasy.Scene,System.String,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Initialize(Scene, string, string)
  nameWithType: MongoDataBase.Initialize(Scene, string, string)
  fullName: Fantasy.DataBase.MongoDataBase.Initialize(Fantasy.Scene, string, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Initialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 34
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 初始化 MongoDB 数据库连接并记录所有集合名。
  example: []
  syntax:
    content: public IDateBase Initialize(Scene scene, string connectionString, string dbName)
    parameters:
    - id: scene
      type: Fantasy.Scene
      description: 所在的Scene。
    - id: connectionString
      type: System.String
      description: 数据库连接字符串。
    - id: dbName
      type: System.String
      description: 数据库名称。
    return:
      type: Fantasy.DataBase.IDateBase
      description: 初始化后的数据库实例。
    content.vb: Public Function Initialize(scene As Scene, connectionString As String, dbName As String) As IDateBase
  overload: Fantasy.DataBase.MongoDataBase.Initialize*
  implements:
  - Fantasy.DataBase.IDateBase.Initialize(Fantasy.Scene,System.String,System.String)
  nameWithType.vb: MongoDataBase.Initialize(Scene, String, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Initialize(Fantasy.Scene, String, String)
  name.vb: Initialize(Scene, String, String)
- uid: Fantasy.DataBase.MongoDataBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  id: Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Sum<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, string)
  nameWithType: MongoDataBase.Sum<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, string)
  fullName: Fantasy.DataBase.MongoDataBase.Sum<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Linq.Expressions.Expression<System.Func<T, object>>, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Sum
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 58
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 对满足条件的文档中的某个数值字段进行求和操作。
  example: []
  syntax:
    content: 'public FTask<long> Sum<T>(Expression<Func<T, bool>> filter, Expression<Func<T, object>> sumExpression, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 用于筛选文档的表达式。
    - id: sumExpression
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
      description: 要对其进行求和的字段表达式。
    - id: collection
      type: System.String
      description: 集合名称，可选。如果未指定，将使用实体类型的名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask{System.Int64}
      description: 满足条件的文档中指定字段的求和结果。
    content.vb: Public Function Sum(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), sumExpression As Expression(Of Func(Of T, Object)), collection As String = Nothing) As FTask(Of Long)
  overload: Fantasy.DataBase.MongoDataBase.Sum*
  implements:
  - Fantasy.DataBase.IDateBase.Sum``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{T},System.Object}},System.String)
  nameWithType.vb: MongoDataBase.Sum(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Sum(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of T, Object)), String)
  name.vb: Sum(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), String)
- uid: Fantasy.DataBase.MongoDataBase.Count``1(System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Count``1(System.String)
  id: Count``1(System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Count<T>(string)
  nameWithType: MongoDataBase.Count<T>(string)
  fullName: Fantasy.DataBase.MongoDataBase.Count<T>(string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Count
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 107
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 统计指定集合中满足条件的文档数量。
  example: []
  syntax:
    content: 'public FTask<long> Count<T>(string collection = null) where T : Entity'
    parameters:
    - id: collection
      type: System.String
      description: 集合名称，可选。如果未指定，将使用实体类型的名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask{System.Int64}
      description: 满足条件的文档数量。
    content.vb: Public Function Count(Of T As Entity)(collection As String = Nothing) As FTask(Of Long)
  overload: Fantasy.DataBase.MongoDataBase.Count*
  implements:
  - Fantasy.DataBase.IDateBase.Count``1(System.String)
  nameWithType.vb: MongoDataBase.Count(Of T)(String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Count(Of T)(String)
  name.vb: Count(Of T)(String)
- uid: Fantasy.DataBase.MongoDataBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  id: Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Count<T>(Expression<Func<T, bool>>, string)
  nameWithType: MongoDataBase.Count<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.MongoDataBase.Count<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Count
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 119
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 统计指定集合中满足条件的文档数量。
  example: []
  syntax:
    content: 'public FTask<long> Count<T>(Expression<Func<T, bool>> filter, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 用于筛选文档的表达式。
    - id: collection
      type: System.String
      description: 集合名称，可选。如果未指定，将使用实体类型的名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask{System.Int64}
      description: 满足条件的文档数量。
    content.vb: Public Function Count(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), collection As String = Nothing) As FTask(Of Long)
  overload: Fantasy.DataBase.MongoDataBase.Count*
  implements:
  - Fantasy.DataBase.IDateBase.Count``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  nameWithType.vb: MongoDataBase.Count(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Count(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Count(Of T)(Expression(Of Func(Of T, Boolean)), String)
- uid: Fantasy.DataBase.MongoDataBase.Exist``1(System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Exist``1(System.String)
  id: Exist``1(System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Exist<T>(string)
  nameWithType: MongoDataBase.Exist<T>(string)
  fullName: Fantasy.DataBase.MongoDataBase.Exist<T>(string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Exist
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 134
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 判断指定集合中是否存在文档。
  example: []
  syntax:
    content: 'public FTask<bool> Exist<T>(string collection = null) where T : Entity'
    parameters:
    - id: collection
      type: System.String
      description: 集合名称，可选。如果未指定，将使用实体类型的名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask{System.Boolean}
      description: 如果存在文档则返回 true，否则返回 false。
    content.vb: Public Function Exist(Of T As Entity)(collection As String = Nothing) As FTask(Of Boolean)
  overload: Fantasy.DataBase.MongoDataBase.Exist*
  implements:
  - Fantasy.DataBase.IDateBase.Exist``1(System.String)
  nameWithType.vb: MongoDataBase.Exist(Of T)(String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Exist(Of T)(String)
  name.vb: Exist(Of T)(String)
- uid: Fantasy.DataBase.MongoDataBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  id: Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Exist<T>(Expression<Func<T, bool>>, string)
  nameWithType: MongoDataBase.Exist<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.MongoDataBase.Exist<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Exist
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 146
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 判断指定集合中是否存在满足条件的文档。
  example: []
  syntax:
    content: 'public FTask<bool> Exist<T>(Expression<Func<T, bool>> filter, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 用于筛选文档的表达式。
    - id: collection
      type: System.String
      description: 集合名称，可选。如果未指定，将使用实体类型的名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask{System.Boolean}
      description: 如果存在满足条件的文档则返回 true，否则返回 false。
    content.vb: Public Function Exist(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), collection As String = Nothing) As FTask(Of Boolean)
  overload: Fantasy.DataBase.MongoDataBase.Exist*
  implements:
  - Fantasy.DataBase.IDateBase.Exist``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  nameWithType.vb: MongoDataBase.Exist(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Exist(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Exist(Of T)(Expression(Of Func(Of T, Boolean)), String)
- uid: Fantasy.DataBase.MongoDataBase.QueryNotLock``1(System.Int64,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.QueryNotLock``1(System.Int64,System.String)
  id: QueryNotLock``1(System.Int64,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: QueryNotLock<T>(long, string)
  nameWithType: MongoDataBase.QueryNotLock<T>(long, string)
  fullName: Fantasy.DataBase.MongoDataBase.QueryNotLock<T>(long, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: QueryNotLock
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 162
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 在不加数据库锁定的情况下，查询指定 ID 的文档。
  example: []
  syntax:
    content: 'public FTask<T> QueryNotLock<T>(long id, string collection = null) where T : Entity'
    parameters:
    - id: id
      type: System.Int64
      description: 要查询的文档 ID。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{{T}}
      description: 查询到的文档。
    content.vb: Public Function QueryNotLock(Of T As Entity)(id As Long, collection As String = Nothing) As FTask(Of T)
  overload: Fantasy.DataBase.MongoDataBase.QueryNotLock*
  implements:
  - Fantasy.DataBase.IDateBase.QueryNotLock``1(System.Int64,System.String)
  nameWithType.vb: MongoDataBase.QueryNotLock(Of T)(Long, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.QueryNotLock(Of T)(Long, String)
  name.vb: QueryNotLock(Of T)(Long, String)
- uid: Fantasy.DataBase.MongoDataBase.Query``1(System.Int64,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Query``1(System.Int64,System.String)
  id: Query``1(System.Int64,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Query<T>(long, string)
  nameWithType: MongoDataBase.Query<T>(long, string)
  fullName: Fantasy.DataBase.MongoDataBase.Query<T>(long, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Query
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 176
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 查询指定 ID 的文档，并加数据库锁定以确保数据一致性。
  example: []
  syntax:
    content: 'public FTask<T> Query<T>(long id, string collection = null) where T : Entity'
    parameters:
    - id: id
      type: System.Int64
      description: 要查询的文档 ID。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{{T}}
      description: 查询到的文档。
    content.vb: Public Function Query(Of T As Entity)(id As Long, collection As String = Nothing) As FTask(Of T)
  overload: Fantasy.DataBase.MongoDataBase.Query*
  implements:
  - Fantasy.DataBase.IDateBase.Query``1(System.Int64,System.String)
  nameWithType.vb: MongoDataBase.Query(Of T)(Long, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Query(Of T)(Long, String)
  name.vb: Query(Of T)(Long, String)
- uid: Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  id: QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string)
  nameWithType: MongoDataBase.QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string)
  fullName: Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: QueryCountAndDatesByPage
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 195
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 通过分页查询并返回满足条件的文档数量和日期列表（不加锁）。
  example: []
  syntax:
    content: 'public FTask<(int count, List<T> dates)> QueryCountAndDatesByPage<T>(Expression<Func<T, bool>> filter, int pageIndex, int pageSize, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 查询过滤条件。
    - id: pageIndex
      type: System.Int32
      description: 页码。
    - id: pageSize
      type: System.Int32
      description: 每页大小。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.ValueTuple{System.Int32,System.Collections.Generic.List{{T}}}}
      description: 满足条件的文档数量和日期列表。
    content.vb: Public Function QueryCountAndDatesByPage(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), pageIndex As Integer, pageSize As Integer, collection As String = Nothing) As FTask(Of (count As Integer, dates As List(Of T)))
  overload: Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage*
  implements:
  - Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Int32,System.Int32,System.String)
  nameWithType.vb: MongoDataBase.QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String)
  name.vb: QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
- uid: Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  id: QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  nameWithType: MongoDataBase.QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  fullName: Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string[], string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: QueryCountAndDatesByPage
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 216
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 通过分页查询并返回满足条件的文档数量和日期列表（加锁）。
  example: []
  syntax:
    content: 'public FTask<(int count, List<T> dates)> QueryCountAndDatesByPage<T>(Expression<Func<T, bool>> filter, int pageIndex, int pageSize, string[] cols, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 查询过滤条件。
    - id: pageIndex
      type: System.Int32
      description: 页码。
    - id: pageSize
      type: System.Int32
      description: 每页大小。
    - id: cols
      type: System.String[]
      description: 要查询的列名称数组。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.ValueTuple{System.Int32,System.Collections.Generic.List{{T}}}}
      description: 满足条件的文档数量和日期列表。
    content.vb: Public Function QueryCountAndDatesByPage(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), pageIndex As Integer, pageSize As Integer, cols As String(), collection As String = Nothing) As FTask(Of (count As Integer, dates As List(Of T)))
  overload: Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage*
  implements:
  - Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  nameWithType.vb: MongoDataBase.QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String(), String)
  name.vb: QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
- uid: Fantasy.DataBase.MongoDataBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  id: QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: QueryByPage<T>(Expression<Func<T, bool>>, int, int, string)
  nameWithType: MongoDataBase.QueryByPage<T>(Expression<Func<T, bool>>, int, int, string)
  fullName: Fantasy.DataBase.MongoDataBase.QueryByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: QueryByPage
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 238
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 通过分页查询并返回满足条件的文档列表（不加锁）。
  example: []
  syntax:
    content: 'public FTask<List<T>> QueryByPage<T>(Expression<Func<T, bool>> filter, int pageIndex, int pageSize, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 查询过滤条件。
    - id: pageIndex
      type: System.Int32
      description: 页码。
    - id: pageSize
      type: System.Int32
      description: 每页大小。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.Collections.Generic.List{{T}}}
      description: 满足条件的文档列表。
    content.vb: Public Function QueryByPage(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), pageIndex As Integer, pageSize As Integer, collection As String = Nothing) As FTask(Of List(Of T))
  overload: Fantasy.DataBase.MongoDataBase.QueryByPage*
  implements:
  - Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Int32,System.Int32,System.String)
  nameWithType.vb: MongoDataBase.QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.QueryByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String)
  name.vb: QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
- uid: Fantasy.DataBase.MongoDataBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  id: QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: QueryByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  nameWithType: MongoDataBase.QueryByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  fullName: Fantasy.DataBase.MongoDataBase.QueryByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string[], string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: QueryByPage
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 259
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 通过分页查询并返回满足条件的文档列表（加锁）。
  example: []
  syntax:
    content: 'public FTask<List<T>> QueryByPage<T>(Expression<Func<T, bool>> filter, int pageIndex, int pageSize, string[] cols, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 查询过滤条件。
    - id: pageIndex
      type: System.Int32
      description: 页码。
    - id: pageSize
      type: System.Int32
      description: 每页大小。
    - id: cols
      type: System.String[]
      description: 要查询的列名称数组。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.Collections.Generic.List{{T}}}
      description: 满足条件的文档列表。
    content.vb: Public Function QueryByPage(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), pageIndex As Integer, pageSize As Integer, cols As String(), collection As String = Nothing) As FTask(Of List(Of T))
  overload: Fantasy.DataBase.MongoDataBase.QueryByPage*
  implements:
  - Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  nameWithType.vb: MongoDataBase.QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.QueryByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String(), String)
  name.vb: QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
- uid: Fantasy.DataBase.MongoDataBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  id: QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: QueryByPageOrderBy<T>(Expression<Func<T, bool>>, int, int, Expression<Func<T, object>>, bool, string)
  nameWithType: MongoDataBase.QueryByPageOrderBy<T>(Expression<Func<T, bool>>, int, int, Expression<Func<T, object>>, bool, string)
  fullName: Fantasy.DataBase.MongoDataBase.QueryByPageOrderBy<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, System.Linq.Expressions.Expression<System.Func<T, object>>, bool, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: QueryByPageOrderBy
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 287
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 通过分页查询并返回满足条件的文档列表，并按指定表达式进行排序（加锁）。
  example: []
  syntax:
    content: 'public FTask<List<T>> QueryByPageOrderBy<T>(Expression<Func<T, bool>> filter, int pageIndex, int pageSize, Expression<Func<T, object>> orderByExpression, bool isAsc = true, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 查询过滤条件。
    - id: pageIndex
      type: System.Int32
      description: 页码。
    - id: pageSize
      type: System.Int32
      description: 每页大小。
    - id: orderByExpression
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
      description: 排序表达式。
    - id: isAsc
      type: System.Boolean
      description: 是否升序排序。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.Collections.Generic.List{{T}}}
      description: 满足条件的文档列表。
    content.vb: Public Function QueryByPageOrderBy(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), pageIndex As Integer, pageSize As Integer, orderByExpression As Expression(Of Func(Of T, Object)), isAsc As Boolean = True, collection As String = Nothing) As FTask(Of List(Of T))
  overload: Fantasy.DataBase.MongoDataBase.QueryByPageOrderBy*
  implements:
  - Fantasy.DataBase.IDateBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{{T},System.Object}},System.Boolean,System.String)
  nameWithType.vb: MongoDataBase.QueryByPageOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, Expression(Of Func(Of T, Object)), Boolean, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.QueryByPageOrderBy(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, System.Linq.Expressions.Expression(Of System.Func(Of T, Object)), Boolean, String)
  name.vb: QueryByPageOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, Expression(Of Func(Of T, Object)), Boolean, String)
- uid: Fantasy.DataBase.MongoDataBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  id: First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: First<T>(Expression<Func<T, bool>>, string)
  nameWithType: MongoDataBase.First<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.MongoDataBase.First<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: First
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 310
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 通过指定过滤条件查询并返回满足条件的第一个文档（加锁）。
  example: []
  syntax:
    content: 'public FTask<T?> First<T>(Expression<Func<T, bool>> filter, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 查询过滤条件。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{{T}}
      description: 满足条件的第一个文档，如果未找到则为 null。
    content.vb: Public Function First(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), collection As String = Nothing) As FTask(Of T)
  overload: Fantasy.DataBase.MongoDataBase.First*
  implements:
  - Fantasy.DataBase.IDateBase.First``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  nameWithType.vb: MongoDataBase.First(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.First(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: First(Of T)(Expression(Of Func(Of T, Boolean)), String)
- uid: Fantasy.DataBase.MongoDataBase.First``1(System.String,System.String[],System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.First``1(System.String,System.String[],System.String)
  id: First``1(System.String,System.String[],System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: First<T>(string, string[], string)
  nameWithType: MongoDataBase.First<T>(string, string[], string)
  fullName: Fantasy.DataBase.MongoDataBase.First<T>(string, string[], string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: First
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 328
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 通过指定 JSON 格式查询并返回满足条件的第一个文档（加锁）。
  example: []
  syntax:
    content: 'public FTask<T> First<T>(string json, string[] cols, string collection = null) where T : Entity'
    parameters:
    - id: json
      type: System.String
      description: JSON 查询条件。
    - id: cols
      type: System.String[]
      description: 要查询的列名称数组。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{{T}}
      description: 满足条件的第一个文档。
    content.vb: Public Function First(Of T As Entity)(json As String, cols As String(), collection As String = Nothing) As FTask(Of T)
  overload: Fantasy.DataBase.MongoDataBase.First*
  implements:
  - Fantasy.DataBase.IDateBase.First``1(System.String,System.String[],System.String)
  nameWithType.vb: MongoDataBase.First(Of T)(String, String(), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.First(Of T)(String, String(), String)
  name.vb: First(Of T)(String, String(), String)
- uid: Fantasy.DataBase.MongoDataBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  id: QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: QueryOrderBy<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, bool, string)
  nameWithType: MongoDataBase.QueryOrderBy<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, bool, string)
  fullName: Fantasy.DataBase.MongoDataBase.QueryOrderBy<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Linq.Expressions.Expression<System.Func<T, object>>, bool, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: QueryOrderBy
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 358
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 通过指定过滤条件查询并返回满足条件的文档列表，并按指定表达式进行排序（加锁）。
  example: []
  syntax:
    content: 'public FTask<List<T>> QueryOrderBy<T>(Expression<Func<T, bool>> filter, Expression<Func<T, object>> orderByExpression, bool isAsc = true, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 查询过滤条件。
    - id: orderByExpression
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
      description: 排序表达式。
    - id: isAsc
      type: System.Boolean
      description: 是否升序排序。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.Collections.Generic.List{{T}}}
      description: 满足条件的文档列表。
    content.vb: Public Function QueryOrderBy(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), orderByExpression As Expression(Of Func(Of T, Object)), isAsc As Boolean = True, collection As String = Nothing) As FTask(Of List(Of T))
  overload: Fantasy.DataBase.MongoDataBase.QueryOrderBy*
  implements:
  - Fantasy.DataBase.IDateBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{T},System.Object}},System.Boolean,System.String)
  nameWithType.vb: MongoDataBase.QueryOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), Boolean, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.QueryOrderBy(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of T, Object)), Boolean, String)
  name.vb: QueryOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), Boolean, String)
- uid: Fantasy.DataBase.MongoDataBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  id: Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Query<T>(Expression<Func<T, bool>>, string)
  nameWithType: MongoDataBase.Query<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.MongoDataBase.Query<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Query
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 380
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 通过指定过滤条件查询并返回满足条件的文档列表（加锁）。
  example: []
  syntax:
    content: 'public FTask<List<T>> Query<T>(Expression<Func<T, bool>> filter, string collection = null) where T : Entity'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 查询过滤条件。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.Collections.Generic.List{{T}}}
      description: 满足条件的文档列表。
    content.vb: Public Function Query(Of T As Entity)(filter As Expression(Of Func(Of T, Boolean)), collection As String = Nothing) As FTask(Of List(Of T))
  overload: Fantasy.DataBase.MongoDataBase.Query*
  implements:
  - Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  nameWithType.vb: MongoDataBase.Query(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Query(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Query(Of T)(Expression(Of Func(Of T, Boolean)), String)
- uid: Fantasy.DataBase.MongoDataBase.Query(System.Int64,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Fantasy.Entitas.Entity})
  commentId: M:Fantasy.DataBase.MongoDataBase.Query(System.Int64,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Fantasy.Entitas.Entity})
  id: Query(System.Int64,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Fantasy.Entitas.Entity})
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Query(long, List<string>, List<Entity>)
  nameWithType: MongoDataBase.Query(long, List<string>, List<Entity>)
  fullName: Fantasy.DataBase.MongoDataBase.Query(long, System.Collections.Generic.List<string>, System.Collections.Generic.List<Fantasy.Entitas.Entity>)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Query
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 397
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 根据指定 ID 加锁查询多个集合中的文档。
  example: []
  syntax:
    content: public FTask Query(long id, List<string> collectionNames, List<Entity> result)
    parameters:
    - id: id
      type: System.Int64
      description: 文档 ID。
    - id: collectionNames
      type: System.Collections.Generic.List{System.String}
      description: 要查询的集合名称列表。
    - id: result
      type: System.Collections.Generic.List{Fantasy.Entitas.Entity}
      description: 查询结果存储列表。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function Query(id As Long, collectionNames As List(Of String), result As List(Of Entity)) As FTask
  overload: Fantasy.DataBase.MongoDataBase.Query*
  implements:
  - Fantasy.DataBase.IDateBase.Query(System.Int64,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Fantasy.Entitas.Entity})
  nameWithType.vb: MongoDataBase.Query(Long, List(Of String), List(Of Entity))
  fullName.vb: Fantasy.DataBase.MongoDataBase.Query(Long, System.Collections.Generic.List(Of String), System.Collections.Generic.List(Of Fantasy.Entitas.Entity))
  name.vb: Query(Long, List(Of String), List(Of Entity))
- uid: Fantasy.DataBase.MongoDataBase.QueryJson``1(System.String,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.QueryJson``1(System.String,System.String)
  id: QueryJson``1(System.String,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: QueryJson<T>(string, string)
  nameWithType: MongoDataBase.QueryJson<T>(string, string)
  fullName: Fantasy.DataBase.MongoDataBase.QueryJson<T>(string, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: QueryJson
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 429
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 根据指定的 JSON 查询条件查询并返回满足条件的文档列表（加锁）。
  example: []
  syntax:
    content: 'public FTask<List<T>> QueryJson<T>(string json, string collection = null) where T : Entity'
    parameters:
    - id: json
      type: System.String
      description: JSON 查询条件。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.Collections.Generic.List{{T}}}
      description: 满足条件的文档列表。
    content.vb: Public Function QueryJson(Of T As Entity)(json As String, collection As String = Nothing) As FTask(Of List(Of T))
  overload: Fantasy.DataBase.MongoDataBase.QueryJson*
  implements:
  - Fantasy.DataBase.IDateBase.QueryJson``1(System.String,System.String)
  nameWithType.vb: MongoDataBase.QueryJson(Of T)(String, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.QueryJson(Of T)(String, String)
  name.vb: QueryJson(Of T)(String, String)
- uid: Fantasy.DataBase.MongoDataBase.QueryJson``1(System.String,System.String[],System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.QueryJson``1(System.String,System.String[],System.String)
  id: QueryJson``1(System.String,System.String[],System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: QueryJson<T>(string, string[], string)
  nameWithType: MongoDataBase.QueryJson<T>(string, string[], string)
  fullName: Fantasy.DataBase.MongoDataBase.QueryJson<T>(string, string[], string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: QueryJson
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 448
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 根据指定的 JSON 查询条件查询并返回满足条件的文档列表，并选择指定的列（加锁）。
  example: []
  syntax:
    content: 'public FTask<List<T>> QueryJson<T>(string json, string[] cols, string collection = null) where T : Entity'
    parameters:
    - id: json
      type: System.String
      description: JSON 查询条件。
    - id: cols
      type: System.String[]
      description: 要查询的列名称数组。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.Collections.Generic.List{{T}}}
      description: 满足条件的文档列表。
    content.vb: Public Function QueryJson(Of T As Entity)(json As String, cols As String(), collection As String = Nothing) As FTask(Of List(Of T))
  overload: Fantasy.DataBase.MongoDataBase.QueryJson*
  implements:
  - Fantasy.DataBase.IDateBase.QueryJson``1(System.String,System.String[],System.String)
  nameWithType.vb: MongoDataBase.QueryJson(Of T)(String, String(), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.QueryJson(Of T)(String, String(), String)
  name.vb: QueryJson(Of T)(String, String(), String)
- uid: Fantasy.DataBase.MongoDataBase.QueryJson``1(System.Int64,System.String,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.QueryJson``1(System.Int64,System.String,System.String)
  id: QueryJson``1(System.Int64,System.String,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: QueryJson<T>(long, string, string)
  nameWithType: MongoDataBase.QueryJson<T>(long, string, string)
  fullName: Fantasy.DataBase.MongoDataBase.QueryJson<T>(long, string, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: QueryJson
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 477
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 根据指定的 JSON 查询条件和任务 ID 查询并返回满足条件的文档列表（加锁）。
  example: []
  syntax:
    content: 'public FTask<List<T>> QueryJson<T>(long taskId, string json, string collection = null) where T : Entity'
    parameters:
    - id: taskId
      type: System.Int64
      description: 任务 ID。
    - id: json
      type: System.String
      description: JSON 查询条件。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.Collections.Generic.List{{T}}}
      description: 满足条件的文档列表。
    content.vb: Public Function QueryJson(Of T As Entity)(taskId As Long, json As String, collection As String = Nothing) As FTask(Of List(Of T))
  overload: Fantasy.DataBase.MongoDataBase.QueryJson*
  implements:
  - Fantasy.DataBase.IDateBase.QueryJson``1(System.Int64,System.String,System.String)
  nameWithType.vb: MongoDataBase.QueryJson(Of T)(Long, String, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.QueryJson(Of T)(Long, String, String)
  name.vb: QueryJson(Of T)(Long, String, String)
- uid: Fantasy.DataBase.MongoDataBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
  id: Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Query<T>(Expression<Func<T, bool>>, string[], string)
  nameWithType: MongoDataBase.Query<T>(Expression<Func<T, bool>>, string[], string)
  fullName: Fantasy.DataBase.MongoDataBase.Query<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string[], string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Query
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 496
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 根据指定过滤条件查询并返回满足条件的文档列表，选择指定的列（加锁）。
  example: []
  syntax:
    content: 'public FTask<List<T>> Query<T>(Expression<Func<T, bool>> filter, string[] cols, string collection = null) where T : class'
    parameters:
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 查询过滤条件。
    - id: cols
      type: System.String[]
      description: 要查询的列名称数组。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 文档实体类型。
    return:
      type: Fantasy.Async.FTask{System.Collections.Generic.List{{T}}}
      description: 满足条件的文档列表。
    content.vb: Public Function Query(Of T As Class)(filter As Expression(Of Func(Of T, Boolean)), cols As String(), collection As String = Nothing) As FTask(Of List(Of T))
  overload: Fantasy.DataBase.MongoDataBase.Query*
  implements:
  - Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String[],System.String)
  nameWithType.vb: MongoDataBase.Query(Of T)(Expression(Of Func(Of T, Boolean)), String(), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Query(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String(), String)
  name.vb: Query(Of T)(Expression(Of Func(Of T, Boolean)), String(), String)
- uid: Fantasy.DataBase.MongoDataBase.Save``1(System.Object,``0,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Save``1(System.Object,``0,System.String)
  id: Save``1(System.Object,``0,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Save<T>(object, T, string)
  nameWithType: MongoDataBase.Save<T>(object, T, string)
  fullName: Fantasy.DataBase.MongoDataBase.Save<T>(object, T, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Save
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 523
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 保存实体对象到数据库（加锁）。
  example: []
  syntax:
    content: 'public FTask Save<T>(object transactionSession, T entity, string collection = null) where T : Entity'
    parameters:
    - id: transactionSession
      type: System.Object
      description: 事务会话对象。
    - id: entity
      type: '{T}'
      description: 要保存的实体对象。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function Save(Of T As Entity)(transactionSession As Object, entity As T, collection As String = Nothing) As FTask
  overload: Fantasy.DataBase.MongoDataBase.Save*
  implements:
  - Fantasy.DataBase.IDateBase.Save``1(System.Object,{T},System.String)
  nameWithType.vb: MongoDataBase.Save(Of T)(Object, T, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Save(Of T)(Object, T, String)
  name.vb: Save(Of T)(Object, T, String)
- uid: Fantasy.DataBase.MongoDataBase.Save``1(``0,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Save``1(``0,System.String)
  id: Save``1(``0,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Save<T>(T, string)
  nameWithType: MongoDataBase.Save<T>(T, string)
  fullName: Fantasy.DataBase.MongoDataBase.Save<T>(T, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Save
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 547
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 保存实体对象到数据库（加锁）。
  example: []
  syntax:
    content: 'public FTask Save<T>(T entity, string collection = null) where T : Entity, new()'
    parameters:
    - id: entity
      type: '{T}'
      description: 要保存的实体对象。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function Save(Of T As {Entity, New})(entity As T, collection As String = Nothing) As FTask
  overload: Fantasy.DataBase.MongoDataBase.Save*
  implements:
  - Fantasy.DataBase.IDateBase.Save``1({T},System.String)
  nameWithType.vb: MongoDataBase.Save(Of T)(T, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Save(Of T)(T, String)
  name.vb: Save(Of T)(T, String)
- uid: Fantasy.DataBase.MongoDataBase.Save(System.Int64,System.Collections.Generic.List{Fantasy.Entitas.Entity})
  commentId: M:Fantasy.DataBase.MongoDataBase.Save(System.Int64,System.Collections.Generic.List{Fantasy.Entitas.Entity})
  id: Save(System.Int64,System.Collections.Generic.List{Fantasy.Entitas.Entity})
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Save(long, List<Entity>)
  nameWithType: MongoDataBase.Save(long, List<Entity>)
  fullName: Fantasy.DataBase.MongoDataBase.Save(long, System.Collections.Generic.List<Fantasy.Entitas.Entity>)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Save
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 594
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 保存多个实体对象到数据库（加锁）。
  example: []
  syntax:
    content: public FTask Save(long id, List<Entity> entities)
    parameters:
    - id: id
      type: System.Int64
      description: 文档 ID。
    - id: entities
      type: System.Collections.Generic.List{Fantasy.Entitas.Entity}
      description: 要保存的实体对象列表。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function Save(id As Long, entities As List(Of Entity)) As FTask
  overload: Fantasy.DataBase.MongoDataBase.Save*
  implements:
  - Fantasy.DataBase.IDateBase.Save(System.Int64,System.Collections.Generic.List{Fantasy.Entitas.Entity})
  nameWithType.vb: MongoDataBase.Save(Long, List(Of Entity))
  fullName.vb: Fantasy.DataBase.MongoDataBase.Save(Long, System.Collections.Generic.List(Of Fantasy.Entitas.Entity))
  name.vb: Save(Long, List(Of Entity))
- uid: Fantasy.DataBase.MongoDataBase.Insert``1(``0,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Insert``1(``0,System.String)
  id: Insert``1(``0,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Insert<T>(T, string)
  nameWithType: MongoDataBase.Insert<T>(T, string)
  fullName: Fantasy.DataBase.MongoDataBase.Insert<T>(T, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Insert
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 631
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 插入单个实体对象到数据库（加锁）。
  example: []
  syntax:
    content: 'public FTask Insert<T>(T entity, string collection = null) where T : Entity, new()'
    parameters:
    - id: entity
      type: '{T}'
      description: 要插入的实体对象。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function Insert(Of T As {Entity, New})(entity As T, collection As String = Nothing) As FTask
  overload: Fantasy.DataBase.MongoDataBase.Insert*
  implements:
  - Fantasy.DataBase.IDateBase.Insert``1({T},System.String)
  nameWithType.vb: MongoDataBase.Insert(Of T)(T, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Insert(Of T)(T, String)
  name.vb: Insert(Of T)(T, String)
- uid: Fantasy.DataBase.MongoDataBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
  id: InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: InsertBatch<T>(IEnumerable<T>, string)
  nameWithType: MongoDataBase.InsertBatch<T>(IEnumerable<T>, string)
  fullName: Fantasy.DataBase.MongoDataBase.InsertBatch<T>(System.Collections.Generic.IEnumerable<T>, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: InsertBatch
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 642
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 批量插入实体对象列表到数据库（加锁）。
  example: []
  syntax:
    content: 'public FTask InsertBatch<T>(IEnumerable<T> list, string collection = null) where T : Entity, new()'
    parameters:
    - id: list
      type: System.Collections.Generic.IEnumerable{{T}}
      description: 要插入的实体对象列表。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function InsertBatch(Of T As {Entity, New})(list As IEnumerable(Of T), collection As String = Nothing) As FTask
  overload: Fantasy.DataBase.MongoDataBase.InsertBatch*
  implements:
  - Fantasy.DataBase.IDateBase.InsertBatch``1(System.Collections.Generic.IEnumerable{{T}},System.String)
  nameWithType.vb: MongoDataBase.InsertBatch(Of T)(IEnumerable(Of T), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.InsertBatch(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  name.vb: InsertBatch(Of T)(IEnumerable(Of T), String)
- uid: Fantasy.DataBase.MongoDataBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
  id: InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: InsertBatch<T>(object, IEnumerable<T>, string)
  nameWithType: MongoDataBase.InsertBatch<T>(object, IEnumerable<T>, string)
  fullName: Fantasy.DataBase.MongoDataBase.InsertBatch<T>(object, System.Collections.Generic.IEnumerable<T>, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: InsertBatch
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 657
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 批量插入实体对象列表到数据库（加锁）。
  example: []
  syntax:
    content: 'public FTask InsertBatch<T>(object transactionSession, IEnumerable<T> list, string collection = null) where T : Entity, new()'
    parameters:
    - id: transactionSession
      type: System.Object
      description: 事务会话对象。
    - id: list
      type: System.Collections.Generic.IEnumerable{{T}}
      description: 要插入的实体对象列表。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function InsertBatch(Of T As {Entity, New})(transactionSession As Object, list As IEnumerable(Of T), collection As String = Nothing) As FTask
  overload: Fantasy.DataBase.MongoDataBase.InsertBatch*
  implements:
  - Fantasy.DataBase.IDateBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{{T}},System.String)
  nameWithType.vb: MongoDataBase.InsertBatch(Of T)(Object, IEnumerable(Of T), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.InsertBatch(Of T)(Object, System.Collections.Generic.IEnumerable(Of T), String)
  name.vb: InsertBatch(Of T)(Object, IEnumerable(Of T), String)
- uid: Fantasy.DataBase.MongoDataBase.Remove``1(System.Object,System.Int64,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Remove``1(System.Object,System.Int64,System.String)
  id: Remove``1(System.Object,System.Int64,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Remove<T>(object, long, string)
  nameWithType: MongoDataBase.Remove<T>(object, long, string)
  fullName: Fantasy.DataBase.MongoDataBase.Remove<T>(object, long, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Remove
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 679
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 根据ID删除单个实体对象（加锁）。
  example: []
  syntax:
    content: 'public FTask<long> Remove<T>(object transactionSession, long id, string collection = null) where T : Entity, new()'
    parameters:
    - id: transactionSession
      type: System.Object
      description: 事务会话对象。
    - id: id
      type: System.Int64
      description: 要删除的实体的ID。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask{System.Int64}
      description: 删除的实体数量。
    content.vb: Public Function Remove(Of T As {Entity, New})(transactionSession As Object, id As Long, collection As String = Nothing) As FTask(Of Long)
  overload: Fantasy.DataBase.MongoDataBase.Remove*
  implements:
  - Fantasy.DataBase.IDateBase.Remove``1(System.Object,System.Int64,System.String)
  nameWithType.vb: MongoDataBase.Remove(Of T)(Object, Long, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Remove(Of T)(Object, Long, String)
  name.vb: Remove(Of T)(Object, Long, String)
- uid: Fantasy.DataBase.MongoDataBase.Remove``1(System.Int64,System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Remove``1(System.Int64,System.String)
  id: Remove``1(System.Int64,System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Remove<T>(long, string)
  nameWithType: MongoDataBase.Remove<T>(long, string)
  fullName: Fantasy.DataBase.MongoDataBase.Remove<T>(long, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Remove
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 697
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 根据ID删除单个实体对象（加锁）。
  example: []
  syntax:
    content: 'public FTask<long> Remove<T>(long id, string collection = null) where T : Entity, new()'
    parameters:
    - id: id
      type: System.Int64
      description: 要删除的实体的ID。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask{System.Int64}
      description: 删除的实体数量。
    content.vb: Public Function Remove(Of T As {Entity, New})(id As Long, collection As String = Nothing) As FTask(Of Long)
  overload: Fantasy.DataBase.MongoDataBase.Remove*
  implements:
  - Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.String)
  nameWithType.vb: MongoDataBase.Remove(Of T)(Long, String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Remove(Of T)(Long, String)
  name.vb: Remove(Of T)(Long, String)
- uid: Fantasy.DataBase.MongoDataBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  id: Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Remove<T>(long, object, Expression<Func<T, bool>>, string)
  nameWithType: MongoDataBase.Remove<T>(long, object, Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.MongoDataBase.Remove<T>(long, object, System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Remove
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 715
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 根据ID和筛选条件删除多个实体对象（加锁）。
  example: []
  syntax:
    content: 'public FTask<long> Remove<T>(long coroutineLockQueueKey, object transactionSession, Expression<Func<T, bool>> filter, string collection = null) where T : Entity, new()'
    parameters:
    - id: coroutineLockQueueKey
      type: System.Int64
      description: 异步锁Id。
    - id: transactionSession
      type: System.Object
      description: 事务会话对象。
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 筛选条件。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask{System.Int64}
      description: 删除的实体数量。
    content.vb: Public Function Remove(Of T As {Entity, New})(coroutineLockQueueKey As Long, transactionSession As Object, filter As Expression(Of Func(Of T, Boolean)), collection As String = Nothing) As FTask(Of Long)
  overload: Fantasy.DataBase.MongoDataBase.Remove*
  implements:
  - Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  nameWithType.vb: MongoDataBase.Remove(Of T)(Long, Object, Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Remove(Of T)(Long, Object, System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Remove(Of T)(Long, Object, Expression(Of Func(Of T, Boolean)), String)
- uid: Fantasy.DataBase.MongoDataBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.MongoDataBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  id: Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: Remove<T>(long, Expression<Func<T, bool>>, string)
  nameWithType: MongoDataBase.Remove<T>(long, Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.MongoDataBase.Remove<T>(long, System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Remove
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 734
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 根据ID和筛选条件删除多个实体对象（加锁）。
  example: []
  syntax:
    content: 'public FTask<long> Remove<T>(long coroutineLockQueueKey, Expression<Func<T, bool>> filter, string collection = null) where T : Entity, new()'
    parameters:
    - id: coroutineLockQueueKey
      type: System.Int64
      description: 异步锁Id。
    - id: filter
      type: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
      description: 筛选条件。
    - id: collection
      type: System.String
      description: 集合名称。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask{System.Int64}
      description: 删除的实体数量。
    content.vb: Public Function Remove(Of T As {Entity, New})(coroutineLockQueueKey As Long, filter As Expression(Of Func(Of T, Boolean)), collection As String = Nothing) As FTask(Of Long)
  overload: Fantasy.DataBase.MongoDataBase.Remove*
  implements:
  - Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  nameWithType.vb: MongoDataBase.Remove(Of T)(Long, Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.MongoDataBase.Remove(Of T)(Long, System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Remove(Of T)(Long, Expression(Of Func(Of T, Boolean)), String)
- uid: Fantasy.DataBase.MongoDataBase.CreateIndex``1(System.String,System.Object[])
  commentId: M:Fantasy.DataBase.MongoDataBase.CreateIndex``1(System.String,System.Object[])
  id: CreateIndex``1(System.String,System.Object[])
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: CreateIndex<T>(string, params object[])
  nameWithType: MongoDataBase.CreateIndex<T>(string, params object[])
  fullName: Fantasy.DataBase.MongoDataBase.CreateIndex<T>(string, params object[])
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: CreateIndex
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 760
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 创建数据库索引（加锁）。
  example: []
  syntax:
    content: 'public FTask CreateIndex<T>(string collection, params object[] keys) where T : Entity'
    parameters:
    - id: collection
      type: System.String
      description: ''
    - id: keys
      type: System.Object[]
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function CreateIndex(Of T As Entity)(collection As String, ParamArray keys As Object()) As FTask
  overload: Fantasy.DataBase.MongoDataBase.CreateIndex*
  implements:
  - Fantasy.DataBase.IDateBase.CreateIndex``1(System.String,System.Object[])
  nameWithType.vb: MongoDataBase.CreateIndex(Of T)(String, ParamArray Object())
  fullName.vb: Fantasy.DataBase.MongoDataBase.CreateIndex(Of T)(String, ParamArray Object())
  name.vb: CreateIndex(Of T)(String, ParamArray Object())
- uid: Fantasy.DataBase.MongoDataBase.CreateIndex``1(System.Object[])
  commentId: M:Fantasy.DataBase.MongoDataBase.CreateIndex``1(System.Object[])
  id: CreateIndex``1(System.Object[])
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: CreateIndex<T>(params object[])
  nameWithType: MongoDataBase.CreateIndex<T>(params object[])
  fullName: Fantasy.DataBase.MongoDataBase.CreateIndex<T>(params object[])
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: CreateIndex
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 784
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 创建数据库的索引（加锁）。
  example: []
  syntax:
    content: 'public FTask CreateIndex<T>(params object[] keys) where T : Entity'
    parameters:
    - id: keys
      type: System.Object[]
      description: 索引键定义。
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function CreateIndex(Of T As Entity)(ParamArray keys As Object()) As FTask
  overload: Fantasy.DataBase.MongoDataBase.CreateIndex*
  implements:
  - Fantasy.DataBase.IDateBase.CreateIndex``1(System.Object[])
  nameWithType.vb: MongoDataBase.CreateIndex(Of T)(ParamArray Object())
  fullName.vb: Fantasy.DataBase.MongoDataBase.CreateIndex(Of T)(ParamArray Object())
  name.vb: CreateIndex(Of T)(ParamArray Object())
- uid: Fantasy.DataBase.MongoDataBase.CreateDB``1
  commentId: M:Fantasy.DataBase.MongoDataBase.CreateDB``1
  id: CreateDB``1
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: CreateDB<T>()
  nameWithType: MongoDataBase.CreateDB<T>()
  fullName: Fantasy.DataBase.MongoDataBase.CreateDB<T>()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: CreateDB
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 811
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 创建数据库集合（如果不存在）。
  example: []
  syntax:
    content: 'public FTask CreateDB<T>() where T : Entity'
    typeParameters:
    - id: T
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function CreateDB(Of T As Entity)() As FTask
  overload: Fantasy.DataBase.MongoDataBase.CreateDB*
  implements:
  - Fantasy.DataBase.IDateBase.CreateDB``1
  nameWithType.vb: MongoDataBase.CreateDB(Of T)()
  fullName.vb: Fantasy.DataBase.MongoDataBase.CreateDB(Of T)()
  name.vb: CreateDB(Of T)()
- uid: Fantasy.DataBase.MongoDataBase.CreateDB(System.Type)
  commentId: M:Fantasy.DataBase.MongoDataBase.CreateDB(System.Type)
  id: CreateDB(System.Type)
  parent: Fantasy.DataBase.MongoDataBase
  langs:
  - csharp
  - vb
  name: CreateDB(Type)
  nameWithType: MongoDataBase.CreateDB(Type)
  fullName: Fantasy.DataBase.MongoDataBase.CreateDB(System.Type)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: CreateDB
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataBase/MongoDataBase.cs
    startLine: 830
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataBase
  summary: 创建数据库集合（如果不存在）。
  example: []
  syntax:
    content: public FTask CreateDB(Type type)
    parameters:
    - id: type
      type: System.Type
      description: 实体类型。
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Function CreateDB(type As Type) As FTask
  overload: Fantasy.DataBase.MongoDataBase.CreateDB*
  implements:
  - Fantasy.DataBase.IDateBase.CreateDB(System.Type)
references:
- uid: Fantasy.DataBase
  commentId: N:Fantasy.DataBase
  href: Fantasy.html
  name: Fantasy.DataBase
  nameWithType: Fantasy.DataBase
  fullName: Fantasy.DataBase
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataBase
    name: DataBase
    href: Fantasy.DataBase.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataBase
    name: DataBase
    href: Fantasy.DataBase.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Fantasy.DataBase.IDateBase
  commentId: T:Fantasy.DataBase.IDateBase
  parent: Fantasy.DataBase
  href: Fantasy.DataBase.IDateBase.html
  name: IDateBase
  nameWithType: IDateBase
  fullName: Fantasy.DataBase.IDateBase
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.Fantasy.Helper.JsonHelper.ToJson``1
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  parent: Fantasy.Helper.JsonHelper
  definition: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<MongoDataBase>(MongoDataBase)
  nameWithType: JsonHelper.ToJson<MongoDataBase>(MongoDataBase)
  fullName: Fantasy.Helper.JsonHelper.ToJson<Fantasy.DataBase.MongoDataBase>(Fantasy.DataBase.MongoDataBase)
  nameWithType.vb: JsonHelper.ToJson(Of MongoDataBase)(MongoDataBase)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of Fantasy.DataBase.MongoDataBase)(Fantasy.DataBase.MongoDataBase)
  name.vb: ToJson(Of MongoDataBase)(MongoDataBase)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.DataBase.MongoDataBase)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - uid: Fantasy.DataBase.MongoDataBase
    name: MongoDataBase
    href: Fantasy.DataBase.MongoDataBase.html
  - name: '>'
  - name: (
  - uid: Fantasy.DataBase.MongoDataBase
    name: MongoDataBase
    href: Fantasy.DataBase.MongoDataBase.html
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.DataBase.MongoDataBase)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.DataBase.MongoDataBase
    name: MongoDataBase
    href: Fantasy.DataBase.MongoDataBase.html
  - name: )
  - name: (
  - uid: Fantasy.DataBase.MongoDataBase
    name: MongoDataBase
    href: Fantasy.DataBase.MongoDataBase.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<T>(T)
  nameWithType: JsonHelper.ToJson<T>(T)
  fullName: Fantasy.Helper.JsonHelper.ToJson<T>(T)
  nameWithType.vb: JsonHelper.ToJson(Of T)(T)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of T)(T)
  name.vb: ToJson(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Fantasy.Helper.JsonHelper
  commentId: T:Fantasy.Helper.JsonHelper
  parent: Fantasy.Helper
  href: Fantasy.Helper.JsonHelper.html
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: Fantasy.Helper.JsonHelper
- uid: Fantasy.Helper
  commentId: N:Fantasy.Helper
  href: Fantasy.html
  name: Fantasy.Helper
  nameWithType: Fantasy.Helper
  fullName: Fantasy.Helper
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
- uid: Fantasy.DataBase.MongoDataBase.Initialize*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.Initialize
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_Initialize_Fantasy_Scene_System_String_System_String_
  name: Initialize
  nameWithType: MongoDataBase.Initialize
  fullName: Fantasy.DataBase.MongoDataBase.Initialize
- uid: Fantasy.DataBase.IDateBase.Initialize(Fantasy.Scene,System.String,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Initialize(Fantasy.Scene,System.String,System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Initialize_Fantasy_Scene_System_String_System_String_
  name: Initialize(Scene, string, string)
  nameWithType: IDateBase.Initialize(Scene, string, string)
  fullName: Fantasy.DataBase.IDateBase.Initialize(Fantasy.Scene, string, string)
  nameWithType.vb: IDateBase.Initialize(Scene, String, String)
  fullName.vb: Fantasy.DataBase.IDateBase.Initialize(Fantasy.Scene, String, String)
  name.vb: Initialize(Scene, String, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Initialize(Fantasy.Scene,System.String,System.String)
    name: Initialize
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Initialize_Fantasy_Scene_System_String_System_String_
  - name: (
  - uid: Fantasy.Scene
    name: Scene
    href: Fantasy.Scene.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Initialize(Fantasy.Scene,System.String,System.String)
    name: Initialize
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Initialize_Fantasy_Scene_System_String_System_String_
  - name: (
  - uid: Fantasy.Scene
    name: Scene
    href: Fantasy.Scene.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.Scene
  commentId: T:Fantasy.Scene
  parent: Fantasy
  href: Fantasy.Scene.html
  name: Scene
  nameWithType: Scene
  fullName: Fantasy.Scene
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Fantasy
  commentId: N:Fantasy
  href: Fantasy.html
  name: Fantasy
  nameWithType: Fantasy
  fullName: Fantasy
- uid: Fantasy.DataBase.MongoDataBase.Sum*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.Sum
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_Sum__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_String_
  name: Sum
  nameWithType: MongoDataBase.Sum
  fullName: Fantasy.DataBase.MongoDataBase.Sum
- uid: Fantasy.DataBase.IDateBase.Sum``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{T},System.Object}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Sum__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_String_
  name: Sum<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, string)
  nameWithType: IDateBase.Sum<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, string)
  fullName: Fantasy.DataBase.IDateBase.Sum<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Linq.Expressions.Expression<System.Func<T, object>>, string)
  nameWithType.vb: IDateBase.Sum(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Sum(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of T, Object)), String)
  name.vb: Sum(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
    name: Sum
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Sum__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
    name: Sum
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Sum__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, bool>>
  nameWithType: Expression<Func<T, bool>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, bool>>
  nameWithType.vb: Expression(Of Func(Of T, Boolean))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean))
  name.vb: Expression(Of Func(Of T, Boolean))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
- uid: System.Linq.Expressions.Expression{System.Func{{T},System.Object}}
  commentId: T:System.Linq.Expressions.Expression{System.Func{``0,System.Object}}
  parent: System.Linq.Expressions
  definition: System.Linq.Expressions.Expression`1
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<Func<T, object>>
  nameWithType: Expression<Func<T, object>>
  fullName: System.Linq.Expressions.Expression<System.Func<T, object>>
  nameWithType.vb: Expression(Of Func(Of T, Object))
  fullName.vb: System.Linq.Expressions.Expression(Of System.Func(Of T, Object))
  name.vb: Expression(Of Func(Of T, Object))
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
- uid: Fantasy.Async.FTask{System.Int64}
  commentId: T:Fantasy.Async.FTask{System.Int64}
  parent: Fantasy.Async
  definition: Fantasy.Async.FTask`1
  href: Fantasy.Async.FTask-1.html
  name: FTask<long>
  nameWithType: FTask<long>
  fullName: Fantasy.Async.FTask<long>
  nameWithType.vb: FTask(Of Long)
  fullName.vb: Fantasy.Async.FTask(Of Long)
  name.vb: FTask(Of Long)
  spec.csharp:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: <
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '>'
  spec.vb:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: Fantasy.DataBase.IDateBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Sum__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_String_
  name: Sum<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, string)
  nameWithType: IDateBase.Sum<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, string)
  fullName: Fantasy.DataBase.IDateBase.Sum<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Linq.Expressions.Expression<System.Func<T, object>>, string)
  nameWithType.vb: IDateBase.Sum(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Sum(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of T, Object)), String)
  name.vb: Sum(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
    name: Sum
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Sum__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Sum``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.String)
    name: Sum
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Sum__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Linq.Expressions.Expression`1
  commentId: T:System.Linq.Expressions.Expression`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  name: Expression<TDelegate>
  nameWithType: Expression<TDelegate>
  fullName: System.Linq.Expressions.Expression<TDelegate>
  nameWithType.vb: Expression(Of TDelegate)
  fullName.vb: System.Linq.Expressions.Expression(Of TDelegate)
  name.vb: Expression(Of TDelegate)
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - name: TDelegate
  - name: '>'
  spec.vb:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - name: TDelegate
  - name: )
- uid: System.Linq.Expressions
  commentId: N:System.Linq.Expressions
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Linq.Expressions
  nameWithType: System.Linq.Expressions
  fullName: System.Linq.Expressions
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Linq
    name: Linq
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq
  - name: .
  - uid: System.Linq.Expressions
    name: Expressions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions
- uid: Fantasy.Async.FTask`1
  commentId: T:Fantasy.Async.FTask`1
  parent: Fantasy.Async
  href: Fantasy.Async.FTask-1.html
  name: FTask<T>
  nameWithType: FTask<T>
  fullName: Fantasy.Async.FTask<T>
  nameWithType.vb: FTask(Of T)
  fullName.vb: Fantasy.Async.FTask(Of T)
  name.vb: FTask(Of T)
  spec.csharp:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Fantasy.Async
  commentId: N:Fantasy.Async
  href: Fantasy.html
  name: Fantasy.Async
  nameWithType: Fantasy.Async
  fullName: Fantasy.Async
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Async
    name: Async
    href: Fantasy.Async.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Async
    name: Async
    href: Fantasy.Async.html
- uid: Fantasy.DataBase.MongoDataBase.Count*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.Count
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_Count__1_System_String_
  name: Count
  nameWithType: MongoDataBase.Count
  fullName: Fantasy.DataBase.MongoDataBase.Count
- uid: Fantasy.DataBase.IDateBase.Count``1(System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Count``1(System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Count__1_System_String_
  name: Count<T>(string)
  nameWithType: IDateBase.Count<T>(string)
  fullName: Fantasy.DataBase.IDateBase.Count<T>(string)
  nameWithType.vb: IDateBase.Count(Of T)(String)
  fullName.vb: Fantasy.DataBase.IDateBase.Count(Of T)(String)
  name.vb: Count(Of T)(String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Count``1(System.String)
    name: Count
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Count__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Count``1(System.String)
    name: Count
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Count__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Count``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Count__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Count<T>(Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.Count<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.Count<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.Count(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Count(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Count(Of T)(Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Count
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Count__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Count
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Count__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Count__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Count<T>(Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.Count<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.Count<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.Count(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Count(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Count(Of T)(Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Count
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Count__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Count``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Count
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Count__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.Exist*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.Exist
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_Exist__1_System_String_
  name: Exist
  nameWithType: MongoDataBase.Exist
  fullName: Fantasy.DataBase.MongoDataBase.Exist
- uid: Fantasy.DataBase.IDateBase.Exist``1(System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Exist``1(System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Exist__1_System_String_
  name: Exist<T>(string)
  nameWithType: IDateBase.Exist<T>(string)
  fullName: Fantasy.DataBase.IDateBase.Exist<T>(string)
  nameWithType.vb: IDateBase.Exist(Of T)(String)
  fullName.vb: Fantasy.DataBase.IDateBase.Exist(Of T)(String)
  name.vb: Exist(Of T)(String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Exist``1(System.String)
    name: Exist
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Exist__1_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Exist``1(System.String)
    name: Exist
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Exist__1_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.Async.FTask{System.Boolean}
  commentId: T:Fantasy.Async.FTask{System.Boolean}
  parent: Fantasy.Async
  definition: Fantasy.Async.FTask`1
  href: Fantasy.Async.FTask-1.html
  name: FTask<bool>
  nameWithType: FTask<bool>
  fullName: Fantasy.Async.FTask<bool>
  nameWithType.vb: FTask(Of Boolean)
  fullName.vb: Fantasy.Async.FTask(Of Boolean)
  name.vb: FTask(Of Boolean)
  spec.csharp:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: <
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  spec.vb:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: Fantasy.DataBase.IDateBase.Exist``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Exist__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Exist<T>(Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.Exist<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.Exist<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.Exist(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Exist(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Exist(Of T)(Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Exist
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Exist__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Exist
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Exist__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Exist__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Exist<T>(Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.Exist<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.Exist<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.Exist(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Exist(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Exist(Of T)(Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Exist
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Exist__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Exist``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Exist
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Exist__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.QueryNotLock*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.QueryNotLock
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_QueryNotLock__1_System_Int64_System_String_
  name: QueryNotLock
  nameWithType: MongoDataBase.QueryNotLock
  fullName: Fantasy.DataBase.MongoDataBase.QueryNotLock
- uid: Fantasy.DataBase.IDateBase.QueryNotLock``1(System.Int64,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryNotLock``1(System.Int64,System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryNotLock__1_System_Int64_System_String_
  name: QueryNotLock<T>(long, string)
  nameWithType: IDateBase.QueryNotLock<T>(long, string)
  fullName: Fantasy.DataBase.IDateBase.QueryNotLock<T>(long, string)
  nameWithType.vb: IDateBase.QueryNotLock(Of T)(Long, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryNotLock(Of T)(Long, String)
  name.vb: QueryNotLock(Of T)(Long, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryNotLock``1(System.Int64,System.String)
    name: QueryNotLock
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryNotLock__1_System_Int64_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryNotLock``1(System.Int64,System.String)
    name: QueryNotLock
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryNotLock__1_System_Int64_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Fantasy.Async.FTask{{T}}
  commentId: T:Fantasy.Async.FTask{``0}
  parent: Fantasy.Async
  definition: Fantasy.Async.FTask`1
  href: Fantasy.Async.FTask-1.html
  name: FTask<T>
  nameWithType: FTask<T>
  fullName: Fantasy.Async.FTask<T>
  nameWithType.vb: FTask(Of T)
  fullName.vb: Fantasy.Async.FTask(Of T)
  name.vb: FTask(Of T)
  spec.csharp:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.Query*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.Query
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_Query__1_System_Int64_System_String_
  name: Query
  nameWithType: MongoDataBase.Query
  fullName: Fantasy.DataBase.MongoDataBase.Query
- uid: Fantasy.DataBase.IDateBase.Query``1(System.Int64,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Query``1(System.Int64,System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Int64_System_String_
  name: Query<T>(long, string)
  nameWithType: IDateBase.Query<T>(long, string)
  fullName: Fantasy.DataBase.IDateBase.Query<T>(long, string)
  nameWithType.vb: IDateBase.Query(Of T)(Long, String)
  fullName.vb: Fantasy.DataBase.IDateBase.Query(Of T)(Long, String)
  name.vb: Query(Of T)(Long, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Query``1(System.Int64,System.String)
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Int64_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Query``1(System.Int64,System.String)
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Int64_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  name: QueryCountAndDatesByPage
  nameWithType: MongoDataBase.QueryCountAndDatesByPage
  fullName: Fantasy.DataBase.MongoDataBase.QueryCountAndDatesByPage
- uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Int32,System.Int32,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  name: QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string)
  nameWithType: IDateBase.QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string)
  fullName: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string)
  nameWithType.vb: IDateBase.QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String)
  name.vb: QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
    name: QueryCountAndDatesByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
    name: QueryCountAndDatesByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Fantasy.Async.FTask{System.ValueTuple{System.Int32,System.Collections.Generic.List{{T}}}}
  commentId: T:Fantasy.Async.FTask{System.ValueTuple{System.Int32,System.Collections.Generic.List{``0}}}
  parent: Fantasy.Async
  definition: Fantasy.Async.FTask`1
  href: Fantasy.Async.FTask-1.html
  name: FTask<(int count, List<T> dates)>
  nameWithType: FTask<(int count, List<T> dates)>
  fullName: Fantasy.Async.FTask<(int count, System.Collections.Generic.List<T> dates)>
  nameWithType.vb: FTask(Of (count As Integer, dates As List(Of T)))
  fullName.vb: Fantasy.Async.FTask(Of (count As Integer, dates As System.Collections.Generic.List(Of T)))
  name.vb: FTask(Of (count As Integer, dates As List(Of T)))
  spec.csharp:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: <
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Collections.Generic.List{``0}}.count
    name: count
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.collections.generic.list---0--.count
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Collections.Generic.List{``0}}.dates
    name: dates
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.collections.generic.list---0--.dates
  - name: )
  - name: '>'
  spec.vb:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: (
  - name: Of
  - name: " "
  - name: (
  - uid: System.ValueTuple{System.Int32,System.Collections.Generic.List{``0}}.count
    name: count
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.collections.generic.list---0--.count
  - name: " "
  - name: As
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.ValueTuple{System.Int32,System.Collections.Generic.List{``0}}.dates
    name: dates
    href: https://learn.microsoft.com/dotnet/api/system.valuetuple-system.int32,system.collections.generic.list---0--.dates
  - name: " "
  - name: As
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
  - name: )
- uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  name: QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string)
  nameWithType: IDateBase.QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string)
  fullName: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string)
  nameWithType.vb: IDateBase.QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String)
  name.vb: QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
    name: QueryCountAndDatesByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
    name: QueryCountAndDatesByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  name: QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  nameWithType: IDateBase.QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  fullName: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string[], string)
  nameWithType.vb: IDateBase.QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String(), String)
  name.vb: QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
    name: QueryCountAndDatesByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
    name: QueryCountAndDatesByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  name: QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  nameWithType: IDateBase.QueryCountAndDatesByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  fullName: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string[], string)
  nameWithType.vb: IDateBase.QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String(), String)
  name.vb: QueryCountAndDatesByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
    name: QueryCountAndDatesByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryCountAndDatesByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
    name: QueryCountAndDatesByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryCountAndDatesByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.QueryByPage*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.QueryByPage
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  name: QueryByPage
  nameWithType: MongoDataBase.QueryByPage
  fullName: Fantasy.DataBase.MongoDataBase.QueryByPage
- uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Int32,System.Int32,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  name: QueryByPage<T>(Expression<Func<T, bool>>, int, int, string)
  nameWithType: IDateBase.QueryByPage<T>(Expression<Func<T, bool>>, int, int, string)
  fullName: Fantasy.DataBase.IDateBase.QueryByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string)
  nameWithType.vb: IDateBase.QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String)
  name.vb: QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
    name: QueryByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
    name: QueryByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.Async.FTask{System.Collections.Generic.List{{T}}}
  commentId: T:Fantasy.Async.FTask{System.Collections.Generic.List{``0}}
  parent: Fantasy.Async
  definition: Fantasy.Async.FTask`1
  href: Fantasy.Async.FTask-1.html
  name: FTask<List<T>>
  nameWithType: FTask<List<T>>
  fullName: Fantasy.Async.FTask<System.Collections.Generic.List<T>>
  nameWithType.vb: FTask(Of List(Of T))
  fullName.vb: Fantasy.Async.FTask(Of System.Collections.Generic.List(Of T))
  name.vb: FTask(Of List(Of T))
  spec.csharp:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: <
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: )
- uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  name: QueryByPage<T>(Expression<Func<T, bool>>, int, int, string)
  nameWithType: IDateBase.QueryByPage<T>(Expression<Func<T, bool>>, int, int, string)
  fullName: Fantasy.DataBase.IDateBase.QueryByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string)
  nameWithType.vb: IDateBase.QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String)
  name.vb: QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
    name: QueryByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String)
    name: QueryByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  name: QueryByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  nameWithType: IDateBase.QueryByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  fullName: Fantasy.DataBase.IDateBase.QueryByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string[], string)
  nameWithType.vb: IDateBase.QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String(), String)
  name.vb: QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
    name: QueryByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
    name: QueryByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  name: QueryByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  nameWithType: IDateBase.QueryByPage<T>(Expression<Func<T, bool>>, int, int, string[], string)
  fullName: Fantasy.DataBase.IDateBase.QueryByPage<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, string[], string)
  nameWithType.vb: IDateBase.QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryByPage(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, String(), String)
  name.vb: QueryByPage(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, String(), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
    name: QueryByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryByPage``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.String[],System.String)
    name: QueryByPage
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPage__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_String___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.QueryByPageOrderBy*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.QueryByPageOrderBy
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_QueryByPageOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  name: QueryByPageOrderBy
  nameWithType: MongoDataBase.QueryByPageOrderBy
  fullName: Fantasy.DataBase.MongoDataBase.QueryByPageOrderBy
- uid: Fantasy.DataBase.IDateBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{{T},System.Object}},System.Boolean,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPageOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  name: QueryByPageOrderBy<T>(Expression<Func<T, bool>>, int, int, Expression<Func<T, object>>, bool, string)
  nameWithType: IDateBase.QueryByPageOrderBy<T>(Expression<Func<T, bool>>, int, int, Expression<Func<T, object>>, bool, string)
  fullName: Fantasy.DataBase.IDateBase.QueryByPageOrderBy<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, System.Linq.Expressions.Expression<System.Func<T, object>>, bool, string)
  nameWithType.vb: IDateBase.QueryByPageOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, Expression(Of Func(Of T, Object)), Boolean, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryByPageOrderBy(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, System.Linq.Expressions.Expression(Of System.Func(Of T, Object)), Boolean, String)
  name.vb: QueryByPageOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, Expression(Of Func(Of T, Object)), Boolean, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
    name: QueryByPageOrderBy
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPageOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
    name: QueryByPageOrderBy
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPageOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Fantasy.DataBase.IDateBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPageOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  name: QueryByPageOrderBy<T>(Expression<Func<T, bool>>, int, int, Expression<Func<T, object>>, bool, string)
  nameWithType: IDateBase.QueryByPageOrderBy<T>(Expression<Func<T, bool>>, int, int, Expression<Func<T, object>>, bool, string)
  fullName: Fantasy.DataBase.IDateBase.QueryByPageOrderBy<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, int, int, System.Linq.Expressions.Expression<System.Func<T, object>>, bool, string)
  nameWithType.vb: IDateBase.QueryByPageOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, Expression(Of Func(Of T, Object)), Boolean, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryByPageOrderBy(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), Integer, Integer, System.Linq.Expressions.Expression(Of System.Func(Of T, Object)), Boolean, String)
  name.vb: QueryByPageOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Integer, Integer, Expression(Of Func(Of T, Object)), Boolean, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
    name: QueryByPageOrderBy
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPageOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryByPageOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Int32,System.Int32,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
    name: QueryByPageOrderBy
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryByPageOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Int32_System_Int32_System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.First*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.First
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_First__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: First
  nameWithType: MongoDataBase.First
  fullName: Fantasy.DataBase.MongoDataBase.First
- uid: Fantasy.DataBase.IDateBase.First``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_First__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: First<T>(Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.First<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.First<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.First(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.First(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: First(Of T)(Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: First
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_First__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: First
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_First__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_First__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: First<T>(Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.First<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.First<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.First(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.First(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: First(Of T)(Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: First
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_First__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.First``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: First
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_First__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.First``1(System.String,System.String[],System.String)
  commentId: M:Fantasy.DataBase.IDateBase.First``1(System.String,System.String[],System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_First__1_System_String_System_String___System_String_
  name: First<T>(string, string[], string)
  nameWithType: IDateBase.First<T>(string, string[], string)
  fullName: Fantasy.DataBase.IDateBase.First<T>(string, string[], string)
  nameWithType.vb: IDateBase.First(Of T)(String, String(), String)
  fullName.vb: Fantasy.DataBase.IDateBase.First(Of T)(String, String(), String)
  name.vb: First(Of T)(String, String(), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.First``1(System.String,System.String[],System.String)
    name: First
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_First__1_System_String_System_String___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.First``1(System.String,System.String[],System.String)
    name: First
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_First__1_System_String_System_String___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.QueryOrderBy*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.QueryOrderBy
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_QueryOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  name: QueryOrderBy
  nameWithType: MongoDataBase.QueryOrderBy
  fullName: Fantasy.DataBase.MongoDataBase.QueryOrderBy
- uid: Fantasy.DataBase.IDateBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.Linq.Expressions.Expression{System.Func{{T},System.Object}},System.Boolean,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  name: QueryOrderBy<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, bool, string)
  nameWithType: IDateBase.QueryOrderBy<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, bool, string)
  fullName: Fantasy.DataBase.IDateBase.QueryOrderBy<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Linq.Expressions.Expression<System.Func<T, object>>, bool, string)
  nameWithType.vb: IDateBase.QueryOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), Boolean, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryOrderBy(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of T, Object)), Boolean, String)
  name.vb: QueryOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), Boolean, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
    name: QueryOrderBy
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
    name: QueryOrderBy
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  name: QueryOrderBy<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, bool, string)
  nameWithType: IDateBase.QueryOrderBy<T>(Expression<Func<T, bool>>, Expression<Func<T, object>>, bool, string)
  fullName: Fantasy.DataBase.IDateBase.QueryOrderBy<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, System.Linq.Expressions.Expression<System.Func<T, object>>, bool, string)
  nameWithType.vb: IDateBase.QueryOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), Boolean, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryOrderBy(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), System.Linq.Expressions.Expression(Of System.Func(Of T, Object)), Boolean, String)
  name.vb: QueryOrderBy(Of T)(Expression(Of Func(Of T, Boolean)), Expression(Of Func(Of T, Object)), Boolean, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
    name: QueryOrderBy
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryOrderBy``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Boolean,System.String)
    name: QueryOrderBy
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryOrderBy__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_Linq_Expressions_Expression_System_Func___0_System_Object___System_Boolean_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Query<T>(Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.Query<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.Query<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.Query(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Query(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Query(Of T)(Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Query<T>(Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.Query<T>(Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.Query<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.Query(Of T)(Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Query(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Query(Of T)(Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Query(System.Int64,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Fantasy.Entitas.Entity})
  commentId: M:Fantasy.DataBase.IDateBase.Query(System.Int64,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Fantasy.Entitas.Entity})
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query_System_Int64_System_Collections_Generic_List_System_String__System_Collections_Generic_List_Fantasy_Entitas_Entity__
  name: Query(long, List<string>, List<Entity>)
  nameWithType: IDateBase.Query(long, List<string>, List<Entity>)
  fullName: Fantasy.DataBase.IDateBase.Query(long, System.Collections.Generic.List<string>, System.Collections.Generic.List<Fantasy.Entitas.Entity>)
  nameWithType.vb: IDateBase.Query(Long, List(Of String), List(Of Entity))
  fullName.vb: Fantasy.DataBase.IDateBase.Query(Long, System.Collections.Generic.List(Of String), System.Collections.Generic.List(Of Fantasy.Entitas.Entity))
  name.vb: Query(Long, List(Of String), List(Of Entity))
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Query(System.Int64,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Fantasy.Entitas.Entity})
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query_System_Int64_System_Collections_Generic_List_System_String__System_Collections_Generic_List_Fantasy_Entitas_Entity__
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Query(System.Int64,System.Collections.Generic.List{System.String},System.Collections.Generic.List{Fantasy.Entitas.Entity})
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query_System_Int64_System_Collections_Generic_List_System_String__System_Collections_Generic_List_Fantasy_Entitas_Entity__
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: )
  - name: )
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List{Fantasy.Entitas.Entity}
  commentId: T:System.Collections.Generic.List{Fantasy.Entitas.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<Entity>
  nameWithType: List<Entity>
  fullName: System.Collections.Generic.List<Fantasy.Entitas.Entity>
  nameWithType.vb: List(Of Entity)
  fullName.vb: System.Collections.Generic.List(Of Fantasy.Entitas.Entity)
  name.vb: List(Of Entity)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: )
- uid: Fantasy.Async.FTask
  commentId: T:Fantasy.Async.FTask
  parent: Fantasy.Async
  href: Fantasy.Async.FTask.html
  name: FTask
  nameWithType: FTask
  fullName: Fantasy.Async.FTask
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Fantasy.DataBase.MongoDataBase.QueryJson*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.QueryJson
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_QueryJson__1_System_String_System_String_
  name: QueryJson
  nameWithType: MongoDataBase.QueryJson
  fullName: Fantasy.DataBase.MongoDataBase.QueryJson
- uid: Fantasy.DataBase.IDateBase.QueryJson``1(System.String,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryJson``1(System.String,System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryJson__1_System_String_System_String_
  name: QueryJson<T>(string, string)
  nameWithType: IDateBase.QueryJson<T>(string, string)
  fullName: Fantasy.DataBase.IDateBase.QueryJson<T>(string, string)
  nameWithType.vb: IDateBase.QueryJson(Of T)(String, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryJson(Of T)(String, String)
  name.vb: QueryJson(Of T)(String, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryJson``1(System.String,System.String)
    name: QueryJson
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryJson__1_System_String_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryJson``1(System.String,System.String)
    name: QueryJson
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryJson__1_System_String_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.QueryJson``1(System.String,System.String[],System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryJson``1(System.String,System.String[],System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryJson__1_System_String_System_String___System_String_
  name: QueryJson<T>(string, string[], string)
  nameWithType: IDateBase.QueryJson<T>(string, string[], string)
  fullName: Fantasy.DataBase.IDateBase.QueryJson<T>(string, string[], string)
  nameWithType.vb: IDateBase.QueryJson(Of T)(String, String(), String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryJson(Of T)(String, String(), String)
  name.vb: QueryJson(Of T)(String, String(), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryJson``1(System.String,System.String[],System.String)
    name: QueryJson
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryJson__1_System_String_System_String___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryJson``1(System.String,System.String[],System.String)
    name: QueryJson
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryJson__1_System_String_System_String___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.QueryJson``1(System.Int64,System.String,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.QueryJson``1(System.Int64,System.String,System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryJson__1_System_Int64_System_String_System_String_
  name: QueryJson<T>(long, string, string)
  nameWithType: IDateBase.QueryJson<T>(long, string, string)
  fullName: Fantasy.DataBase.IDateBase.QueryJson<T>(long, string, string)
  nameWithType.vb: IDateBase.QueryJson(Of T)(Long, String, String)
  fullName.vb: Fantasy.DataBase.IDateBase.QueryJson(Of T)(Long, String, String)
  name.vb: QueryJson(Of T)(Long, String, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.QueryJson``1(System.Int64,System.String,System.String)
    name: QueryJson
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryJson__1_System_Int64_System_String_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.QueryJson``1(System.Int64,System.String,System.String)
    name: QueryJson
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_QueryJson__1_System_Int64_System_String_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String[],System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String___System_String_
  name: Query<T>(Expression<Func<T, bool>>, string[], string)
  nameWithType: IDateBase.Query<T>(Expression<Func<T, bool>>, string[], string)
  fullName: Fantasy.DataBase.IDateBase.Query<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string[], string)
  nameWithType.vb: IDateBase.Query(Of T)(Expression(Of Func(Of T, Boolean)), String(), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Query(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String(), String)
  name.vb: Query(Of T)(Expression(Of Func(Of T, Boolean)), String(), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String___System_String_
  name: Query<T>(Expression<Func<T, bool>>, string[], string)
  nameWithType: IDateBase.Query<T>(Expression<Func<T, bool>>, string[], string)
  fullName: Fantasy.DataBase.IDateBase.Query<T>(System.Linq.Expressions.Expression<System.Func<T, bool>>, string[], string)
  nameWithType.vb: IDateBase.Query(Of T)(Expression(Of Func(Of T, Boolean)), String(), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Query(Of T)(System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String(), String)
  name.vb: Query(Of T)(Expression(Of Func(Of T, Boolean)), String(), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Query``1(System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String[],System.String)
    name: Query
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Query__1_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.Save*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.Save
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_Save__1_System_Object___0_System_String_
  name: Save
  nameWithType: MongoDataBase.Save
  fullName: Fantasy.DataBase.MongoDataBase.Save
- uid: Fantasy.DataBase.IDateBase.Save``1(System.Object,{T},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Save``1(System.Object,``0,System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.Save``1(System.Object,``0,System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1_System_Object___0_System_String_
  name: Save<T>(object, T, string)
  nameWithType: IDateBase.Save<T>(object, T, string)
  fullName: Fantasy.DataBase.IDateBase.Save<T>(object, T, string)
  nameWithType.vb: IDateBase.Save(Of T)(Object, T, String)
  fullName.vb: Fantasy.DataBase.IDateBase.Save(Of T)(Object, T, String)
  name.vb: Save(Of T)(Object, T, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Save``1(System.Object,``0,System.String)
    name: Save
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1_System_Object___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Save``1(System.Object,``0,System.String)
    name: Save
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1_System_Object___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: Fantasy.DataBase.IDateBase.Save``1(System.Object,``0,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Save``1(System.Object,``0,System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1_System_Object___0_System_String_
  name: Save<T>(object, T, string)
  nameWithType: IDateBase.Save<T>(object, T, string)
  fullName: Fantasy.DataBase.IDateBase.Save<T>(object, T, string)
  nameWithType.vb: IDateBase.Save(Of T)(Object, T, String)
  fullName.vb: Fantasy.DataBase.IDateBase.Save(Of T)(Object, T, String)
  name.vb: Save(Of T)(Object, T, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Save``1(System.Object,``0,System.String)
    name: Save
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1_System_Object___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Save``1(System.Object,``0,System.String)
    name: Save
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1_System_Object___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Fantasy.DataBase.IDateBase.Save``1({T},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Save``1(``0,System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.Save``1(``0,System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1___0_System_String_
  name: Save<T>(T, string)
  nameWithType: IDateBase.Save<T>(T, string)
  fullName: Fantasy.DataBase.IDateBase.Save<T>(T, string)
  nameWithType.vb: IDateBase.Save(Of T)(T, String)
  fullName.vb: Fantasy.DataBase.IDateBase.Save(Of T)(T, String)
  name.vb: Save(Of T)(T, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Save``1(``0,System.String)
    name: Save
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Save``1(``0,System.String)
    name: Save
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Save``1(``0,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Save``1(``0,System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1___0_System_String_
  name: Save<T>(T, string)
  nameWithType: IDateBase.Save<T>(T, string)
  fullName: Fantasy.DataBase.IDateBase.Save<T>(T, string)
  nameWithType.vb: IDateBase.Save(Of T)(T, String)
  fullName.vb: Fantasy.DataBase.IDateBase.Save(Of T)(T, String)
  name.vb: Save(Of T)(T, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Save``1(``0,System.String)
    name: Save
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Save``1(``0,System.String)
    name: Save
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Save(System.Int64,System.Collections.Generic.List{Fantasy.Entitas.Entity})
  commentId: M:Fantasy.DataBase.IDateBase.Save(System.Int64,System.Collections.Generic.List{Fantasy.Entitas.Entity})
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save_System_Int64_System_Collections_Generic_List_Fantasy_Entitas_Entity__
  name: Save(long, List<Entity>)
  nameWithType: IDateBase.Save(long, List<Entity>)
  fullName: Fantasy.DataBase.IDateBase.Save(long, System.Collections.Generic.List<Fantasy.Entitas.Entity>)
  nameWithType.vb: IDateBase.Save(Long, List(Of Entity))
  fullName.vb: Fantasy.DataBase.IDateBase.Save(Long, System.Collections.Generic.List(Of Fantasy.Entitas.Entity))
  name.vb: Save(Long, List(Of Entity))
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Save(System.Int64,System.Collections.Generic.List{Fantasy.Entitas.Entity})
    name: Save
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save_System_Int64_System_Collections_Generic_List_Fantasy_Entitas_Entity__
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Save(System.Int64,System.Collections.Generic.List{Fantasy.Entitas.Entity})
    name: Save
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Save_System_Int64_System_Collections_Generic_List_Fantasy_Entitas_Entity__
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: )
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.Insert*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.Insert
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_Insert__1___0_System_String_
  name: Insert
  nameWithType: MongoDataBase.Insert
  fullName: Fantasy.DataBase.MongoDataBase.Insert
- uid: Fantasy.DataBase.IDateBase.Insert``1({T},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Insert``1(``0,System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.Insert``1(``0,System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Insert__1___0_System_String_
  name: Insert<T>(T, string)
  nameWithType: IDateBase.Insert<T>(T, string)
  fullName: Fantasy.DataBase.IDateBase.Insert<T>(T, string)
  nameWithType.vb: IDateBase.Insert(Of T)(T, String)
  fullName.vb: Fantasy.DataBase.IDateBase.Insert(Of T)(T, String)
  name.vb: Insert(Of T)(T, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Insert``1(``0,System.String)
    name: Insert
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Insert__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Insert``1(``0,System.String)
    name: Insert
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Insert__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Insert``1(``0,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Insert``1(``0,System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Insert__1___0_System_String_
  name: Insert<T>(T, string)
  nameWithType: IDateBase.Insert<T>(T, string)
  fullName: Fantasy.DataBase.IDateBase.Insert<T>(T, string)
  nameWithType.vb: IDateBase.Insert(Of T)(T, String)
  fullName.vb: Fantasy.DataBase.IDateBase.Insert(Of T)(T, String)
  name.vb: Insert(Of T)(T, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Insert``1(``0,System.String)
    name: Insert
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Insert__1___0_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Insert``1(``0,System.String)
    name: Insert
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Insert__1___0_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.InsertBatch*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.InsertBatch
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_InsertBatch__1_System_Collections_Generic_IEnumerable___0__System_String_
  name: InsertBatch
  nameWithType: MongoDataBase.InsertBatch
  fullName: Fantasy.DataBase.MongoDataBase.InsertBatch
- uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Collections.Generic.IEnumerable{{T}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Collections_Generic_IEnumerable___0__System_String_
  name: InsertBatch<T>(IEnumerable<T>, string)
  nameWithType: IDateBase.InsertBatch<T>(IEnumerable<T>, string)
  fullName: Fantasy.DataBase.IDateBase.InsertBatch<T>(System.Collections.Generic.IEnumerable<T>, string)
  nameWithType.vb: IDateBase.InsertBatch(Of T)(IEnumerable(Of T), String)
  fullName.vb: Fantasy.DataBase.IDateBase.InsertBatch(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  name.vb: InsertBatch(Of T)(IEnumerable(Of T), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: InsertBatch
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Collections_Generic_IEnumerable___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: InsertBatch
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Collections_Generic_IEnumerable___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable{{T}}
  commentId: T:System.Collections.Generic.IEnumerable{``0}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Collections_Generic_IEnumerable___0__System_String_
  name: InsertBatch<T>(IEnumerable<T>, string)
  nameWithType: IDateBase.InsertBatch<T>(IEnumerable<T>, string)
  fullName: Fantasy.DataBase.IDateBase.InsertBatch<T>(System.Collections.Generic.IEnumerable<T>, string)
  nameWithType.vb: IDateBase.InsertBatch(Of T)(IEnumerable(Of T), String)
  fullName.vb: Fantasy.DataBase.IDateBase.InsertBatch(Of T)(System.Collections.Generic.IEnumerable(Of T), String)
  name.vb: InsertBatch(Of T)(IEnumerable(Of T), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: InsertBatch
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Collections_Generic_IEnumerable___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Collections.Generic.IEnumerable{``0},System.String)
    name: InsertBatch
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Collections_Generic_IEnumerable___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{{T}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Object_System_Collections_Generic_IEnumerable___0__System_String_
  name: InsertBatch<T>(object, IEnumerable<T>, string)
  nameWithType: IDateBase.InsertBatch<T>(object, IEnumerable<T>, string)
  fullName: Fantasy.DataBase.IDateBase.InsertBatch<T>(object, System.Collections.Generic.IEnumerable<T>, string)
  nameWithType.vb: IDateBase.InsertBatch(Of T)(Object, IEnumerable(Of T), String)
  fullName.vb: Fantasy.DataBase.IDateBase.InsertBatch(Of T)(Object, System.Collections.Generic.IEnumerable(Of T), String)
  name.vb: InsertBatch(Of T)(Object, IEnumerable(Of T), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
    name: InsertBatch
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Object_System_Collections_Generic_IEnumerable___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
    name: InsertBatch
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Object_System_Collections_Generic_IEnumerable___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Object_System_Collections_Generic_IEnumerable___0__System_String_
  name: InsertBatch<T>(object, IEnumerable<T>, string)
  nameWithType: IDateBase.InsertBatch<T>(object, IEnumerable<T>, string)
  fullName: Fantasy.DataBase.IDateBase.InsertBatch<T>(object, System.Collections.Generic.IEnumerable<T>, string)
  nameWithType.vb: IDateBase.InsertBatch(Of T)(Object, IEnumerable(Of T), String)
  fullName.vb: Fantasy.DataBase.IDateBase.InsertBatch(Of T)(Object, System.Collections.Generic.IEnumerable(Of T), String)
  name.vb: InsertBatch(Of T)(Object, IEnumerable(Of T), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
    name: InsertBatch
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Object_System_Collections_Generic_IEnumerable___0__System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.InsertBatch``1(System.Object,System.Collections.Generic.IEnumerable{``0},System.String)
    name: InsertBatch
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_InsertBatch__1_System_Object_System_Collections_Generic_IEnumerable___0__System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.Remove*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.Remove
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_Remove__1_System_Object_System_Int64_System_String_
  name: Remove
  nameWithType: MongoDataBase.Remove
  fullName: Fantasy.DataBase.MongoDataBase.Remove
- uid: Fantasy.DataBase.IDateBase.Remove``1(System.Object,System.Int64,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Remove``1(System.Object,System.Int64,System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Object_System_Int64_System_String_
  name: Remove<T>(object, long, string)
  nameWithType: IDateBase.Remove<T>(object, long, string)
  fullName: Fantasy.DataBase.IDateBase.Remove<T>(object, long, string)
  nameWithType.vb: IDateBase.Remove(Of T)(Object, Long, String)
  fullName.vb: Fantasy.DataBase.IDateBase.Remove(Of T)(Object, Long, String)
  name.vb: Remove(Of T)(Object, Long, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Object,System.Int64,System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Object_System_Int64_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Object,System.Int64,System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Object_System_Int64_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.String)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_String_
  name: Remove<T>(long, string)
  nameWithType: IDateBase.Remove<T>(long, string)
  fullName: Fantasy.DataBase.IDateBase.Remove<T>(long, string)
  nameWithType.vb: IDateBase.Remove(Of T)(Long, String)
  fullName.vb: Fantasy.DataBase.IDateBase.Remove(Of T)(Long, String)
  name.vb: Remove(Of T)(Long, String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Object_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Remove<T>(long, object, Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.Remove<T>(long, object, Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.Remove<T>(long, object, System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.Remove(Of T)(Long, Object, Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Remove(Of T)(Long, Object, System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Remove(Of T)(Long, Object, Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Object_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Object_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Object_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Remove<T>(long, object, Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.Remove<T>(long, object, Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.Remove<T>(long, object, System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.Remove(Of T)(Long, Object, Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Remove(Of T)(Long, Object, System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Remove(Of T)(Long, Object, Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Object_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Object_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{{T},System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  parent: Fantasy.DataBase.IDateBase
  definition: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Remove<T>(long, Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.Remove<T>(long, Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.Remove<T>(long, System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.Remove(Of T)(Long, Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Remove(Of T)(Long, System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Remove(Of T)(Long, Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  commentId: M:Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  name: Remove<T>(long, Expression<Func<T, bool>>, string)
  nameWithType: IDateBase.Remove<T>(long, Expression<Func<T, bool>>, string)
  fullName: Fantasy.DataBase.IDateBase.Remove<T>(long, System.Linq.Expressions.Expression<System.Func<T, bool>>, string)
  nameWithType.vb: IDateBase.Remove(Of T)(Long, Expression(Of Func(Of T, Boolean)), String)
  fullName.vb: Fantasy.DataBase.IDateBase.Remove(Of T)(Long, System.Linq.Expressions.Expression(Of System.Func(Of T, Boolean)), String)
  name.vb: Remove(Of T)(Long, Expression(Of Func(Of T, Boolean)), String)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: <
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.Remove``1(System.Int64,System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.String)
    name: Remove
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_Remove__1_System_Int64_System_Linq_Expressions_Expression_System_Func___0_System_Boolean___System_String_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: ','
  - name: " "
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.linq.expressions.expression-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.CreateIndex*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.CreateIndex
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_CreateIndex__1_System_String_System_Object___
  name: CreateIndex
  nameWithType: MongoDataBase.CreateIndex
  fullName: Fantasy.DataBase.MongoDataBase.CreateIndex
- uid: Fantasy.DataBase.IDateBase.CreateIndex``1(System.String,System.Object[])
  commentId: M:Fantasy.DataBase.IDateBase.CreateIndex``1(System.String,System.Object[])
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateIndex__1_System_String_System_Object___
  name: CreateIndex<T>(string, params object[])
  nameWithType: IDateBase.CreateIndex<T>(string, params object[])
  fullName: Fantasy.DataBase.IDateBase.CreateIndex<T>(string, params object[])
  nameWithType.vb: IDateBase.CreateIndex(Of T)(String, ParamArray Object())
  fullName.vb: Fantasy.DataBase.IDateBase.CreateIndex(Of T)(String, ParamArray Object())
  name.vb: CreateIndex(Of T)(String, ParamArray Object())
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.CreateIndex``1(System.String,System.Object[])
    name: CreateIndex
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateIndex__1_System_String_System_Object___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.CreateIndex``1(System.String,System.Object[])
    name: CreateIndex
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateIndex__1_System_String_System_Object___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: Fantasy.DataBase.IDateBase.CreateIndex``1(System.Object[])
  commentId: M:Fantasy.DataBase.IDateBase.CreateIndex``1(System.Object[])
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateIndex__1_System_Object___
  name: CreateIndex<T>(params object[])
  nameWithType: IDateBase.CreateIndex<T>(params object[])
  fullName: Fantasy.DataBase.IDateBase.CreateIndex<T>(params object[])
  nameWithType.vb: IDateBase.CreateIndex(Of T)(ParamArray Object())
  fullName.vb: Fantasy.DataBase.IDateBase.CreateIndex(Of T)(ParamArray Object())
  name.vb: CreateIndex(Of T)(ParamArray Object())
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.CreateIndex``1(System.Object[])
    name: CreateIndex
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateIndex__1_System_Object___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: params
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.CreateIndex``1(System.Object[])
    name: CreateIndex
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateIndex__1_System_Object___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: ParamArray
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
  - name: )
- uid: Fantasy.DataBase.MongoDataBase.CreateDB*
  commentId: Overload:Fantasy.DataBase.MongoDataBase.CreateDB
  href: Fantasy.DataBase.MongoDataBase.html#Fantasy_DataBase_MongoDataBase_CreateDB__1
  name: CreateDB
  nameWithType: MongoDataBase.CreateDB
  fullName: Fantasy.DataBase.MongoDataBase.CreateDB
- uid: Fantasy.DataBase.IDateBase.CreateDB``1
  commentId: M:Fantasy.DataBase.IDateBase.CreateDB``1
  parent: Fantasy.DataBase.IDateBase
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateDB__1
  name: CreateDB<T>()
  nameWithType: IDateBase.CreateDB<T>()
  fullName: Fantasy.DataBase.IDateBase.CreateDB<T>()
  nameWithType.vb: IDateBase.CreateDB(Of T)()
  fullName.vb: Fantasy.DataBase.IDateBase.CreateDB(Of T)()
  name.vb: CreateDB(Of T)()
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.CreateDB``1
    name: CreateDB
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateDB__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.CreateDB``1
    name: CreateDB
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateDB__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Fantasy.DataBase.IDateBase.CreateDB(System.Type)
  commentId: M:Fantasy.DataBase.IDateBase.CreateDB(System.Type)
  parent: Fantasy.DataBase.IDateBase
  isExternal: true
  href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateDB_System_Type_
  name: CreateDB(Type)
  nameWithType: IDateBase.CreateDB(Type)
  fullName: Fantasy.DataBase.IDateBase.CreateDB(System.Type)
  spec.csharp:
  - uid: Fantasy.DataBase.IDateBase.CreateDB(System.Type)
    name: CreateDB
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateDB_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
  spec.vb:
  - uid: Fantasy.DataBase.IDateBase.CreateDB(System.Type)
    name: CreateDB
    href: Fantasy.DataBase.IDateBase.html#Fantasy_DataBase_IDateBase_CreateDB_System_Type_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
