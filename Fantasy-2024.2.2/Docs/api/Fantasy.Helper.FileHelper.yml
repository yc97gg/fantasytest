### YamlMime:ManagedReference
items:
- uid: Fantasy.Helper.FileHelper
  commentId: T:Fantasy.Helper.FileHelper
  id: FileHelper
  parent: Fantasy.Helper
  children:
  - Fantasy.Helper.FileHelper.ClearDirectoryFile(System.String)
  - Fantasy.Helper.FileHelper.Copy(System.String,System.String,System.Boolean)
  - Fantasy.Helper.FileHelper.CopyDirectory(System.String,System.String,System.Boolean)
  - Fantasy.Helper.FileHelper.CreateDirectory(System.String)
  - Fantasy.Helper.FileHelper.GetDirectoriesByFilePath(System.String)
  - Fantasy.Helper.FileHelper.GetDirectoryFile(System.String,System.String,System.IO.SearchOption)
  - Fantasy.Helper.FileHelper.GetFullPath(System.String)
  langs:
  - csharp
  - vb
  name: FileHelper
  nameWithType: FileHelper
  fullName: Fantasy.Helper.FileHelper
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: FileHelper
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
    startLine: 8
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Helper
  summary: 文件操作助手类，提供了各种文件操作方法。
  example: []
  syntax:
    content: public static class FileHelper
    content.vb: Public Module FileHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Fantasy.Helper.FileHelper.GetFullPath(System.String)
  commentId: M:Fantasy.Helper.FileHelper.GetFullPath(System.String)
  id: GetFullPath(System.String)
  parent: Fantasy.Helper.FileHelper
  langs:
  - csharp
  - vb
  name: GetFullPath(string)
  nameWithType: FileHelper.GetFullPath(string)
  fullName: Fantasy.Helper.FileHelper.GetFullPath(string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetFullPath
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
    startLine: 15
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Helper
  summary: 获取相对路径的完整路径。
  example: []
  syntax:
    content: public static string GetFullPath(string relativePath)
    parameters:
    - id: relativePath
      type: System.String
      description: 相对路径。
    return:
      type: System.String
      description: 完整路径。
    content.vb: Public Shared Function GetFullPath(relativePath As String) As String
  overload: Fantasy.Helper.FileHelper.GetFullPath*
  nameWithType.vb: FileHelper.GetFullPath(String)
  fullName.vb: Fantasy.Helper.FileHelper.GetFullPath(String)
  name.vb: GetFullPath(String)
- uid: Fantasy.Helper.FileHelper.CreateDirectory(System.String)
  commentId: M:Fantasy.Helper.FileHelper.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Fantasy.Helper.FileHelper
  langs:
  - csharp
  - vb
  name: CreateDirectory(string)
  nameWithType: FileHelper.CreateDirectory(string)
  fullName: Fantasy.Helper.FileHelper.CreateDirectory(string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: CreateDirectory
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
    startLine: 24
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Helper
  summary: 根据文件夹路径创建文件夹，如果文件夹不存在会自动创建文件夹。
  example: []
  syntax:
    content: public static void CreateDirectory(string directoryPath)
    parameters:
    - id: directoryPath
      type: System.String
      description: ''
    content.vb: Public Shared Sub CreateDirectory(directoryPath As String)
  overload: Fantasy.Helper.FileHelper.CreateDirectory*
  nameWithType.vb: FileHelper.CreateDirectory(String)
  fullName.vb: Fantasy.Helper.FileHelper.CreateDirectory(String)
  name.vb: CreateDirectory(String)
- uid: Fantasy.Helper.FileHelper.Copy(System.String,System.String,System.Boolean)
  commentId: M:Fantasy.Helper.FileHelper.Copy(System.String,System.String,System.Boolean)
  id: Copy(System.String,System.String,System.Boolean)
  parent: Fantasy.Helper.FileHelper
  langs:
  - csharp
  - vb
  name: Copy(string, string, bool)
  nameWithType: FileHelper.Copy(string, string, bool)
  fullName: Fantasy.Helper.FileHelper.Copy(string, string, bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Copy
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
    startLine: 50
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Helper
  summary: 将文件复制到目标路径，如果目标目录不存在会自动创建目录。
  example: []
  syntax:
    content: public static void Copy(string sourceFile, string destinationFile, bool overwrite)
    parameters:
    - id: sourceFile
      type: System.String
      description: 源文件路径。
    - id: destinationFile
      type: System.String
      description: 目标文件路径。
    - id: overwrite
      type: System.Boolean
      description: 是否覆盖已存在的目标文件。
    content.vb: Public Shared Sub Copy(sourceFile As String, destinationFile As String, overwrite As Boolean)
  overload: Fantasy.Helper.FileHelper.Copy*
  nameWithType.vb: FileHelper.Copy(String, String, Boolean)
  fullName.vb: Fantasy.Helper.FileHelper.Copy(String, String, Boolean)
  name.vb: Copy(String, String, Boolean)
- uid: Fantasy.Helper.FileHelper.GetDirectoriesByFilePath(System.String)
  commentId: M:Fantasy.Helper.FileHelper.GetDirectoriesByFilePath(System.String)
  id: GetDirectoriesByFilePath(System.String)
  parent: Fantasy.Helper.FileHelper
  langs:
  - csharp
  - vb
  name: GetDirectoriesByFilePath(string)
  nameWithType: FileHelper.GetDirectoriesByFilePath(string)
  fullName: Fantasy.Helper.FileHelper.GetDirectoriesByFilePath(string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetDirectoriesByFilePath
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
    startLine: 61
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Helper
  summary: 获取文件路径内的所有文件夹路径。
  example: []
  syntax:
    content: public static IEnumerable<string> GetDirectoriesByFilePath(string filePath)
    parameters:
    - id: filePath
      type: System.String
      description: 文件路径。
    return:
      type: System.Collections.Generic.IEnumerable{System.String}
      description: 文件夹路径列表。
    content.vb: Public Shared Function GetDirectoriesByFilePath(filePath As String) As IEnumerable(Of String)
  overload: Fantasy.Helper.FileHelper.GetDirectoriesByFilePath*
  nameWithType.vb: FileHelper.GetDirectoriesByFilePath(String)
  fullName.vb: Fantasy.Helper.FileHelper.GetDirectoriesByFilePath(String)
  name.vb: GetDirectoriesByFilePath(String)
- uid: Fantasy.Helper.FileHelper.CopyDirectory(System.String,System.String,System.Boolean)
  commentId: M:Fantasy.Helper.FileHelper.CopyDirectory(System.String,System.String,System.Boolean)
  id: CopyDirectory(System.String,System.String,System.Boolean)
  parent: Fantasy.Helper.FileHelper
  langs:
  - csharp
  - vb
  name: CopyDirectory(string, string, bool)
  nameWithType: FileHelper.CopyDirectory(string, string, bool)
  fullName: Fantasy.Helper.FileHelper.CopyDirectory(string, string, bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: CopyDirectory
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
    startLine: 84
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Helper
  summary: 将文件夹内的所有内容复制到目标位置。
  example: []
  syntax:
    content: public static void CopyDirectory(string sourceDirectory, string destinationDirectory, bool overwrite)
    parameters:
    - id: sourceDirectory
      type: System.String
      description: 源文件夹路径。
    - id: destinationDirectory
      type: System.String
      description: 目标文件夹路径。
    - id: overwrite
      type: System.Boolean
      description: 是否覆盖已存在的文件。
    content.vb: Public Shared Sub CopyDirectory(sourceDirectory As String, destinationDirectory As String, overwrite As Boolean)
  overload: Fantasy.Helper.FileHelper.CopyDirectory*
  nameWithType.vb: FileHelper.CopyDirectory(String, String, Boolean)
  fullName.vb: Fantasy.Helper.FileHelper.CopyDirectory(String, String, Boolean)
  name.vb: CopyDirectory(String, String, Boolean)
- uid: Fantasy.Helper.FileHelper.GetDirectoryFile(System.String,System.String,System.IO.SearchOption)
  commentId: M:Fantasy.Helper.FileHelper.GetDirectoryFile(System.String,System.String,System.IO.SearchOption)
  id: GetDirectoryFile(System.String,System.String,System.IO.SearchOption)
  parent: Fantasy.Helper.FileHelper
  langs:
  - csharp
  - vb
  name: GetDirectoryFile(string, string, SearchOption)
  nameWithType: FileHelper.GetDirectoryFile(string, string, SearchOption)
  fullName: Fantasy.Helper.FileHelper.GetDirectoryFile(string, string, System.IO.SearchOption)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetDirectoryFile
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
    startLine: 127
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Helper
  summary: 获取目录下的所有文件
  example: []
  syntax:
    content: public static string[] GetDirectoryFile(string folderPath, string searchPattern, SearchOption searchOption)
    parameters:
    - id: folderPath
      type: System.String
      description: 文件夹路径。
    - id: searchPattern
      type: System.String
      description: 需要查找的文件通配符
    - id: searchOption
      type: System.IO.SearchOption
      description: 查找的类型
    return:
      type: System.String[]
      description: ''
    content.vb: Public Shared Function GetDirectoryFile(folderPath As String, searchPattern As String, searchOption As SearchOption) As String()
  overload: Fantasy.Helper.FileHelper.GetDirectoryFile*
  nameWithType.vb: FileHelper.GetDirectoryFile(String, String, SearchOption)
  fullName.vb: Fantasy.Helper.FileHelper.GetDirectoryFile(String, String, System.IO.SearchOption)
  name.vb: GetDirectoryFile(String, String, SearchOption)
- uid: Fantasy.Helper.FileHelper.ClearDirectoryFile(System.String)
  commentId: M:Fantasy.Helper.FileHelper.ClearDirectoryFile(System.String)
  id: ClearDirectoryFile(System.String)
  parent: Fantasy.Helper.FileHelper
  langs:
  - csharp
  - vb
  name: ClearDirectoryFile(string)
  nameWithType: FileHelper.ClearDirectoryFile(string)
  fullName: Fantasy.Helper.FileHelper.ClearDirectoryFile(string)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ClearDirectoryFile
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Helper/FileHelper.cs
    startLine: 136
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Helper
  summary: 清空文件夹内的所有文件。
  example: []
  syntax:
    content: public static void ClearDirectoryFile(string folderPath)
    parameters:
    - id: folderPath
      type: System.String
      description: 文件夹路径。
    content.vb: Public Shared Sub ClearDirectoryFile(folderPath As String)
  overload: Fantasy.Helper.FileHelper.ClearDirectoryFile*
  nameWithType.vb: FileHelper.ClearDirectoryFile(String)
  fullName.vb: Fantasy.Helper.FileHelper.ClearDirectoryFile(String)
  name.vb: ClearDirectoryFile(String)
references:
- uid: Fantasy.Helper
  commentId: N:Fantasy.Helper
  href: Fantasy.html
  name: Fantasy.Helper
  nameWithType: Fantasy.Helper
  fullName: Fantasy.Helper
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantasy.Helper.FileHelper.GetFullPath*
  commentId: Overload:Fantasy.Helper.FileHelper.GetFullPath
  href: Fantasy.Helper.FileHelper.html#Fantasy_Helper_FileHelper_GetFullPath_System_String_
  name: GetFullPath
  nameWithType: FileHelper.GetFullPath
  fullName: Fantasy.Helper.FileHelper.GetFullPath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Fantasy.Helper.FileHelper.CreateDirectory*
  commentId: Overload:Fantasy.Helper.FileHelper.CreateDirectory
  href: Fantasy.Helper.FileHelper.html#Fantasy_Helper_FileHelper_CreateDirectory_System_String_
  name: CreateDirectory
  nameWithType: FileHelper.CreateDirectory
  fullName: Fantasy.Helper.FileHelper.CreateDirectory
- uid: Fantasy.Helper.FileHelper.Copy*
  commentId: Overload:Fantasy.Helper.FileHelper.Copy
  href: Fantasy.Helper.FileHelper.html#Fantasy_Helper_FileHelper_Copy_System_String_System_String_System_Boolean_
  name: Copy
  nameWithType: FileHelper.Copy
  fullName: Fantasy.Helper.FileHelper.Copy
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Fantasy.Helper.FileHelper.GetDirectoriesByFilePath*
  commentId: Overload:Fantasy.Helper.FileHelper.GetDirectoriesByFilePath
  href: Fantasy.Helper.FileHelper.html#Fantasy_Helper_FileHelper_GetDirectoriesByFilePath_System_String_
  name: GetDirectoriesByFilePath
  nameWithType: FileHelper.GetDirectoriesByFilePath
  fullName: Fantasy.Helper.FileHelper.GetDirectoriesByFilePath
- uid: System.Collections.Generic.IEnumerable{System.String}
  commentId: T:System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<string>
  nameWithType: IEnumerable<string>
  fullName: System.Collections.Generic.IEnumerable<string>
  nameWithType.vb: IEnumerable(Of String)
  fullName.vb: System.Collections.Generic.IEnumerable(Of String)
  name.vb: IEnumerable(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Fantasy.Helper.FileHelper.CopyDirectory*
  commentId: Overload:Fantasy.Helper.FileHelper.CopyDirectory
  href: Fantasy.Helper.FileHelper.html#Fantasy_Helper_FileHelper_CopyDirectory_System_String_System_String_System_Boolean_
  name: CopyDirectory
  nameWithType: FileHelper.CopyDirectory
  fullName: Fantasy.Helper.FileHelper.CopyDirectory
- uid: Fantasy.Helper.FileHelper.GetDirectoryFile*
  commentId: Overload:Fantasy.Helper.FileHelper.GetDirectoryFile
  href: Fantasy.Helper.FileHelper.html#Fantasy_Helper_FileHelper_GetDirectoryFile_System_String_System_String_System_IO_SearchOption_
  name: GetDirectoryFile
  nameWithType: FileHelper.GetDirectoryFile
  fullName: Fantasy.Helper.FileHelper.GetDirectoryFile
- uid: System.IO.SearchOption
  commentId: T:System.IO.SearchOption
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.searchoption
  name: SearchOption
  nameWithType: SearchOption
  fullName: System.IO.SearchOption
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: Fantasy.Helper.FileHelper.ClearDirectoryFile*
  commentId: Overload:Fantasy.Helper.FileHelper.ClearDirectoryFile
  href: Fantasy.Helper.FileHelper.html#Fantasy_Helper_FileHelper_ClearDirectoryFile_System_String_
  name: ClearDirectoryFile
  nameWithType: FileHelper.ClearDirectoryFile
  fullName: Fantasy.Helper.FileHelper.ClearDirectoryFile
