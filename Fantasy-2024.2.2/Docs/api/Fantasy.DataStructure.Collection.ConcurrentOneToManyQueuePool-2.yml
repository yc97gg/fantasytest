### YamlMime:ManagedReference
items:
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
  commentId: T:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
  id: ConcurrentOneToManyQueuePool`2
  parent: Fantasy.DataStructure.Collection
  children:
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Create
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Dispose
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.IsPool
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.SetIsPool(System.Boolean)
  langs:
  - csharp
  - vb
  name: ConcurrentOneToManyQueuePool<TKey, TValue>
  nameWithType: ConcurrentOneToManyQueuePool<TKey, TValue>
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/ConcurrentOneToManyQueuePool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ConcurrentOneToManyQueuePool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/ConcurrentOneToManyQueuePool.cs
    startLine: 15
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 表示一个并发的一对多队列池，用于维护具有相同键的多个值的关联关系，实现了 <xref href="System.IDisposable" data-throw-if-not-resolved="false"></xref> 接口。
  example: []
  syntax:
    content: 'public class ConcurrentOneToManyQueuePool<TKey, TValue> : ConcurrentOneToManyQueue<TKey, TValue>, IDictionary<TKey, Queue<TValue>>, ICollection<KeyValuePair<TKey, Queue<TValue>>>, IReadOnlyDictionary<TKey, Queue<TValue>>, IReadOnlyCollection<KeyValuePair<TKey, Queue<TValue>>>, IEnumerable<KeyValuePair<TKey, Queue<TValue>>>, IDictionary, ICollection, IEnumerable, IDisposable, IPool where TKey : notnull'
    typeParameters:
    - id: TKey
      description: 关键字的类型，不能为空。
    - id: TValue
      description: 值的类型。
    content.vb: Public Class ConcurrentOneToManyQueuePool(Of TKey, TValue) Inherits ConcurrentOneToManyQueue(Of TKey, TValue) Implements IDictionary(Of TKey, Queue(Of TValue)), ICollection(Of KeyValuePair(Of TKey, Queue(Of TValue))), IReadOnlyDictionary(Of TKey, Queue(Of TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, Queue(Of TValue))), IEnumerable(Of KeyValuePair(Of TKey, Queue(Of TValue))), IDictionary, ICollection, IEnumerable, IDisposable, IPool
  inheritance:
  - System.Object
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}
  implements:
  - System.Collections.Generic.IDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.Queue{{TValue}}}}
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.Queue{{TValue}}}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.Queue{{TValue}}}}
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  - System.IDisposable
  - Fantasy.Pool.IPool
  inheritedMembers:
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.Contains({TKey},{TValue})
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.Enqueue({TKey},{TValue})
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.Dequeue({TKey})
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.TryDequeue({TKey},{TValue}@)
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.RemoveKey({TKey})
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.Clear
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.AddOrUpdate({TKey},System.Func{{TKey},System.Collections.Generic.Queue{{TValue}}},System.Func{{TKey},System.Collections.Generic.Queue{{TValue}},System.Collections.Generic.Queue{{TValue}}})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.AddOrUpdate({TKey},System.Collections.Generic.Queue{{TValue}},System.Func{{TKey},System.Collections.Generic.Queue{{TValue}},System.Collections.Generic.Queue{{TValue}}})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.AddOrUpdate``1({TKey},System.Func{{TKey},{TArg},System.Collections.Generic.Queue{{TValue}}},System.Func{{TKey},System.Collections.Generic.Queue{{TValue}},{TArg},System.Collections.Generic.Queue{{TValue}}},{TArg})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Clear
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.ContainsKey({TKey})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.GetEnumerator
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.GetOrAdd({TKey},System.Func{{TKey},System.Collections.Generic.Queue{{TValue}}})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.GetOrAdd({TKey},System.Collections.Generic.Queue{{TValue}})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.GetOrAdd``1({TKey},System.Func{{TKey},{TArg},System.Collections.Generic.Queue{{TValue}}},{TArg})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.ToArray
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.TryAdd({TKey},System.Collections.Generic.Queue{{TValue}})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.TryGetValue({TKey},System.Collections.Generic.Queue{{TValue}}@)
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.TryRemove(System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.Queue{{TValue}}})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.TryRemove({TKey},System.Collections.Generic.Queue{{TValue}}@)
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.TryUpdate({TKey},System.Collections.Generic.Queue{{TValue}},System.Collections.Generic.Queue{{TValue}})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Comparer
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Count
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.IsEmpty
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Item({TKey})
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Keys
  - System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Values
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Fantasy.Helper.JsonHelper.ToJson``1
  - System.Collections.Generic.IDictionary{`0,System.Collections.Generic.Queue{`1}}.Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2({TKey},System.Collections.Generic.Queue{{TValue}}@)
  nameWithType.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue)
  name.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue)
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Create
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Create
  id: Create
  parent: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
  langs:
  - csharp
  - vb
  name: Create()
  nameWithType: ConcurrentOneToManyQueuePool<TKey, TValue>.Create()
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>.Create()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/ConcurrentOneToManyQueuePool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Create
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/ConcurrentOneToManyQueuePool.cs
    startLine: 24
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 创建并返回一个 <xref href="Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool%602" data-throw-if-not-resolved="false"></xref> 的实例。
  example: []
  syntax:
    content: public static ConcurrentOneToManyQueuePool<TKey, TValue> Create()
    return:
      type: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
      description: 创建的实例。
    content.vb: Public Shared Function Create() As ConcurrentOneToManyQueuePool(Of TKey, TValue)
  overload: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Create*
  nameWithType.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue).Create()
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue).Create()
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Dispose
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Dispose
  id: Dispose
  parent: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: ConcurrentOneToManyQueuePool<TKey, TValue>.Dispose()
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>.Dispose()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/ConcurrentOneToManyQueuePool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Dispose
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/ConcurrentOneToManyQueuePool.cs
    startLine: 35
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 释放当前实例所占用的资源，并将实例返回到对象池中，以便重用。
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Dispose*
  implements:
  - System.IDisposable.Dispose
  nameWithType.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue).Dispose()
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue).Dispose()
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.IsPool
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.IsPool
  id: IsPool
  parent: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
  langs:
  - csharp
  - vb
  name: IsPool()
  nameWithType: ConcurrentOneToManyQueuePool<TKey, TValue>.IsPool()
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>.IsPool()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/ConcurrentOneToManyQueuePool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: IsPool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/ConcurrentOneToManyQueuePool.cs
    startLine: 52
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 获取一个值，该值指示当前实例是否为对象池中的实例。
  example: []
  syntax:
    content: public bool IsPool()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsPool() As Boolean
  overload: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.IsPool*
  implements:
  - Fantasy.Pool.IPool.IsPool
  nameWithType.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue).IsPool()
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue).IsPool()
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.SetIsPool(System.Boolean)
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.SetIsPool(System.Boolean)
  id: SetIsPool(System.Boolean)
  parent: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
  langs:
  - csharp
  - vb
  name: SetIsPool(bool)
  nameWithType: ConcurrentOneToManyQueuePool<TKey, TValue>.SetIsPool(bool)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>.SetIsPool(bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/ConcurrentOneToManyQueuePool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: SetIsPool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/ConcurrentOneToManyQueuePool.cs
    startLine: 61
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 设置一个值，该值指示当前实例是否为对象池中的实例。
  example: []
  syntax:
    content: public void SetIsPool(bool isPool)
    parameters:
    - id: isPool
      type: System.Boolean
      description: ''
    content.vb: Public Sub SetIsPool(isPool As Boolean)
  overload: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.SetIsPool*
  implements:
  - Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  nameWithType.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue).SetIsPool(Boolean)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue).SetIsPool(Boolean)
  name.vb: SetIsPool(Boolean)
references:
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Fantasy.DataStructure.Collection
  commentId: N:Fantasy.DataStructure.Collection
  href: Fantasy.html
  name: Fantasy.DataStructure.Collection
  nameWithType: Fantasy.DataStructure.Collection
  fullName: Fantasy.DataStructure.Collection
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.Collection
    name: Collection
    href: Fantasy.DataStructure.Collection.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.Collection
    name: Collection
    href: Fantasy.DataStructure.Collection.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}
  parent: System.Collections.Concurrent
  definition: System.Collections.Concurrent.ConcurrentDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  name: ConcurrentDictionary<TKey, Queue<TValue>>
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue))
  name.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}
  commentId: T:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}
  parent: Fantasy.DataStructure.Collection
  definition: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html
  name: ConcurrentOneToManyQueue<TKey, TValue>
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue)
  name.vb: ConcurrentOneToManyQueue(Of TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2
    name: ConcurrentOneToManyQueue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2
    name: ConcurrentOneToManyQueue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  commentId: T:System.Collections.Generic.IDictionary{`0,System.Collections.Generic.Queue{`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, Queue<TValue>>
  nameWithType: IDictionary<TKey, Queue<TValue>>
  fullName: System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.Queue<TValue>>
  nameWithType.vb: IDictionary(Of TKey, Queue(Of TValue))
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue))
  name.vb: IDictionary(Of TKey, Queue(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.Queue{{TValue}}}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.Queue{`1}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<KeyValuePair<TKey, Queue<TValue>>>
  nameWithType: ICollection<KeyValuePair<TKey, Queue<TValue>>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.Queue<TValue>>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, Queue(Of TValue)))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.Queue(Of TValue)))
  name.vb: ICollection(Of KeyValuePair(Of TKey, Queue(Of TValue)))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{`0,System.Collections.Generic.Queue{`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, Queue<TValue>>
  nameWithType: IReadOnlyDictionary<TKey, Queue<TValue>>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, System.Collections.Generic.Queue<TValue>>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, Queue(Of TValue))
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue))
  name.vb: IReadOnlyDictionary(Of TKey, Queue(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.Queue{{TValue}}}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.Queue{`1}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<KeyValuePair<TKey, Queue<TValue>>>
  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, Queue<TValue>>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.Queue<TValue>>>
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, Queue(Of TValue)))
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.Queue(Of TValue)))
  name.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, Queue(Of TValue)))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.Queue{{TValue}}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.Queue{`1}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<TKey, Queue<TValue>>>
  nameWithType: IEnumerable<KeyValuePair<TKey, Queue<TValue>>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.Queue<TValue>>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, Queue(Of TValue)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.Queue(Of TValue)))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, Queue(Of TValue)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.idictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.icollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: Fantasy.Pool.IPool
  commentId: T:Fantasy.Pool.IPool
  parent: Fantasy.Pool
  href: Fantasy.Pool.IPool.html
  name: IPool
  nameWithType: IPool
  fullName: Fantasy.Pool.IPool
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.Contains({TKey},{TValue})
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Contains(`0,`1)
  parent: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Contains(`0,`1)
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Contains__0__1_
  name: Contains(TKey, TValue)
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.Contains(TKey, TValue)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.Contains(TKey, TValue)
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).Contains(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).Contains(TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Contains(`0,`1)
    name: Contains
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Contains__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Contains(`0,`1)
    name: Contains
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Contains__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.Enqueue({TKey},{TValue})
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Enqueue(`0,`1)
  parent: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Enqueue(`0,`1)
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Enqueue__0__1_
  name: Enqueue(TKey, TValue)
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.Enqueue(TKey, TValue)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.Enqueue(TKey, TValue)
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).Enqueue(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).Enqueue(TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Enqueue(`0,`1)
    name: Enqueue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Enqueue__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Enqueue(`0,`1)
    name: Enqueue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Enqueue__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.Dequeue({TKey})
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Dequeue(`0)
  parent: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Dequeue(`0)
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Dequeue__0_
  name: Dequeue(TKey)
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.Dequeue(TKey)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.Dequeue(TKey)
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).Dequeue(TKey)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).Dequeue(TKey)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Dequeue(`0)
    name: Dequeue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Dequeue__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Dequeue(`0)
    name: Dequeue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Dequeue__0_
  - name: (
  - name: TKey
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.TryDequeue({TKey},{TValue}@)
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.TryDequeue(`0,`1@)
  parent: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.TryDequeue(`0,`1@)
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_TryDequeue__0__1__
  name: TryDequeue(TKey, out TValue)
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.TryDequeue(TKey, out TValue)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.TryDequeue(TKey, out TValue)
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).TryDequeue(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).TryDequeue(TKey, TValue)
  name.vb: TryDequeue(TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.TryDequeue(`0,`1@)
    name: TryDequeue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_TryDequeue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.TryDequeue(`0,`1@)
    name: TryDequeue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_TryDequeue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.RemoveKey({TKey})
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.RemoveKey(`0)
  parent: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.RemoveKey(`0)
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_RemoveKey__0_
  name: RemoveKey(TKey)
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.RemoveKey(TKey)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.RemoveKey(TKey)
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).RemoveKey(TKey)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).RemoveKey(TKey)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.RemoveKey(`0)
    name: RemoveKey
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_RemoveKey__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.RemoveKey(`0)
    name: RemoveKey
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_RemoveKey__0_
  - name: (
  - name: TKey
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}.Clear
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Clear
  parent: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{{TKey},{TValue}}
  definition: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Clear
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Clear
  name: Clear()
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.Clear()
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.Clear()
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).Clear()
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Clear
    name: Clear
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue{`0,`1}.Clear
    name: Clear
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Clear
  - name: (
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.AddOrUpdate({TKey},System.Func{{TKey},System.Collections.Generic.Queue{{TValue}}},System.Func{{TKey},System.Collections.Generic.Queue{{TValue}},System.Collections.Generic.Queue{{TValue}}})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.AddOrUpdate(`0,System.Func{`0,System.Collections.Generic.Queue{`1}},System.Func{`0,System.Collections.Generic.Queue{`1},System.Collections.Generic.Queue{`1}})
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-system-func((-0-1))-system-func((-0-1-1)))
  name: AddOrUpdate(TKey, Func<TKey, Queue<TValue>>, Func<TKey, Queue<TValue>, Queue<TValue>>)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.AddOrUpdate(TKey, Func<TKey, Queue<TValue>>, Func<TKey, Queue<TValue>, Queue<TValue>>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.AddOrUpdate(TKey, System.Func<TKey, System.Collections.Generic.Queue<TValue>>, System.Func<TKey, System.Collections.Generic.Queue<TValue>, System.Collections.Generic.Queue<TValue>>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).AddOrUpdate(TKey, Func(Of TKey, Queue(Of TValue)), Func(Of TKey, Queue(Of TValue), Queue(Of TValue)))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).AddOrUpdate(TKey, System.Func(Of TKey, System.Collections.Generic.Queue(Of TValue)), System.Func(Of TKey, System.Collections.Generic.Queue(Of TValue), System.Collections.Generic.Queue(Of TValue)))
  name.vb: AddOrUpdate(TKey, Func(Of TKey, Queue(Of TValue)), Func(Of TKey, Queue(Of TValue), Queue(Of TValue)))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.AddOrUpdate(`0,System.Func{`0,System.Collections.Generic.Queue{`1}},System.Func{`0,System.Collections.Generic.Queue{`1},System.Collections.Generic.Queue{`1}})
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-system-func((-0-1))-system-func((-0-1-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.AddOrUpdate(`0,System.Func{`0,System.Collections.Generic.Queue{`1}},System.Func{`0,System.Collections.Generic.Queue{`1},System.Collections.Generic.Queue{`1}})
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-system-func((-0-1))-system-func((-0-1-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.AddOrUpdate({TKey},System.Collections.Generic.Queue{{TValue}},System.Func{{TKey},System.Collections.Generic.Queue{{TValue}},System.Collections.Generic.Queue{{TValue}}})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.AddOrUpdate(`0,System.Collections.Generic.Queue{`1},System.Func{`0,System.Collections.Generic.Queue{`1},System.Collections.Generic.Queue{`1}})
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-1-system-func((-0-1-1)))
  name: AddOrUpdate(TKey, Queue<TValue>, Func<TKey, Queue<TValue>, Queue<TValue>>)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.AddOrUpdate(TKey, Queue<TValue>, Func<TKey, Queue<TValue>, Queue<TValue>>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.AddOrUpdate(TKey, System.Collections.Generic.Queue<TValue>, System.Func<TKey, System.Collections.Generic.Queue<TValue>, System.Collections.Generic.Queue<TValue>>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).AddOrUpdate(TKey, Queue(Of TValue), Func(Of TKey, Queue(Of TValue), Queue(Of TValue)))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).AddOrUpdate(TKey, System.Collections.Generic.Queue(Of TValue), System.Func(Of TKey, System.Collections.Generic.Queue(Of TValue), System.Collections.Generic.Queue(Of TValue)))
  name.vb: AddOrUpdate(TKey, Queue(Of TValue), Func(Of TKey, Queue(Of TValue), Queue(Of TValue)))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.AddOrUpdate(`0,System.Collections.Generic.Queue{`1},System.Func{`0,System.Collections.Generic.Queue{`1},System.Collections.Generic.Queue{`1}})
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-1-system-func((-0-1-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.AddOrUpdate(`0,System.Collections.Generic.Queue{`1},System.Func{`0,System.Collections.Generic.Queue{`1},System.Collections.Generic.Queue{`1}})
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-1-system-func((-0-1-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.AddOrUpdate``1({TKey},System.Func{{TKey},{TArg},System.Collections.Generic.Queue{{TValue}}},System.Func{{TKey},System.Collections.Generic.Queue{{TValue}},{TArg},System.Collections.Generic.Queue{{TValue}}},{TArg})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.AddOrUpdate``1(`0,System.Func{`0,``0,System.Collections.Generic.Queue{`1}},System.Func{`0,System.Collections.Generic.Queue{`1},``0,System.Collections.Generic.Queue{`1}},``0)
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate-1(-0-system-func((-0-0-1))-system-func((-0-1-0-1))-0)
  name: AddOrUpdate<TArg>(TKey, Func<TKey, TArg, Queue<TValue>>, Func<TKey, Queue<TValue>, TArg, Queue<TValue>>, TArg)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.AddOrUpdate<TArg>(TKey, Func<TKey, TArg, Queue<TValue>>, Func<TKey, Queue<TValue>, TArg, Queue<TValue>>, TArg)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.AddOrUpdate<TArg>(TKey, System.Func<TKey, TArg, System.Collections.Generic.Queue<TValue>>, System.Func<TKey, System.Collections.Generic.Queue<TValue>, TArg, System.Collections.Generic.Queue<TValue>>, TArg)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).AddOrUpdate(Of TArg)(TKey, Func(Of TKey, TArg, Queue(Of TValue)), Func(Of TKey, Queue(Of TValue), TArg, Queue(Of TValue)), TArg)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).AddOrUpdate(Of TArg)(TKey, System.Func(Of TKey, TArg, System.Collections.Generic.Queue(Of TValue)), System.Func(Of TKey, System.Collections.Generic.Queue(Of TValue), TArg, System.Collections.Generic.Queue(Of TValue)), TArg)
  name.vb: AddOrUpdate(Of TArg)(TKey, Func(Of TKey, TArg, Queue(Of TValue)), Func(Of TKey, Queue(Of TValue), TArg, Queue(Of TValue)), TArg)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.AddOrUpdate``1(`0,System.Func{`0,``0,System.Collections.Generic.Queue{`1}},System.Func{`0,System.Collections.Generic.Queue{`1},``0,System.Collections.Generic.Queue{`1}},``0)
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate-1(-0-system-func((-0-0-1))-system-func((-0-1-0-1))-0)
  - name: <
  - name: TArg
  - name: '>'
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - name: TArg
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.AddOrUpdate``1(`0,System.Func{`0,``0,System.Collections.Generic.Queue{`1}},System.Func{`0,System.Collections.Generic.Queue{`1},``0,System.Collections.Generic.Queue{`1}},``0)
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate-1(-0-system-func((-0-0-1))-system-func((-0-1-0-1))-0)
  - name: (
  - name: Of
  - name: " "
  - name: TArg
  - name: )
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: ','
  - name: " "
  - name: TArg
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Clear
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.Clear
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.clear
  name: Clear()
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.Clear()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.Clear()
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).Clear()
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).Clear()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.clear
  - name: (
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.ContainsKey({TKey})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.ContainsKey(`0)
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.ContainsKey(TKey)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.ContainsKey(TKey)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).ContainsKey(TKey)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.GetEnumerator
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetEnumerator
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getenumerator
  name: GetEnumerator()
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.GetEnumerator()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.GetEnumerator()
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).GetEnumerator()
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.GetOrAdd({TKey},System.Func{{TKey},System.Collections.Generic.Queue{{TValue}}})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetOrAdd(`0,System.Func{`0,System.Collections.Generic.Queue{`1}})
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-system-func((-0-1)))
  name: GetOrAdd(TKey, Func<TKey, Queue<TValue>>)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.GetOrAdd(TKey, Func<TKey, Queue<TValue>>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.GetOrAdd(TKey, System.Func<TKey, System.Collections.Generic.Queue<TValue>>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).GetOrAdd(TKey, Func(Of TKey, Queue(Of TValue)))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).GetOrAdd(TKey, System.Func(Of TKey, System.Collections.Generic.Queue(Of TValue)))
  name.vb: GetOrAdd(TKey, Func(Of TKey, Queue(Of TValue)))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetOrAdd(`0,System.Func{`0,System.Collections.Generic.Queue{`1}})
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-system-func((-0-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetOrAdd(`0,System.Func{`0,System.Collections.Generic.Queue{`1}})
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-system-func((-0-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.GetOrAdd({TKey},System.Collections.Generic.Queue{{TValue}})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetOrAdd(`0,System.Collections.Generic.Queue{`1})
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-1)
  name: GetOrAdd(TKey, Queue<TValue>)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.GetOrAdd(TKey, Queue<TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.GetOrAdd(TKey, System.Collections.Generic.Queue<TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).GetOrAdd(TKey, Queue(Of TValue))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).GetOrAdd(TKey, System.Collections.Generic.Queue(Of TValue))
  name.vb: GetOrAdd(TKey, Queue(Of TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetOrAdd(`0,System.Collections.Generic.Queue{`1})
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-1)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetOrAdd(`0,System.Collections.Generic.Queue{`1})
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-1)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.GetOrAdd``1({TKey},System.Func{{TKey},{TArg},System.Collections.Generic.Queue{{TValue}}},{TArg})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetOrAdd``1(`0,System.Func{`0,``0,System.Collections.Generic.Queue{`1}},``0)
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd-1(-0-system-func((-0-0-1))-0)
  name: GetOrAdd<TArg>(TKey, Func<TKey, TArg, Queue<TValue>>, TArg)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.GetOrAdd<TArg>(TKey, Func<TKey, TArg, Queue<TValue>>, TArg)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.GetOrAdd<TArg>(TKey, System.Func<TKey, TArg, System.Collections.Generic.Queue<TValue>>, TArg)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).GetOrAdd(Of TArg)(TKey, Func(Of TKey, TArg, Queue(Of TValue)), TArg)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).GetOrAdd(Of TArg)(TKey, System.Func(Of TKey, TArg, System.Collections.Generic.Queue(Of TValue)), TArg)
  name.vb: GetOrAdd(Of TArg)(TKey, Func(Of TKey, TArg, Queue(Of TValue)), TArg)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetOrAdd``1(`0,System.Func{`0,``0,System.Collections.Generic.Queue{`1}},``0)
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd-1(-0-system-func((-0-0-1))-0)
  - name: <
  - name: TArg
  - name: '>'
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - name: TArg
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.GetOrAdd``1(`0,System.Func{`0,``0,System.Collections.Generic.Queue{`1}},``0)
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd-1(-0-system-func((-0-0-1))-0)
  - name: (
  - name: Of
  - name: " "
  - name: TArg
  - name: )
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: ','
  - name: " "
  - name: TArg
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.ToArray
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.ToArray
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.toarray
  name: ToArray()
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.ToArray()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.ToArray()
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).ToArray()
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).ToArray()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.toarray
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.toarray
  - name: (
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.TryAdd({TKey},System.Collections.Generic.Queue{{TValue}})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryAdd(`0,System.Collections.Generic.Queue{`1})
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryadd
  name: TryAdd(TKey, Queue<TValue>)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.TryAdd(TKey, Queue<TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.TryAdd(TKey, System.Collections.Generic.Queue<TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).TryAdd(TKey, Queue(Of TValue))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).TryAdd(TKey, System.Collections.Generic.Queue(Of TValue))
  name.vb: TryAdd(TKey, Queue(Of TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryAdd(`0,System.Collections.Generic.Queue{`1})
    name: TryAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryadd
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryAdd(`0,System.Collections.Generic.Queue{`1})
    name: TryAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryadd
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.TryGetValue({TKey},System.Collections.Generic.Queue{{TValue}}@)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryGetValue(`0,System.Collections.Generic.Queue{`1}@)
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.trygetvalue
  name: TryGetValue(TKey, out Queue<TValue>)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.TryGetValue(TKey, out Queue<TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.TryGetValue(TKey, out System.Collections.Generic.Queue<TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).TryGetValue(TKey, Queue(Of TValue))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).TryGetValue(TKey, System.Collections.Generic.Queue(Of TValue))
  name.vb: TryGetValue(TKey, Queue(Of TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryGetValue(`0,System.Collections.Generic.Queue{`1}@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryGetValue(`0,System.Collections.Generic.Queue{`1}@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.TryRemove(System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.Queue{{TValue}}})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryRemove(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.Queue{`1}})
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(System.Collections.Generic.KeyValuePair{`0,`1})
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(system-collections-generic-keyvaluepair((-0-1)))
  name: TryRemove(KeyValuePair<TKey, Queue<TValue>>)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.TryRemove(KeyValuePair<TKey, Queue<TValue>>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.TryRemove(System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.Queue<TValue>>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).TryRemove(KeyValuePair(Of TKey, Queue(Of TValue)))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).TryRemove(System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.Queue(Of TValue)))
  name.vb: TryRemove(KeyValuePair(Of TKey, Queue(Of TValue)))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryRemove(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.Queue{`1}})
    name: TryRemove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(system-collections-generic-keyvaluepair((-0-1)))
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryRemove(System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.Queue{`1}})
    name: TryRemove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(system-collections-generic-keyvaluepair((-0-1)))
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.TryRemove({TKey},System.Collections.Generic.Queue{{TValue}}@)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryRemove(`0,System.Collections.Generic.Queue{`1}@)
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(-0-1@)
  name: TryRemove(TKey, out Queue<TValue>)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.TryRemove(TKey, out Queue<TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.TryRemove(TKey, out System.Collections.Generic.Queue<TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).TryRemove(TKey, Queue(Of TValue))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).TryRemove(TKey, System.Collections.Generic.Queue(Of TValue))
  name.vb: TryRemove(TKey, Queue(Of TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryRemove(`0,System.Collections.Generic.Queue{`1}@)
    name: TryRemove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(-0-1@)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryRemove(`0,System.Collections.Generic.Queue{`1}@)
    name: TryRemove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(-0-1@)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.TryUpdate({TKey},System.Collections.Generic.Queue{{TValue}},System.Collections.Generic.Queue{{TValue}})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryUpdate(`0,System.Collections.Generic.Queue{`1},System.Collections.Generic.Queue{`1})
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryupdate
  name: TryUpdate(TKey, Queue<TValue>, Queue<TValue>)
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.TryUpdate(TKey, Queue<TValue>, Queue<TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.TryUpdate(TKey, System.Collections.Generic.Queue<TValue>, System.Collections.Generic.Queue<TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).TryUpdate(TKey, Queue(Of TValue), Queue(Of TValue))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).TryUpdate(TKey, System.Collections.Generic.Queue(Of TValue), System.Collections.Generic.Queue(Of TValue))
  name.vb: TryUpdate(TKey, Queue(Of TValue), Queue(Of TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryUpdate(`0,System.Collections.Generic.Queue{`1},System.Collections.Generic.Queue{`1})
    name: TryUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryupdate
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.TryUpdate(`0,System.Collections.Generic.Queue{`1},System.Collections.Generic.Queue{`1})
    name: TryUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryupdate
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Comparer
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.Comparer
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Comparer
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.comparer
  name: Comparer
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.Comparer
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.Comparer
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).Comparer
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).Comparer
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Count
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.Count
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.count
  name: Count
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.Count
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.Count
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).Count
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).Count
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.IsEmpty
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.IsEmpty
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.isempty
  name: IsEmpty
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.IsEmpty
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.IsEmpty
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).IsEmpty
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).IsEmpty
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Item({TKey})
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.Item(`0)
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.item
  name: this[TKey]
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.this[TKey]
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.this[TKey]
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).this[](TKey)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Keys
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.Keys
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Keys
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.keys
  name: Keys
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.Keys
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.Keys
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).Keys
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).Keys
- uid: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}.Values
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary{`0,System.Collections.Generic.Queue{`1}}.Values
  parent: System.Collections.Concurrent.ConcurrentDictionary{{TKey},System.Collections.Generic.Queue{{TValue}}}
  definition: System.Collections.Concurrent.ConcurrentDictionary`2.Values
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.values
  name: Values
  nameWithType: ConcurrentDictionary<TKey, Queue<TValue>>.Values
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, System.Collections.Generic.Queue<TValue>>.Values
  nameWithType.vb: ConcurrentDictionary(Of TKey, Queue(Of TValue)).Values
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)).Values
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Fantasy.Helper.JsonHelper.ToJson``1
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  parent: Fantasy.Helper.JsonHelper
  definition: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<ConcurrentOneToManyQueuePool<TKey, TValue>>(ConcurrentOneToManyQueuePool<TKey, TValue>)
  nameWithType: JsonHelper.ToJson<ConcurrentOneToManyQueuePool<TKey, TValue>>(ConcurrentOneToManyQueuePool<TKey, TValue>)
  fullName: Fantasy.Helper.JsonHelper.ToJson<Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>>(Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>)
  nameWithType.vb: JsonHelper.ToJson(Of ConcurrentOneToManyQueuePool(Of TKey, TValue))(ConcurrentOneToManyQueuePool(Of TKey, TValue))
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue))(Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue))
  name.vb: ToJson(Of ConcurrentOneToManyQueuePool(Of TKey, TValue))(ConcurrentOneToManyQueuePool(Of TKey, TValue))
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool{`0,`1})
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
    name: ConcurrentOneToManyQueuePool
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  - name: (
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
    name: ConcurrentOneToManyQueuePool
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool{`0,`1})
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
    name: ConcurrentOneToManyQueuePool
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: (
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
    name: ConcurrentOneToManyQueuePool
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IDictionary{`0,System.Collections.Generic.Queue{`1}}.Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2({TKey},System.Collections.Generic.Queue{{TValue}}@)
  commentId: M:Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  parent: Fantasy.DataStructure.Dictionary.DictionaryExtensions
  definition: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  name: TryRemove<TKey, Queue<TValue>>(IDictionary<TKey, Queue<TValue>>, TKey, out Queue<TValue>)
  nameWithType: DictionaryExtensions.TryRemove<TKey, Queue<TValue>>(IDictionary<TKey, Queue<TValue>>, TKey, out Queue<TValue>)
  fullName: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove<TKey, System.Collections.Generic.Queue<TValue>>(System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.Queue<TValue>>, TKey, out System.Collections.Generic.Queue<TValue>)
  nameWithType.vb: DictionaryExtensions.TryRemove(Of TKey, Queue(Of TValue))(IDictionary(Of TKey, Queue(Of TValue)), TKey, Queue(Of TValue))
  fullName.vb: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove(Of TKey, System.Collections.Generic.Queue(Of TValue))(System.Collections.Generic.IDictionary(Of TKey, System.Collections.Generic.Queue(Of TValue)), TKey, System.Collections.Generic.Queue(Of TValue))
  name.vb: TryRemove(Of TKey, Queue(Of TValue))(IDictionary(Of TKey, Queue(Of TValue)), TKey, Queue(Of TValue))
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.Queue{`1}},`0,System.Collections.Generic.Queue{`1}@)
    name: TryRemove
    href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.Queue{`1}},`0,System.Collections.Generic.Queue{`1}@)
    name: TryRemove
    href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Queue`1
    name: Queue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.queue-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Concurrent.ConcurrentDictionary`2
  commentId: T:System.Collections.Concurrent.ConcurrentDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  name: ConcurrentDictionary<TKey, TValue>
  nameWithType: ConcurrentDictionary<TKey, TValue>
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue)
  name.vb: ConcurrentDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2
    name: ConcurrentDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Concurrent
  commentId: N:System.Collections.Concurrent
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Concurrent
  nameWithType: System.Collections.Concurrent
  fullName: System.Collections.Concurrent
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Concurrent
    name: Concurrent
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Concurrent
    name: Concurrent
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2
  commentId: T:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html
  name: ConcurrentOneToManyQueue<TKey, TValue>
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue)
  name.vb: ConcurrentOneToManyQueue(Of TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2
    name: ConcurrentOneToManyQueue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2
    name: ConcurrentOneToManyQueue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: Fantasy.Pool
  commentId: N:Fantasy.Pool
  href: Fantasy.html
  name: Fantasy.Pool
  nameWithType: Fantasy.Pool
  fullName: Fantasy.Pool
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Pool
    name: Pool
    href: Fantasy.Pool.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Pool
    name: Pool
    href: Fantasy.Pool.html
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Contains(`0,`1)
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Contains(`0,`1)
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Contains__0__1_
  name: Contains(TKey, TValue)
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.Contains(TKey, TValue)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.Contains(TKey, TValue)
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).Contains(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).Contains(TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Contains(`0,`1)
    name: Contains
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Contains__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Contains(`0,`1)
    name: Contains
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Contains__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Enqueue(`0,`1)
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Enqueue(`0,`1)
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Enqueue__0__1_
  name: Enqueue(TKey, TValue)
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.Enqueue(TKey, TValue)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.Enqueue(TKey, TValue)
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).Enqueue(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).Enqueue(TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Enqueue(`0,`1)
    name: Enqueue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Enqueue__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Enqueue(`0,`1)
    name: Enqueue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Enqueue__0__1_
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Dequeue(`0)
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Dequeue(`0)
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Dequeue__0_
  name: Dequeue(TKey)
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.Dequeue(TKey)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.Dequeue(TKey)
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).Dequeue(TKey)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).Dequeue(TKey)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Dequeue(`0)
    name: Dequeue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Dequeue__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Dequeue(`0)
    name: Dequeue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Dequeue__0_
  - name: (
  - name: TKey
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.TryDequeue(`0,`1@)
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.TryDequeue(`0,`1@)
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_TryDequeue__0__1__
  name: TryDequeue(TKey, out TValue)
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.TryDequeue(TKey, out TValue)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.TryDequeue(TKey, out TValue)
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).TryDequeue(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).TryDequeue(TKey, TValue)
  name.vb: TryDequeue(TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.TryDequeue(`0,`1@)
    name: TryDequeue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_TryDequeue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.TryDequeue(`0,`1@)
    name: TryDequeue
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_TryDequeue__0__1__
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.RemoveKey(`0)
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.RemoveKey(`0)
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_RemoveKey__0_
  name: RemoveKey(TKey)
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.RemoveKey(TKey)
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.RemoveKey(TKey)
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).RemoveKey(TKey)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).RemoveKey(TKey)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.RemoveKey(`0)
    name: RemoveKey
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_RemoveKey__0_
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.RemoveKey(`0)
    name: RemoveKey
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_RemoveKey__0_
  - name: (
  - name: TKey
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Clear
  commentId: M:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Clear
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Clear
  name: Clear()
  nameWithType: ConcurrentOneToManyQueue<TKey, TValue>.Clear()
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue<TKey, TValue>.Clear()
  nameWithType.vb: ConcurrentOneToManyQueue(Of TKey, TValue).Clear()
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Clear
    name: Clear
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Clear
  - name: (
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue`2.Clear
    name: Clear
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueue-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueue_2_Clear
  - name: (
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-system-func((-0-1))-system-func((-0-1-1)))
  name: AddOrUpdate(TKey, Func<TKey, TValue>, Func<TKey, TValue, TValue>)
  nameWithType: ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, Func<TKey, TValue>, Func<TKey, TValue, TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, System.Func<TKey, TValue>, System.Func<TKey, TValue, TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).AddOrUpdate(TKey, Func(Of TKey, TValue), Func(Of TKey, TValue, TValue))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).AddOrUpdate(TKey, System.Func(Of TKey, TValue), System.Func(Of TKey, TValue, TValue))
  name.vb: AddOrUpdate(TKey, Func(Of TKey, TValue), Func(Of TKey, TValue, TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-system-func((-0-1))-system-func((-0-1-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-system-func((-0-1))-system-func((-0-1-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-1-system-func((-0-1-1)))
  name: AddOrUpdate(TKey, TValue, Func<TKey, TValue, TValue>)
  nameWithType: ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, Func<TKey, TValue, TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate(TKey, TValue, System.Func<TKey, TValue, TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).AddOrUpdate(TKey, TValue, Func(Of TKey, TValue, TValue))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).AddOrUpdate(TKey, TValue, System.Func(Of TKey, TValue, TValue))
  name.vb: AddOrUpdate(TKey, TValue, Func(Of TKey, TValue, TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-1-system-func((-0-1-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,`1,System.Func{`0,`1,`1})
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate(-0-1-system-func((-0-1-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate-1(-0-system-func((-0-0-1))-system-func((-0-1-0-1))-0)
  name: AddOrUpdate<TArg>(TKey, Func<TKey, TArg, TValue>, Func<TKey, TValue, TArg, TValue>, TArg)
  nameWithType: ConcurrentDictionary<TKey, TValue>.AddOrUpdate<TArg>(TKey, Func<TKey, TArg, TValue>, Func<TKey, TValue, TArg, TValue>, TArg)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.AddOrUpdate<TArg>(TKey, System.Func<TKey, TArg, TValue>, System.Func<TKey, TValue, TArg, TValue>, TArg)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).AddOrUpdate(Of TArg)(TKey, Func(Of TKey, TArg, TValue), Func(Of TKey, TValue, TArg, TValue), TArg)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).AddOrUpdate(Of TArg)(TKey, System.Func(Of TKey, TArg, TValue), System.Func(Of TKey, TValue, TArg, TValue), TArg)
  name.vb: AddOrUpdate(Of TArg)(TKey, Func(Of TKey, TArg, TValue), Func(Of TKey, TValue, TArg, TValue), TArg)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate-1(-0-system-func((-0-0-1))-system-func((-0-1-0-1))-0)
  - name: <
  - name: TArg
  - name: '>'
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - name: TArg
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate``1(`0,System.Func{`0,``0,`1},System.Func{`0,`1,``0,`1},``0)
    name: AddOrUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.addorupdate#system-collections-concurrent-concurrentdictionary-2-addorupdate-1(-0-system-func((-0-0-1))-system-func((-0-1-0-1))-0)
  - name: (
  - name: Of
  - name: " "
  - name: TArg
  - name: )
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - uid: System.Func`4
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-4
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - name: TArg
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.clear
  name: Clear()
  nameWithType: ConcurrentDictionary<TKey, TValue>.Clear()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Clear()
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).Clear()
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.clear
  - name: (
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getenumerator
  name: GetEnumerator()
  nameWithType: ConcurrentDictionary<TKey, TValue>.GetEnumerator()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-system-func((-0-1)))
  name: GetOrAdd(TKey, Func<TKey, TValue>)
  nameWithType: ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, Func<TKey, TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, System.Func<TKey, TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).GetOrAdd(TKey, Func(Of TKey, TValue))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).GetOrAdd(TKey, System.Func(Of TKey, TValue))
  name.vb: GetOrAdd(TKey, Func(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-system-func((-0-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-system-func((-0-1)))
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`2
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-1)
  name: GetOrAdd(TKey, TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd(TKey, TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).GetOrAdd(TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).GetOrAdd(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-1)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd(-0-1)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd-1(-0-system-func((-0-0-1))-0)
  name: GetOrAdd<TArg>(TKey, Func<TKey, TArg, TValue>, TArg)
  nameWithType: ConcurrentDictionary<TKey, TValue>.GetOrAdd<TArg>(TKey, Func<TKey, TArg, TValue>, TArg)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.GetOrAdd<TArg>(TKey, System.Func<TKey, TArg, TValue>, TArg)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).GetOrAdd(Of TArg)(TKey, Func(Of TKey, TArg, TValue), TArg)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).GetOrAdd(Of TArg)(TKey, System.Func(Of TKey, TArg, TValue), TArg)
  name.vb: GetOrAdd(Of TArg)(TKey, Func(Of TKey, TArg, TValue), TArg)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd-1(-0-system-func((-0-0-1))-0)
  - name: <
  - name: TArg
  - name: '>'
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: ','
  - name: " "
  - name: TArg
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd``1(`0,System.Func{`0,``0,`1},``0)
    name: GetOrAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.getoradd#system-collections-concurrent-concurrentdictionary-2-getoradd-1(-0-system-func((-0-0-1))-0)
  - name: (
  - name: Of
  - name: " "
  - name: TArg
  - name: )
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Func`3
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-3
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TArg
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: ','
  - name: " "
  - name: TArg
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.toarray
  name: ToArray()
  nameWithType: ConcurrentDictionary<TKey, TValue>.ToArray()
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.ToArray()
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).ToArray()
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).ToArray()
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.toarray
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.ToArray
    name: ToArray
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.toarray
  - name: (
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryadd
  name: TryAdd(TKey, TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryAdd(TKey, TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).TryAdd(TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryAdd(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
    name: TryAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryadd
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryAdd(`0,`1)
    name: TryAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryadd
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(System.Collections.Generic.KeyValuePair{`0,`1})
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(System.Collections.Generic.KeyValuePair{`0,`1})
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(system-collections-generic-keyvaluepair((-0-1)))
  name: TryRemove(KeyValuePair<TKey, TValue>)
  nameWithType: ConcurrentDictionary<TKey, TValue>.TryRemove(KeyValuePair<TKey, TValue>)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(System.Collections.Generic.KeyValuePair<TKey, TValue>)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).TryRemove(KeyValuePair(Of TKey, TValue))
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryRemove(System.Collections.Generic.KeyValuePair(Of TKey, TValue))
  name.vb: TryRemove(KeyValuePair(Of TKey, TValue))
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: TryRemove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(system-collections-generic-keyvaluepair((-0-1)))
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(System.Collections.Generic.KeyValuePair{`0,`1})
    name: TryRemove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(system-collections-generic-keyvaluepair((-0-1)))
  - name: (
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(-0-1@)
  name: TryRemove(TKey, out TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryRemove(TKey, out TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).TryRemove(TKey, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryRemove(TKey, TValue)
  name.vb: TryRemove(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
    name: TryRemove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(-0-1@)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)
    name: TryRemove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryremove#system-collections-concurrent-concurrentdictionary-2-tryremove(-0-1@)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
  commentId: M:System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryupdate
  name: TryUpdate(TKey, TValue, TValue)
  nameWithType: ConcurrentDictionary<TKey, TValue>.TryUpdate(TKey, TValue, TValue)
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.TryUpdate(TKey, TValue, TValue)
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).TryUpdate(TKey, TValue, TValue)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).TryUpdate(TKey, TValue, TValue)
  spec.csharp:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
    name: TryUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryupdate
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.TryUpdate(`0,`1,`1)
    name: TryUpdate
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.tryupdate
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Comparer
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.Comparer
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.comparer
  name: Comparer
  nameWithType: ConcurrentDictionary<TKey, TValue>.Comparer
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Comparer
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).Comparer
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Comparer
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Count
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.count
  name: Count
  nameWithType: ConcurrentDictionary<TKey, TValue>.Count
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Count
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).Count
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Count
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.IsEmpty
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.isempty
  name: IsEmpty
  nameWithType: ConcurrentDictionary<TKey, TValue>.IsEmpty
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.IsEmpty
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).IsEmpty
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).IsEmpty
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.item
  name: this[TKey]
  nameWithType: ConcurrentDictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Concurrent.ConcurrentDictionary`2.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Keys
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.Keys
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.keys
  name: Keys
  nameWithType: ConcurrentDictionary<TKey, TValue>.Keys
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Keys
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Keys
- uid: System.Collections.Concurrent.ConcurrentDictionary`2.Values
  commentId: P:System.Collections.Concurrent.ConcurrentDictionary`2.Values
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.concurrent.concurrentdictionary-2.values
  name: Values
  nameWithType: ConcurrentDictionary<TKey, TValue>.Values
  fullName: System.Collections.Concurrent.ConcurrentDictionary<TKey, TValue>.Values
  nameWithType.vb: ConcurrentDictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Concurrent.ConcurrentDictionary(Of TKey, TValue).Values
- uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<T>(T)
  nameWithType: JsonHelper.ToJson<T>(T)
  fullName: Fantasy.Helper.JsonHelper.ToJson<T>(T)
  nameWithType.vb: JsonHelper.ToJson(Of T)(T)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of T)(T)
  name.vb: ToJson(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Fantasy.Helper.JsonHelper
  commentId: T:Fantasy.Helper.JsonHelper
  parent: Fantasy.Helper
  href: Fantasy.Helper.JsonHelper.html
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: Fantasy.Helper.JsonHelper
- uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  commentId: M:Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  isExternal: true
  href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  name: TryRemove<T, TV>(IDictionary<T, TV>, T, out TV)
  nameWithType: DictionaryExtensions.TryRemove<T, TV>(IDictionary<T, TV>, T, out TV)
  fullName: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove<T, TV>(System.Collections.Generic.IDictionary<T, TV>, T, out TV)
  nameWithType.vb: DictionaryExtensions.TryRemove(Of T, TV)(IDictionary(Of T, TV), T, TV)
  fullName.vb: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove(Of T, TV)(System.Collections.Generic.IDictionary(Of T, TV), T, TV)
  name.vb: TryRemove(Of T, TV)(IDictionary(Of T, TV), T, TV)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
    name: TryRemove
    href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TV
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TV
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TV
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
    name: TryRemove
    href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TV
  - name: )
  - name: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TV
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TV
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions
  commentId: T:Fantasy.DataStructure.Dictionary.DictionaryExtensions
  parent: Fantasy.DataStructure.Dictionary
  href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html
  name: DictionaryExtensions
  nameWithType: DictionaryExtensions
  fullName: Fantasy.DataStructure.Dictionary.DictionaryExtensions
- uid: Fantasy.Helper
  commentId: N:Fantasy.Helper
  href: Fantasy.html
  name: Fantasy.Helper
  nameWithType: Fantasy.Helper
  fullName: Fantasy.Helper
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
- uid: Fantasy.DataStructure.Dictionary
  commentId: N:Fantasy.DataStructure.Dictionary
  href: Fantasy.html
  name: Fantasy.DataStructure.Dictionary
  nameWithType: Fantasy.DataStructure.Dictionary
  fullName: Fantasy.DataStructure.Dictionary
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.Dictionary
    name: Dictionary
    href: Fantasy.DataStructure.Dictionary.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.Dictionary
    name: Dictionary
    href: Fantasy.DataStructure.Dictionary.html
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
  commentId: T:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
  parent: Fantasy.DataStructure.Collection
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html
  name: ConcurrentOneToManyQueuePool<TKey, TValue>
  nameWithType: ConcurrentOneToManyQueuePool<TKey, TValue>
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>
  nameWithType.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue)
  name.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
    name: ConcurrentOneToManyQueuePool
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2
    name: ConcurrentOneToManyQueuePool
    href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Create*
  commentId: Overload:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Create
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueuePool_2_Create
  name: Create
  nameWithType: ConcurrentOneToManyQueuePool<TKey, TValue>.Create
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>.Create
  nameWithType.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue).Create
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue).Create
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Dispose*
  commentId: Overload:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.Dispose
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueuePool_2_Dispose
  name: Dispose
  nameWithType: ConcurrentOneToManyQueuePool<TKey, TValue>.Dispose
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>.Dispose
  nameWithType.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue).Dispose
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue).Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.IsPool*
  commentId: Overload:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.IsPool
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueuePool_2_IsPool
  name: IsPool
  nameWithType: ConcurrentOneToManyQueuePool<TKey, TValue>.IsPool
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>.IsPool
  nameWithType.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue).IsPool
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue).IsPool
- uid: Fantasy.Pool.IPool.IsPool
  commentId: M:Fantasy.Pool.IPool.IsPool
  parent: Fantasy.Pool.IPool
  href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  name: IsPool()
  nameWithType: IPool.IsPool()
  fullName: Fantasy.Pool.IPool.IsPool()
  spec.csharp:
  - uid: Fantasy.Pool.IPool.IsPool
    name: IsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  - name: (
  - name: )
  spec.vb:
  - uid: Fantasy.Pool.IPool.IsPool
    name: IsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.SetIsPool*
  commentId: Overload:Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool`2.SetIsPool
  href: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool-2.html#Fantasy_DataStructure_Collection_ConcurrentOneToManyQueuePool_2_SetIsPool_System_Boolean_
  name: SetIsPool
  nameWithType: ConcurrentOneToManyQueuePool<TKey, TValue>.SetIsPool
  fullName: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool<TKey, TValue>.SetIsPool
  nameWithType.vb: ConcurrentOneToManyQueuePool(Of TKey, TValue).SetIsPool
  fullName.vb: Fantasy.DataStructure.Collection.ConcurrentOneToManyQueuePool(Of TKey, TValue).SetIsPool
- uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  commentId: M:Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  parent: Fantasy.Pool.IPool
  isExternal: true
  href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  name: SetIsPool(bool)
  nameWithType: IPool.SetIsPool(bool)
  fullName: Fantasy.Pool.IPool.SetIsPool(bool)
  nameWithType.vb: IPool.SetIsPool(Boolean)
  fullName.vb: Fantasy.Pool.IPool.SetIsPool(Boolean)
  name.vb: SetIsPool(Boolean)
  spec.csharp:
  - uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
    name: SetIsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
    name: SetIsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
