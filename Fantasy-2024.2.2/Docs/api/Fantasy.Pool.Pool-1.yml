### YamlMime:ManagedReference
items:
- uid: Fantasy.Pool.Pool`1
  commentId: T:Fantasy.Pool.Pool`1
  id: Pool`1
  parent: Fantasy.Pool
  children:
  - Fantasy.Pool.Pool`1.Clear
  - Fantasy.Pool.Pool`1.Count
  - Fantasy.Pool.Pool`1.Rent
  - Fantasy.Pool.Pool`1.Rent(System.Func{`0})
  - Fantasy.Pool.Pool`1.Return(`0)
  - Fantasy.Pool.Pool`1.Return(`0,System.Action{`0})
  langs:
  - csharp
  - vb
  name: Pool<T>
  nameWithType: Pool<T>
  fullName: Fantasy.Pool.Pool<T>
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Pool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
    startLine: 11
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Pool
  summary: 静态的对象池系统，不支持多线程。
  example: []
  syntax:
    content: 'public static class Pool<T> where T : IPool, new()'
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Module Pool(Of T As {IPool, New})
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  nameWithType.vb: Pool(Of T)
  fullName.vb: Fantasy.Pool.Pool(Of T)
  name.vb: Pool(Of T)
- uid: Fantasy.Pool.Pool`1.Count
  commentId: P:Fantasy.Pool.Pool`1.Count
  id: Count
  parent: Fantasy.Pool.Pool`1
  langs:
  - csharp
  - vb
  name: Count
  nameWithType: Pool<T>.Count
  fullName: Fantasy.Pool.Pool<T>.Count
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Count
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
    startLine: 17
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Pool
  summary: 池子里可用的数量
  example: []
  syntax:
    content: public static int Count { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Shared ReadOnly Property Count As Integer
  overload: Fantasy.Pool.Pool`1.Count*
  nameWithType.vb: Pool(Of T).Count
  fullName.vb: Fantasy.Pool.Pool(Of T).Count
- uid: Fantasy.Pool.Pool`1.Rent
  commentId: M:Fantasy.Pool.Pool`1.Rent
  id: Rent
  parent: Fantasy.Pool.Pool`1
  langs:
  - csharp
  - vb
  name: Rent()
  nameWithType: Pool<T>.Rent()
  fullName: Fantasy.Pool.Pool<T>.Rent()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Rent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
    startLine: 23
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Pool
  summary: 租借
  example: []
  syntax:
    content: public static T Rent()
    return:
      type: '{T}'
      description: ''
    content.vb: Public Shared Function Rent() As T
  overload: Fantasy.Pool.Pool`1.Rent*
  nameWithType.vb: Pool(Of T).Rent()
  fullName.vb: Fantasy.Pool.Pool(Of T).Rent()
- uid: Fantasy.Pool.Pool`1.Rent(System.Func{`0})
  commentId: M:Fantasy.Pool.Pool`1.Rent(System.Func{`0})
  id: Rent(System.Func{`0})
  parent: Fantasy.Pool.Pool`1
  langs:
  - csharp
  - vb
  name: Rent(Func<T>)
  nameWithType: Pool<T>.Rent(Func<T>)
  fullName: Fantasy.Pool.Pool<T>.Rent(System.Func<T>)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Rent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
    startLine: 33
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Pool
  summary: 租借
  example: []
  syntax:
    content: public static T Rent(Func<T> generator)
    parameters:
    - id: generator
      type: System.Func{{T}}
      description: 如果池子里没有，会先执行这个委托。
    return:
      type: '{T}'
      description: ''
    content.vb: Public Shared Function Rent(generator As Func(Of T)) As T
  overload: Fantasy.Pool.Pool`1.Rent*
  nameWithType.vb: Pool(Of T).Rent(Func(Of T))
  fullName.vb: Fantasy.Pool.Pool(Of T).Rent(System.Func(Of T))
  name.vb: Rent(Func(Of T))
- uid: Fantasy.Pool.Pool`1.Return(`0)
  commentId: M:Fantasy.Pool.Pool`1.Return(`0)
  id: Return(`0)
  parent: Fantasy.Pool.Pool`1
  langs:
  - csharp
  - vb
  name: Return(T)
  nameWithType: Pool<T>.Return(T)
  fullName: Fantasy.Pool.Pool<T>.Return(T)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Return
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
    startLine: 42
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Pool
  summary: 返还
  example: []
  syntax:
    content: public static void Return(T t)
    parameters:
    - id: t
      type: '{T}'
      description: ''
    content.vb: Public Shared Sub [Return](t As T)
  overload: Fantasy.Pool.Pool`1.Return*
  nameWithType.vb: Pool(Of T).Return(T)
  fullName.vb: Fantasy.Pool.Pool(Of T).Return(T)
- uid: Fantasy.Pool.Pool`1.Return(`0,System.Action{`0})
  commentId: M:Fantasy.Pool.Pool`1.Return(`0,System.Action{`0})
  id: Return(`0,System.Action{`0})
  parent: Fantasy.Pool.Pool`1
  langs:
  - csharp
  - vb
  name: Return(T, Action<T>)
  nameWithType: Pool<T>.Return(T, Action<T>)
  fullName: Fantasy.Pool.Pool<T>.Return(T, System.Action<T>)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Return
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
    startLine: 57
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Pool
  summary: 返还
  example: []
  syntax:
    content: public static void Return(T t, Action<T> reset)
    parameters:
    - id: t
      type: '{T}'
      description: 返还的东西
    - id: reset
      type: System.Action{{T}}
      description: 返还后执行的委托
    content.vb: Public Shared Sub [Return](t As T, reset As Action(Of T))
  overload: Fantasy.Pool.Pool`1.Return*
  nameWithType.vb: Pool(Of T).Return(T, Action(Of T))
  fullName.vb: Fantasy.Pool.Pool(Of T).Return(T, System.Action(Of T))
  name.vb: Return(T, Action(Of T))
- uid: Fantasy.Pool.Pool`1.Clear
  commentId: M:Fantasy.Pool.Pool`1.Clear
  id: Clear
  parent: Fantasy.Pool.Pool`1
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: Pool<T>.Clear()
  fullName: Fantasy.Pool.Pool<T>.Clear()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Clear
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Pool/Normal/Pool.cs
    startLine: 71
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Pool
  summary: 清空池子
  example: []
  syntax:
    content: public static void Clear()
    content.vb: Public Shared Sub Clear()
  overload: Fantasy.Pool.Pool`1.Clear*
  nameWithType.vb: Pool(Of T).Clear()
  fullName.vb: Fantasy.Pool.Pool(Of T).Clear()
references:
- uid: Fantasy.Pool
  commentId: N:Fantasy.Pool
  href: Fantasy.html
  name: Fantasy.Pool
  nameWithType: Fantasy.Pool
  fullName: Fantasy.Pool
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Pool
    name: Pool
    href: Fantasy.Pool.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Pool
    name: Pool
    href: Fantasy.Pool.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantasy.Pool.Pool`1.Count*
  commentId: Overload:Fantasy.Pool.Pool`1.Count
  href: Fantasy.Pool.Pool-1.html#Fantasy_Pool_Pool_1_Count
  name: Count
  nameWithType: Pool<T>.Count
  fullName: Fantasy.Pool.Pool<T>.Count
  nameWithType.vb: Pool(Of T).Count
  fullName.vb: Fantasy.Pool.Pool(Of T).Count
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Fantasy.Pool.Pool`1.Rent*
  commentId: Overload:Fantasy.Pool.Pool`1.Rent
  href: Fantasy.Pool.Pool-1.html#Fantasy_Pool_Pool_1_Rent
  name: Rent
  nameWithType: Pool<T>.Rent
  fullName: Fantasy.Pool.Pool<T>.Rent
  nameWithType.vb: Pool(Of T).Rent
  fullName.vb: Fantasy.Pool.Pool(Of T).Rent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: System.Func{{T}}
  commentId: T:System.Func{`0}
  parent: System
  definition: System.Func`1
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<T>
  nameWithType: Func<T>
  fullName: System.Func<T>
  nameWithType.vb: Func(Of T)
  fullName.vb: System.Func(Of T)
  name.vb: Func(Of T)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Func`1
  commentId: T:System.Func`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.func-1
  name: Func<TResult>
  nameWithType: Func<TResult>
  fullName: System.Func<TResult>
  nameWithType.vb: Func(Of TResult)
  fullName.vb: System.Func(Of TResult)
  name.vb: Func(Of TResult)
  spec.csharp:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Func`1
    name: Func
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.func-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: Fantasy.Pool.Pool`1.Return*
  commentId: Overload:Fantasy.Pool.Pool`1.Return
  href: Fantasy.Pool.Pool-1.html#Fantasy_Pool_Pool_1_Return__0_
  name: Return
  nameWithType: Pool<T>.Return
  fullName: Fantasy.Pool.Pool<T>.Return
  nameWithType.vb: Pool(Of T).Return
  fullName.vb: Fantasy.Pool.Pool(Of T).Return
- uid: System.Action{{T}}
  commentId: T:System.Action{`0}
  parent: System
  definition: System.Action`1
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Action`1
  commentId: T:System.Action`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.action-1
  name: Action<T>
  nameWithType: Action<T>
  fullName: System.Action<T>
  nameWithType.vb: Action(Of T)
  fullName.vb: System.Action(Of T)
  name.vb: Action(Of T)
  spec.csharp:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Action`1
    name: Action
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.action-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Fantasy.Pool.Pool`1.Clear*
  commentId: Overload:Fantasy.Pool.Pool`1.Clear
  href: Fantasy.Pool.Pool-1.html#Fantasy_Pool_Pool_1_Clear
  name: Clear
  nameWithType: Pool<T>.Clear
  fullName: Fantasy.Pool.Pool<T>.Clear
  nameWithType.vb: Pool(Of T).Clear
  fullName.vb: Fantasy.Pool.Pool(Of T).Clear
