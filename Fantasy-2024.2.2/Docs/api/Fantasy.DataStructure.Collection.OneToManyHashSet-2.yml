### YamlMime:ManagedReference
items:
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2
  commentId: T:Fantasy.DataStructure.Collection.OneToManyHashSet`2
  id: OneToManyHashSet`2
  parent: Fantasy.DataStructure.Collection
  children:
  - Fantasy.DataStructure.Collection.OneToManyHashSet`2.#ctor
  - Fantasy.DataStructure.Collection.OneToManyHashSet`2.#ctor(System.Int32)
  - Fantasy.DataStructure.Collection.OneToManyHashSet`2.Add(`0,`1)
  - Fantasy.DataStructure.Collection.OneToManyHashSet`2.Clear
  - Fantasy.DataStructure.Collection.OneToManyHashSet`2.Contains(`0,`1)
  - Fantasy.DataStructure.Collection.OneToManyHashSet`2.GetValue(`0)
  - Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveKey(`0)
  - Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveValue(`0,`1)
  langs:
  - csharp
  - vb
  name: OneToManyHashSet<TKey, TValue>
  nameWithType: OneToManyHashSet<TKey, TValue>
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: OneToManyHashSet
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
    startLine: 77
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 一对多哈希集合（OneToManyHashSet），用于创建和管理键对应多个值的集合。
  example: []
  syntax:
    content: 'public class OneToManyHashSet<TKey, TValue> : Dictionary<TKey, HashSet<TValue>>, IDictionary<TKey, HashSet<TValue>>, ICollection<KeyValuePair<TKey, HashSet<TValue>>>, IReadOnlyDictionary<TKey, HashSet<TValue>>, IReadOnlyCollection<KeyValuePair<TKey, HashSet<TValue>>>, IEnumerable<KeyValuePair<TKey, HashSet<TValue>>>, IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable where TKey : notnull'
    typeParameters:
    - id: TKey
      description: 键的类型。
    - id: TValue
      description: 值的类型。
    content.vb: Public Class OneToManyHashSet(Of TKey, TValue) Inherits Dictionary(Of TKey, HashSet(Of TValue)) Implements IDictionary(Of TKey, HashSet(Of TValue)), ICollection(Of KeyValuePair(Of TKey, HashSet(Of TValue))), IReadOnlyDictionary(Of TKey, HashSet(Of TValue)), IReadOnlyCollection(Of KeyValuePair(Of TKey, HashSet(Of TValue))), IEnumerable(Of KeyValuePair(Of TKey, HashSet(Of TValue))), IDictionary, ICollection, IEnumerable, IDeserializationCallback, ISerializable
  inheritance:
  - System.Object
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  derivedClasses:
  - Fantasy.DataStructure.Collection.OneToManyHashSetPool`2
  implements:
  - System.Collections.Generic.IDictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  - System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.HashSet{{TValue}}}}
  - System.Collections.Generic.IReadOnlyDictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  - System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.HashSet{{TValue}}}}
  - System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.HashSet{{TValue}}}}
  - System.Collections.IDictionary
  - System.Collections.ICollection
  - System.Collections.IEnumerable
  - System.Runtime.Serialization.IDeserializationCallback
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Add({TKey},System.Collections.Generic.HashSet{{TValue}})
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Clear
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.ContainsKey({TKey})
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.ContainsValue(System.Collections.Generic.HashSet{{TValue}})
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.EnsureCapacity(System.Int32)
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.GetEnumerator
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.OnDeserialization(System.Object)
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Remove({TKey})
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Remove({TKey},System.Collections.Generic.HashSet{{TValue}}@)
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.TrimExcess
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.TrimExcess(System.Int32)
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.TryAdd({TKey},System.Collections.Generic.HashSet{{TValue}})
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.TryGetValue({TKey},System.Collections.Generic.HashSet{{TValue}}@)
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Comparer
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Count
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Item({TKey})
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Keys
  - System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Values
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Fantasy.DataStructure.Collection.OneToManyHashSet`2.Fantasy.Helper.JsonHelper.ToJson``1
  - System.Collections.Generic.IDictionary{`0,System.Collections.Generic.HashSet{`1}}.Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2({TKey},System.Collections.Generic.HashSet{{TValue}}@)
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue)
  name.vb: OneToManyHashSet(Of TKey, TValue)
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.#ctor
  commentId: M:Fantasy.DataStructure.Collection.OneToManyHashSet`2.#ctor
  id: '#ctor'
  parent: Fantasy.DataStructure.Collection.OneToManyHashSet`2
  langs:
  - csharp
  - vb
  name: OneToManyHashSet()
  nameWithType: OneToManyHashSet<TKey, TValue>.OneToManyHashSet()
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.OneToManyHashSet()
  type: Constructor
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: .ctor
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
    startLine: 89
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 初始化 <xref href="Fantasy.DataStructure.Collection.OneToManyHashSet%602" data-throw-if-not-resolved="false"></xref> 类的新实例。
  example: []
  syntax:
    content: public OneToManyHashSet()
    content.vb: Public Sub New()
  overload: Fantasy.DataStructure.Collection.OneToManyHashSet`2.#ctor*
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).New()
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).New()
  name.vb: New()
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.#ctor(System.Int32)
  commentId: M:Fantasy.DataStructure.Collection.OneToManyHashSet`2.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: Fantasy.DataStructure.Collection.OneToManyHashSet`2
  langs:
  - csharp
  - vb
  name: OneToManyHashSet(int)
  nameWithType: OneToManyHashSet<TKey, TValue>.OneToManyHashSet(int)
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.OneToManyHashSet(int)
  type: Constructor
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: .ctor
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
    startLine: 98
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 设置最大缓存数量
  example: []
  syntax:
    content: public OneToManyHashSet(int recyclingLimit)
    parameters:
    - id: recyclingLimit
      type: System.Int32
      description: >-
        1:防止数据量过大、所以超过recyclingLimit的数据还是走GC.

        2:设置成0不控制数量，全部缓存
    content.vb: Public Sub New(recyclingLimit As Integer)
  overload: Fantasy.DataStructure.Collection.OneToManyHashSet`2.#ctor*
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).New(Integer)
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).New(Integer)
  name.vb: New(Integer)
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.Contains(`0,`1)
  commentId: M:Fantasy.DataStructure.Collection.OneToManyHashSet`2.Contains(`0,`1)
  id: Contains(`0,`1)
  parent: Fantasy.DataStructure.Collection.OneToManyHashSet`2
  langs:
  - csharp
  - vb
  name: Contains(TKey, TValue)
  nameWithType: OneToManyHashSet<TKey, TValue>.Contains(TKey, TValue)
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.Contains(TKey, TValue)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Contains
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
    startLine: 109
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 判断指定的键值对是否存在于集合中。
  example: []
  syntax:
    content: public bool Contains(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: 键。
    - id: value
      type: '{TValue}'
      description: 值。
    return:
      type: System.Boolean
      description: 如果存在则为 true，否则为 false。
    content.vb: Public Function Contains(key As TKey, value As TValue) As Boolean
  overload: Fantasy.DataStructure.Collection.OneToManyHashSet`2.Contains*
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).Contains(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).Contains(TKey, TValue)
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.Add(`0,`1)
  commentId: M:Fantasy.DataStructure.Collection.OneToManyHashSet`2.Add(`0,`1)
  id: Add(`0,`1)
  parent: Fantasy.DataStructure.Collection.OneToManyHashSet`2
  langs:
  - csharp
  - vb
  name: Add(TKey, TValue)
  nameWithType: OneToManyHashSet<TKey, TValue>.Add(TKey, TValue)
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.Add(TKey, TValue)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Add
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
    startLine: 121
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 添加指定的键值对到集合中。
  example: []
  syntax:
    content: public void Add(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: 键。
    - id: value
      type: '{TValue}'
      description: 值。
    content.vb: Public Sub Add(key As TKey, value As TValue)
  overload: Fantasy.DataStructure.Collection.OneToManyHashSet`2.Add*
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).Add(TKey, TValue)
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveValue(`0,`1)
  commentId: M:Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveValue(`0,`1)
  id: RemoveValue(`0,`1)
  parent: Fantasy.DataStructure.Collection.OneToManyHashSet`2
  langs:
  - csharp
  - vb
  name: RemoveValue(TKey, TValue)
  nameWithType: OneToManyHashSet<TKey, TValue>.RemoveValue(TKey, TValue)
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.RemoveValue(TKey, TValue)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: RemoveValue
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
    startLine: 140
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 从集合中移除指定键对应的值。
  example: []
  syntax:
    content: public void RemoveValue(TKey key, TValue value)
    parameters:
    - id: key
      type: '{TKey}'
      description: 键。
    - id: value
      type: '{TValue}'
      description: 要移除的值。
    content.vb: Public Sub RemoveValue(key As TKey, value As TValue)
  overload: Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveValue*
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).RemoveValue(TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).RemoveValue(TKey, TValue)
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveKey(`0)
  commentId: M:Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveKey(`0)
  id: RemoveKey(`0)
  parent: Fantasy.DataStructure.Collection.OneToManyHashSet`2
  langs:
  - csharp
  - vb
  name: RemoveKey(TKey)
  nameWithType: OneToManyHashSet<TKey, TValue>.RemoveKey(TKey)
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.RemoveKey(TKey)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: RemoveKey
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
    startLine: 153
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 从集合中移除指定键及其对应的值集合。
  example: []
  syntax:
    content: public void RemoveKey(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: 键。
    content.vb: Public Sub RemoveKey(key As TKey)
  overload: Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveKey*
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).RemoveKey(TKey)
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).RemoveKey(TKey)
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.GetValue(`0)
  commentId: M:Fantasy.DataStructure.Collection.OneToManyHashSet`2.GetValue(`0)
  id: GetValue(`0)
  parent: Fantasy.DataStructure.Collection.OneToManyHashSet`2
  langs:
  - csharp
  - vb
  name: GetValue(TKey)
  nameWithType: OneToManyHashSet<TKey, TValue>.GetValue(TKey)
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.GetValue(TKey)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetValue
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
    startLine: 166
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 获取指定键对应的值集合，如果不存在则返回一个空的哈希集合。
  example: []
  syntax:
    content: public HashSet<TValue> GetValue(TKey key)
    parameters:
    - id: key
      type: '{TKey}'
      description: 键。
    return:
      type: System.Collections.Generic.HashSet{{TValue}}
      description: 对应的值集合或空的哈希集合。
    content.vb: Public Function GetValue(key As TKey) As HashSet(Of TValue)
  overload: Fantasy.DataStructure.Collection.OneToManyHashSet`2.GetValue*
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).GetValue(TKey)
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).GetValue(TKey)
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.Clear
  commentId: M:Fantasy.DataStructure.Collection.OneToManyHashSet`2.Clear
  id: Clear
  parent: Fantasy.DataStructure.Collection.OneToManyHashSet`2
  langs:
  - csharp
  - vb
  name: Clear()
  nameWithType: OneToManyHashSet<TKey, TValue>.Clear()
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.Clear()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Clear
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/DataStructure/Collection/OneToManyHashSetPool.cs
    startLine: 201
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.DataStructure.Collection
  summary: 清空集合中的数据并和队列。
  example: []
  syntax:
    content: protected void Clear()
    content.vb: Protected Sub Clear()
  overload: Fantasy.DataStructure.Collection.OneToManyHashSet`2.Clear*
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).Clear()
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).Clear()
references:
- uid: Fantasy.DataStructure.Collection
  commentId: N:Fantasy.DataStructure.Collection
  href: Fantasy.html
  name: Fantasy.DataStructure.Collection
  nameWithType: Fantasy.DataStructure.Collection
  fullName: Fantasy.DataStructure.Collection
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.Collection
    name: Collection
    href: Fantasy.DataStructure.Collection.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.Collection
    name: Collection
    href: Fantasy.DataStructure.Collection.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  commentId: T:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, HashSet<TValue>>
  nameWithType: Dictionary<TKey, HashSet<TValue>>
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue))
  name.vb: Dictionary(Of TKey, HashSet(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IDictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  commentId: T:System.Collections.Generic.IDictionary{`0,System.Collections.Generic.HashSet{`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, HashSet<TValue>>
  nameWithType: IDictionary<TKey, HashSet<TValue>>
  fullName: System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.HashSet<TValue>>
  nameWithType.vb: IDictionary(Of TKey, HashSet(Of TValue))
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue))
  name.vb: IDictionary(Of TKey, HashSet(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.HashSet{{TValue}}}}
  commentId: T:System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.HashSet{`1}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<KeyValuePair<TKey, HashSet<TValue>>>
  nameWithType: ICollection<KeyValuePair<TKey, HashSet<TValue>>>
  fullName: System.Collections.Generic.ICollection<System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.HashSet<TValue>>>
  nameWithType.vb: ICollection(Of KeyValuePair(Of TKey, HashSet(Of TValue)))
  fullName.vb: System.Collections.Generic.ICollection(Of System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.HashSet(Of TValue)))
  name.vb: ICollection(Of KeyValuePair(Of TKey, HashSet(Of TValue)))
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  commentId: T:System.Collections.Generic.IReadOnlyDictionary{`0,System.Collections.Generic.HashSet{`1}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyDictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, HashSet<TValue>>
  nameWithType: IReadOnlyDictionary<TKey, HashSet<TValue>>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, System.Collections.Generic.HashSet<TValue>>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, HashSet(Of TValue))
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue))
  name.vb: IReadOnlyDictionary(Of TKey, HashSet(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.HashSet{{TValue}}}}
  commentId: T:System.Collections.Generic.IReadOnlyCollection{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.HashSet{`1}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IReadOnlyCollection`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<KeyValuePair<TKey, HashSet<TValue>>>
  nameWithType: IReadOnlyCollection<KeyValuePair<TKey, HashSet<TValue>>>
  fullName: System.Collections.Generic.IReadOnlyCollection<System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.HashSet<TValue>>>
  nameWithType.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, HashSet(Of TValue)))
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.HashSet(Of TValue)))
  name.vb: IReadOnlyCollection(Of KeyValuePair(Of TKey, HashSet(Of TValue)))
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{{TKey},System.Collections.Generic.HashSet{{TValue}}}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{`0,System.Collections.Generic.HashSet{`1}}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<KeyValuePair<TKey, HashSet<TValue>>>
  nameWithType: IEnumerable<KeyValuePair<TKey, HashSet<TValue>>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<TKey, System.Collections.Generic.HashSet<TValue>>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of TKey, HashSet(Of TValue)))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of TKey, System.Collections.Generic.HashSet(Of TValue)))
  name.vb: IEnumerable(Of KeyValuePair(Of TKey, HashSet(Of TValue)))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.keyvaluepair-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: )
- uid: System.Collections.IDictionary
  commentId: T:System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.idictionary
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Collections.ICollection
  commentId: T:System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.icollection
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.IEnumerable
  commentId: T:System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.ienumerable
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Runtime.Serialization.IDeserializationCallback
  commentId: T:System.Runtime.Serialization.IDeserializationCallback
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.ideserializationcallback
  name: IDeserializationCallback
  nameWithType: IDeserializationCallback
  fullName: System.Runtime.Serialization.IDeserializationCallback
- uid: System.Runtime.Serialization.ISerializable
  commentId: T:System.Runtime.Serialization.ISerializable
  parent: System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.iserializable
  name: ISerializable
  nameWithType: ISerializable
  fullName: System.Runtime.Serialization.ISerializable
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Add({TKey},System.Collections.Generic.HashSet{{TValue}})
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Add(`0,System.Collections.Generic.HashSet{`1})
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.add
  name: Add(TKey, HashSet<TValue>)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.Add(TKey, HashSet<TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.Add(TKey, System.Collections.Generic.HashSet<TValue>)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).Add(TKey, HashSet(Of TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).Add(TKey, System.Collections.Generic.HashSet(Of TValue))
  name.vb: Add(TKey, HashSet(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Add(`0,System.Collections.Generic.HashSet{`1})
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Add(`0,System.Collections.Generic.HashSet{`1})
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Clear
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Clear
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.Clear
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.clear
  name: Clear()
  nameWithType: Dictionary<TKey, HashSet<TValue>>.Clear()
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.Clear()
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).Clear()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.ContainsKey({TKey})
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.ContainsKey(`0)
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.ContainsKey(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.ContainsKey(TKey)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.ContainsValue(System.Collections.Generic.HashSet{{TValue}})
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.ContainsValue(System.Collections.Generic.HashSet{`1})
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containsvalue
  name: ContainsValue(HashSet<TValue>)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.ContainsValue(HashSet<TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.ContainsValue(System.Collections.Generic.HashSet<TValue>)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).ContainsValue(HashSet(Of TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).ContainsValue(System.Collections.Generic.HashSet(Of TValue))
  name.vb: ContainsValue(HashSet(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.ContainsValue(System.Collections.Generic.HashSet{`1})
    name: ContainsValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containsvalue
  - name: (
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.ContainsValue(System.Collections.Generic.HashSet{`1})
    name: ContainsValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containsvalue
  - name: (
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.EnsureCapacity(System.Int32)
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.EnsureCapacity(System.Int32)
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ensurecapacity
  name: EnsureCapacity(int)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.EnsureCapacity(int)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.EnsureCapacity(int)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).EnsureCapacity(Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).EnsureCapacity(Integer)
  name.vb: EnsureCapacity(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ensurecapacity
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ensurecapacity
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.GetEnumerator
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.GetEnumerator
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getenumerator
  name: GetEnumerator()
  nameWithType: Dictionary<TKey, HashSet<TValue>>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getobjectdata
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.OnDeserialization(System.Object)
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.OnDeserialization(System.Object)
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ondeserialization
  name: OnDeserialization(object)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.OnDeserialization(object)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.OnDeserialization(object)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).OnDeserialization(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).OnDeserialization(Object)
  name.vb: OnDeserialization(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.OnDeserialization(System.Object)
    name: OnDeserialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ondeserialization
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.OnDeserialization(System.Object)
    name: OnDeserialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ondeserialization
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Remove({TKey})
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Remove(`0)
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.Remove(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0)
  name: Remove(TKey)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.Remove(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.Remove(TKey)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).Remove(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0)
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0)
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Remove({TKey},System.Collections.Generic.HashSet{{TValue}}@)
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Remove(`0,System.Collections.Generic.HashSet{`1}@)
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0-1@)
  name: Remove(TKey, out HashSet<TValue>)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.Remove(TKey, out HashSet<TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.Remove(TKey, out System.Collections.Generic.HashSet<TValue>)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).Remove(TKey, HashSet(Of TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).Remove(TKey, System.Collections.Generic.HashSet(Of TValue))
  name.vb: Remove(TKey, HashSet(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Remove(`0,System.Collections.Generic.HashSet{`1}@)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0-1@)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Remove(`0,System.Collections.Generic.HashSet{`1}@)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0-1@)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.TrimExcess
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TrimExcess
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.TrimExcess
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess
  name: TrimExcess()
  nameWithType: Dictionary<TKey, HashSet<TValue>>.TrimExcess()
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.TrimExcess()
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).TrimExcess()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.TrimExcess(System.Int32)
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TrimExcess(System.Int32)
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess(system-int32)
  name: TrimExcess(int)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.TrimExcess(int)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.TrimExcess(int)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).TrimExcess(Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).TrimExcess(Integer)
  name.vb: TrimExcess(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TrimExcess(System.Int32)
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess(system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TrimExcess(System.Int32)
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess(system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.TryAdd({TKey},System.Collections.Generic.HashSet{{TValue}})
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TryAdd(`0,System.Collections.Generic.HashSet{`1})
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.tryadd
  name: TryAdd(TKey, HashSet<TValue>)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.TryAdd(TKey, HashSet<TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.TryAdd(TKey, System.Collections.Generic.HashSet<TValue>)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).TryAdd(TKey, HashSet(Of TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).TryAdd(TKey, System.Collections.Generic.HashSet(Of TValue))
  name.vb: TryAdd(TKey, HashSet(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TryAdd(`0,System.Collections.Generic.HashSet{`1})
    name: TryAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.tryadd
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TryAdd(`0,System.Collections.Generic.HashSet{`1})
    name: TryAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.tryadd
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.TryGetValue({TKey},System.Collections.Generic.HashSet{{TValue}}@)
  commentId: M:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TryGetValue(`0,System.Collections.Generic.HashSet{`1}@)
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trygetvalue
  name: TryGetValue(TKey, out HashSet<TValue>)
  nameWithType: Dictionary<TKey, HashSet<TValue>>.TryGetValue(TKey, out HashSet<TValue>)
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.TryGetValue(TKey, out System.Collections.Generic.HashSet<TValue>)
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).TryGetValue(TKey, HashSet(Of TValue))
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).TryGetValue(TKey, System.Collections.Generic.HashSet(Of TValue))
  name.vb: TryGetValue(TKey, HashSet(Of TValue))
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TryGetValue(`0,System.Collections.Generic.HashSet{`1}@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.TryGetValue(`0,System.Collections.Generic.HashSet{`1}@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Comparer
  commentId: P:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Comparer
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.Comparer
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.comparer
  name: Comparer
  nameWithType: Dictionary<TKey, HashSet<TValue>>.Comparer
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.Comparer
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).Comparer
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).Comparer
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Count
  commentId: P:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Count
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.Count
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.count
  name: Count
  nameWithType: Dictionary<TKey, HashSet<TValue>>.Count
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.Count
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).Count
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).Count
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Item({TKey})
  commentId: P:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Item(`0)
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.Item(`0)
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.item
  name: this[TKey]
  nameWithType: Dictionary<TKey, HashSet<TValue>>.this[TKey]
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.this[TKey]
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).this[](TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Keys
  commentId: P:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Keys
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.Keys
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.keys
  name: Keys
  nameWithType: Dictionary<TKey, HashSet<TValue>>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.Keys
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).Keys
- uid: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}.Values
  commentId: P:System.Collections.Generic.Dictionary{`0,System.Collections.Generic.HashSet{`1}}.Values
  parent: System.Collections.Generic.Dictionary{{TKey},System.Collections.Generic.HashSet{{TValue}}}
  definition: System.Collections.Generic.Dictionary`2.Values
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.values
  name: Values
  nameWithType: Dictionary<TKey, HashSet<TValue>>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, System.Collections.Generic.HashSet<TValue>>.Values
  nameWithType.vb: Dictionary(Of TKey, HashSet(Of TValue)).Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)).Values
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.Fantasy.Helper.JsonHelper.ToJson``1
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  parent: Fantasy.Helper.JsonHelper
  definition: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<OneToManyHashSet<TKey, TValue>>(OneToManyHashSet<TKey, TValue>)
  nameWithType: JsonHelper.ToJson<OneToManyHashSet<TKey, TValue>>(OneToManyHashSet<TKey, TValue>)
  fullName: Fantasy.Helper.JsonHelper.ToJson<Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>>(Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>)
  nameWithType.vb: JsonHelper.ToJson(Of OneToManyHashSet(Of TKey, TValue))(OneToManyHashSet(Of TKey, TValue))
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue))(Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue))
  name.vb: ToJson(Of OneToManyHashSet(Of TKey, TValue))(OneToManyHashSet(Of TKey, TValue))
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.DataStructure.Collection.OneToManyHashSet{`0,`1})
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2
    name: OneToManyHashSet
    href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: '>'
  - name: (
  - uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2
    name: OneToManyHashSet
    href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.DataStructure.Collection.OneToManyHashSet{`0,`1})
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2
    name: OneToManyHashSet
    href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: (
  - uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2
    name: OneToManyHashSet
    href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System.Collections.Generic.IDictionary{`0,System.Collections.Generic.HashSet{`1}}.Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2({TKey},System.Collections.Generic.HashSet{{TValue}}@)
  commentId: M:Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  parent: Fantasy.DataStructure.Dictionary.DictionaryExtensions
  definition: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  name: TryRemove<TKey, HashSet<TValue>>(IDictionary<TKey, HashSet<TValue>>, TKey, out HashSet<TValue>)
  nameWithType: DictionaryExtensions.TryRemove<TKey, HashSet<TValue>>(IDictionary<TKey, HashSet<TValue>>, TKey, out HashSet<TValue>)
  fullName: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove<TKey, System.Collections.Generic.HashSet<TValue>>(System.Collections.Generic.IDictionary<TKey, System.Collections.Generic.HashSet<TValue>>, TKey, out System.Collections.Generic.HashSet<TValue>)
  nameWithType.vb: DictionaryExtensions.TryRemove(Of TKey, HashSet(Of TValue))(IDictionary(Of TKey, HashSet(Of TValue)), TKey, HashSet(Of TValue))
  fullName.vb: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove(Of TKey, System.Collections.Generic.HashSet(Of TValue))(System.Collections.Generic.IDictionary(Of TKey, System.Collections.Generic.HashSet(Of TValue)), TKey, System.Collections.Generic.HashSet(Of TValue))
  name.vb: TryRemove(Of TKey, HashSet(Of TValue))(IDictionary(Of TKey, HashSet(Of TValue)), TKey, HashSet(Of TValue))
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.HashSet{`1}},`0,System.Collections.Generic.HashSet{`1}@)
    name: TryRemove
    href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: '>'
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{`0,System.Collections.Generic.HashSet{`1}},`0,System.Collections.Generic.HashSet{`1}@)
    name: TryRemove
    href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
  - name: ','
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.icollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IReadOnlyDictionary`2
  commentId: T:System.Collections.Generic.IReadOnlyDictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  name: IReadOnlyDictionary<TKey, TValue>
  nameWithType: IReadOnlyDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IReadOnlyDictionary<TKey, TValue>
  nameWithType.vb: IReadOnlyDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IReadOnlyDictionary(Of TKey, TValue)
  name.vb: IReadOnlyDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyDictionary`2
    name: IReadOnlyDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlydictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.IReadOnlyCollection`1
  commentId: T:System.Collections.Generic.IReadOnlyCollection`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  name: IReadOnlyCollection<T>
  nameWithType: IReadOnlyCollection<T>
  fullName: System.Collections.Generic.IReadOnlyCollection<T>
  nameWithType.vb: IReadOnlyCollection(Of T)
  fullName.vb: System.Collections.Generic.IReadOnlyCollection(Of T)
  name.vb: IReadOnlyCollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IReadOnlyCollection`1
    name: IReadOnlyCollection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ireadonlycollection-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Runtime.Serialization
  commentId: N:System.Runtime.Serialization
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Runtime.Serialization
  nameWithType: System.Runtime.Serialization
  fullName: System.Runtime.Serialization
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Runtime
    name: Runtime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime
  - name: .
  - uid: System.Runtime.Serialization
    name: Serialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization
- uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
  commentId: M:System.Collections.Generic.Dictionary`2.Add(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.add
  name: Add(TKey, TValue)
  nameWithType: Dictionary<TKey, TValue>.Add(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).Add(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Add(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Add(`0,`1)
    name: Add
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.add
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.Dictionary`2.Clear
  commentId: M:System.Collections.Generic.Dictionary`2.Clear
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.clear
  name: Clear()
  nameWithType: Dictionary<TKey, TValue>.Clear()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Clear()
  nameWithType.vb: Dictionary(Of TKey, TValue).Clear()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Clear()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.clear
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Clear
    name: Clear
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.clear
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  commentId: M:System.Collections.Generic.Dictionary`2.ContainsKey(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containskey
  name: ContainsKey(TKey)
  nameWithType: Dictionary<TKey, TValue>.ContainsKey(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)
  nameWithType.vb: Dictionary(Of TKey, TValue).ContainsKey(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsKey(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsKey(`0)
    name: ContainsKey
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containskey
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  commentId: M:System.Collections.Generic.Dictionary`2.ContainsValue(`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containsvalue
  name: ContainsValue(TValue)
  nameWithType: Dictionary<TKey, TValue>.ContainsValue(TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.ContainsValue(TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).ContainsValue(TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).ContainsValue(TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containsvalue
  - name: (
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.ContainsValue(`1)
    name: ContainsValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.containsvalue
  - name: (
  - name: TValue
  - name: )
- uid: System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
  commentId: M:System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ensurecapacity
  name: EnsureCapacity(int)
  nameWithType: Dictionary<TKey, TValue>.EnsureCapacity(int)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.EnsureCapacity(int)
  nameWithType.vb: Dictionary(Of TKey, TValue).EnsureCapacity(Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).EnsureCapacity(Integer)
  name.vb: EnsureCapacity(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ensurecapacity
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.EnsureCapacity(System.Int32)
    name: EnsureCapacity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ensurecapacity
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary`2.GetEnumerator
  commentId: M:System.Collections.Generic.Dictionary`2.GetEnumerator
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getenumerator
  name: GetEnumerator()
  nameWithType: Dictionary<TKey, TValue>.GetEnumerator()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetEnumerator()
  nameWithType.vb: Dictionary(Of TKey, TValue).GetEnumerator()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).GetEnumerator()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getenumerator
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetEnumerator
    name: GetEnumerator
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getenumerator
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  commentId: M:System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getobjectdata
  name: GetObjectData(SerializationInfo, StreamingContext)
  nameWithType: Dictionary<TKey, TValue>.GetObjectData(SerializationInfo, StreamingContext)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  nameWithType.vb: Dictionary(Of TKey, TValue).GetObjectData(SerializationInfo, StreamingContext)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).GetObjectData(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
    name: GetObjectData
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.getobjectdata
  - name: (
  - uid: System.Runtime.Serialization.SerializationInfo
    name: SerializationInfo
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.serializationinfo
  - name: ','
  - name: " "
  - uid: System.Runtime.Serialization.StreamingContext
    name: StreamingContext
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.runtime.serialization.streamingcontext
  - name: )
- uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  commentId: M:System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ondeserialization
  name: OnDeserialization(object)
  nameWithType: Dictionary<TKey, TValue>.OnDeserialization(object)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.OnDeserialization(object)
  nameWithType.vb: Dictionary(Of TKey, TValue).OnDeserialization(Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).OnDeserialization(Object)
  name.vb: OnDeserialization(Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    name: OnDeserialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ondeserialization
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.OnDeserialization(System.Object)
    name: OnDeserialization
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.ondeserialization
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.Dictionary`2.Remove(`0)
  commentId: M:System.Collections.Generic.Dictionary`2.Remove(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0)
  name: Remove(TKey)
  nameWithType: Dictionary<TKey, TValue>.Remove(TKey)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey)
  nameWithType.vb: Dictionary(Of TKey, TValue).Remove(TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove(TKey)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0)
  - name: (
  - name: TKey
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0)
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
  commentId: M:System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0-1@)
  name: Remove(TKey, out TValue)
  nameWithType: Dictionary<TKey, TValue>.Remove(TKey, out TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Remove(TKey, out TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).Remove(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Remove(TKey, TValue)
  name.vb: Remove(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0-1@)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Remove(`0,`1@)
    name: Remove
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.remove#system-collections-generic-dictionary-2-remove(-0-1@)
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.Dictionary`2.TrimExcess
  commentId: M:System.Collections.Generic.Dictionary`2.TrimExcess
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess
  name: TrimExcess()
  nameWithType: Dictionary<TKey, TValue>.TrimExcess()
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TrimExcess()
  nameWithType.vb: Dictionary(Of TKey, TValue).TrimExcess()
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TrimExcess()
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess
  - name: (
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess
  - name: (
  - name: )
- uid: System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
  commentId: M:System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess(system-int32)
  name: TrimExcess(int)
  nameWithType: Dictionary<TKey, TValue>.TrimExcess(int)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TrimExcess(int)
  nameWithType.vb: Dictionary(Of TKey, TValue).TrimExcess(Integer)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TrimExcess(Integer)
  name.vb: TrimExcess(Integer)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess(system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TrimExcess(System.Int32)
    name: TrimExcess
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trimexcess#system-collections-generic-dictionary-2-trimexcess(system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
  commentId: M:System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.tryadd
  name: TryAdd(TKey, TValue)
  nameWithType: Dictionary<TKey, TValue>.TryAdd(TKey, TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryAdd(TKey, TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).TryAdd(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TryAdd(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
    name: TryAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.tryadd
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TryAdd(`0,`1)
    name: TryAdd
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.tryadd
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  commentId: M:System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trygetvalue
  name: TryGetValue(TKey, out TValue)
  nameWithType: Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.TryGetValue(TKey, out TValue)
  nameWithType.vb: Dictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).TryGetValue(TKey, TValue)
  name.vb: TryGetValue(TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TValue
  - name: )
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.TryGetValue(`0,`1@)
    name: TryGetValue
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.trygetvalue
  - name: (
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.Dictionary`2.Comparer
  commentId: P:System.Collections.Generic.Dictionary`2.Comparer
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.comparer
  name: Comparer
  nameWithType: Dictionary<TKey, TValue>.Comparer
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Comparer
  nameWithType.vb: Dictionary(Of TKey, TValue).Comparer
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Comparer
- uid: System.Collections.Generic.Dictionary`2.Count
  commentId: P:System.Collections.Generic.Dictionary`2.Count
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.count
  name: Count
  nameWithType: Dictionary<TKey, TValue>.Count
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Count
  nameWithType.vb: Dictionary(Of TKey, TValue).Count
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Count
- uid: System.Collections.Generic.Dictionary`2.Item(`0)
  commentId: P:System.Collections.Generic.Dictionary`2.Item(`0)
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.item
  name: this[TKey]
  nameWithType: Dictionary<TKey, TValue>.this[TKey]
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.this[TKey]
  nameWithType.vb: Dictionary(Of TKey, TValue).this[](TKey)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).this[](TKey)
  name.vb: this[](TKey)
  spec.csharp:
  - name: this
  - name: '['
  - name: TKey
  - name: ']'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2.Item(`0)
    name: this[]
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.item
  - name: (
  - name: TKey
  - name: )
- uid: System.Collections.Generic.Dictionary`2.Keys
  commentId: P:System.Collections.Generic.Dictionary`2.Keys
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.keys
  name: Keys
  nameWithType: Dictionary<TKey, TValue>.Keys
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Keys
  nameWithType.vb: Dictionary(Of TKey, TValue).Keys
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Keys
- uid: System.Collections.Generic.Dictionary`2.Values
  commentId: P:System.Collections.Generic.Dictionary`2.Values
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2.values
  name: Values
  nameWithType: Dictionary<TKey, TValue>.Values
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>.Values
  nameWithType.vb: Dictionary(Of TKey, TValue).Values
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue).Values
- uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<T>(T)
  nameWithType: JsonHelper.ToJson<T>(T)
  fullName: Fantasy.Helper.JsonHelper.ToJson<T>(T)
  nameWithType.vb: JsonHelper.ToJson(Of T)(T)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of T)(T)
  name.vb: ToJson(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Fantasy.Helper.JsonHelper
  commentId: T:Fantasy.Helper.JsonHelper
  parent: Fantasy.Helper
  href: Fantasy.Helper.JsonHelper.html
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: Fantasy.Helper.JsonHelper
- uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  commentId: M:Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
  isExternal: true
  href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  name: TryRemove<T, TV>(IDictionary<T, TV>, T, out TV)
  nameWithType: DictionaryExtensions.TryRemove<T, TV>(IDictionary<T, TV>, T, out TV)
  fullName: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove<T, TV>(System.Collections.Generic.IDictionary<T, TV>, T, out TV)
  nameWithType.vb: DictionaryExtensions.TryRemove(Of T, TV)(IDictionary(Of T, TV), T, TV)
  fullName.vb: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove(Of T, TV)(System.Collections.Generic.IDictionary(Of T, TV), T, TV)
  name.vb: TryRemove(Of T, TV)(IDictionary(Of T, TV), T, TV)
  spec.csharp:
  - uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
    name: TryRemove
    href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TV
  - name: '>'
  - name: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: <
  - name: T
  - name: ','
  - name: " "
  - name: TV
  - name: '>'
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - name: TV
  - name: )
  spec.vb:
  - uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions.TryRemove``2(System.Collections.Generic.IDictionary{``0,``1},``0,``1@)
    name: TryRemove
    href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html#Fantasy_DataStructure_Dictionary_DictionaryExtensions_TryRemove__2_System_Collections_Generic_IDictionary___0___1____0___1__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TV
  - name: )
  - name: (
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.idictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TV
  - name: )
  - name: ','
  - name: " "
  - name: T
  - name: ','
  - name: " "
  - name: TV
  - name: )
- uid: Fantasy.DataStructure.Dictionary.DictionaryExtensions
  commentId: T:Fantasy.DataStructure.Dictionary.DictionaryExtensions
  parent: Fantasy.DataStructure.Dictionary
  href: Fantasy.DataStructure.Dictionary.DictionaryExtensions.html
  name: DictionaryExtensions
  nameWithType: DictionaryExtensions
  fullName: Fantasy.DataStructure.Dictionary.DictionaryExtensions
- uid: Fantasy.Helper
  commentId: N:Fantasy.Helper
  href: Fantasy.html
  name: Fantasy.Helper
  nameWithType: Fantasy.Helper
  fullName: Fantasy.Helper
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
- uid: Fantasy.DataStructure.Dictionary
  commentId: N:Fantasy.DataStructure.Dictionary
  href: Fantasy.html
  name: Fantasy.DataStructure.Dictionary
  nameWithType: Fantasy.DataStructure.Dictionary
  fullName: Fantasy.DataStructure.Dictionary
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.Dictionary
    name: Dictionary
    href: Fantasy.DataStructure.Dictionary.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.DataStructure
    name: DataStructure
    href: Fantasy.DataStructure.html
  - name: .
  - uid: Fantasy.DataStructure.Dictionary
    name: Dictionary
    href: Fantasy.DataStructure.Dictionary.html
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2
  commentId: T:Fantasy.DataStructure.Collection.OneToManyHashSet`2
  href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html
  name: OneToManyHashSet<TKey, TValue>
  nameWithType: OneToManyHashSet<TKey, TValue>
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue)
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue)
  name.vb: OneToManyHashSet(Of TKey, TValue)
  spec.csharp:
  - uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2
    name: OneToManyHashSet
    href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2
    name: OneToManyHashSet
    href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.#ctor*
  commentId: Overload:Fantasy.DataStructure.Collection.OneToManyHashSet`2.#ctor
  href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html#Fantasy_DataStructure_Collection_OneToManyHashSet_2__ctor
  name: OneToManyHashSet
  nameWithType: OneToManyHashSet<TKey, TValue>.OneToManyHashSet
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.OneToManyHashSet
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).New
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.Contains*
  commentId: Overload:Fantasy.DataStructure.Collection.OneToManyHashSet`2.Contains
  href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html#Fantasy_DataStructure_Collection_OneToManyHashSet_2_Contains__0__1_
  name: Contains
  nameWithType: OneToManyHashSet<TKey, TValue>.Contains
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.Contains
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).Contains
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).Contains
- uid: '{TKey}'
  commentId: '!:TKey'
  definition: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: '{TValue}'
  commentId: '!:TValue'
  definition: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TKey
  name: TKey
  nameWithType: TKey
  fullName: TKey
- uid: TValue
  name: TValue
  nameWithType: TValue
  fullName: TValue
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.Add*
  commentId: Overload:Fantasy.DataStructure.Collection.OneToManyHashSet`2.Add
  href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html#Fantasy_DataStructure_Collection_OneToManyHashSet_2_Add__0__1_
  name: Add
  nameWithType: OneToManyHashSet<TKey, TValue>.Add
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.Add
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).Add
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).Add
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveValue*
  commentId: Overload:Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveValue
  href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html#Fantasy_DataStructure_Collection_OneToManyHashSet_2_RemoveValue__0__1_
  name: RemoveValue
  nameWithType: OneToManyHashSet<TKey, TValue>.RemoveValue
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.RemoveValue
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).RemoveValue
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).RemoveValue
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveKey*
  commentId: Overload:Fantasy.DataStructure.Collection.OneToManyHashSet`2.RemoveKey
  href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html#Fantasy_DataStructure_Collection_OneToManyHashSet_2_RemoveKey__0_
  name: RemoveKey
  nameWithType: OneToManyHashSet<TKey, TValue>.RemoveKey
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.RemoveKey
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).RemoveKey
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).RemoveKey
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.GetValue*
  commentId: Overload:Fantasy.DataStructure.Collection.OneToManyHashSet`2.GetValue
  href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html#Fantasy_DataStructure_Collection_OneToManyHashSet_2_GetValue__0_
  name: GetValue
  nameWithType: OneToManyHashSet<TKey, TValue>.GetValue
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.GetValue
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).GetValue
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).GetValue
- uid: System.Collections.Generic.HashSet{{TValue}}
  commentId: T:System.Collections.Generic.HashSet{`1}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.HashSet`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<TValue>
  nameWithType: HashSet<TValue>
  fullName: System.Collections.Generic.HashSet<TValue>
  nameWithType.vb: HashSet(Of TValue)
  fullName.vb: System.Collections.Generic.HashSet(Of TValue)
  name.vb: HashSet(Of TValue)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic.HashSet`1
  commentId: T:System.Collections.Generic.HashSet`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  name: HashSet<T>
  nameWithType: HashSet<T>
  fullName: System.Collections.Generic.HashSet<T>
  nameWithType.vb: HashSet(Of T)
  fullName.vb: System.Collections.Generic.HashSet(Of T)
  name.vb: HashSet(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.HashSet`1
    name: HashSet
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.hashset-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Fantasy.DataStructure.Collection.OneToManyHashSet`2.Clear*
  commentId: Overload:Fantasy.DataStructure.Collection.OneToManyHashSet`2.Clear
  href: Fantasy.DataStructure.Collection.OneToManyHashSet-2.html#Fantasy_DataStructure_Collection_OneToManyHashSet_2_Clear
  name: Clear
  nameWithType: OneToManyHashSet<TKey, TValue>.Clear
  fullName: Fantasy.DataStructure.Collection.OneToManyHashSet<TKey, TValue>.Clear
  nameWithType.vb: OneToManyHashSet(Of TKey, TValue).Clear
  fullName.vb: Fantasy.DataStructure.Collection.OneToManyHashSet(Of TKey, TValue).Clear
