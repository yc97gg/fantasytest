### YamlMime:ManagedReference
items:
- uid: Fantasy.Assembly.AssemblySystem
  commentId: T:Fantasy.Assembly.AssemblySystem
  id: AssemblySystem
  parent: Fantasy.Assembly
  children:
  - Fantasy.Assembly.AssemblySystem.Dispose
  - Fantasy.Assembly.AssemblySystem.ForEach
  - Fantasy.Assembly.AssemblySystem.ForEach(System.Int64)
  - Fantasy.Assembly.AssemblySystem.ForEach(System.Int64,System.Type)
  - Fantasy.Assembly.AssemblySystem.ForEach(System.Type)
  - Fantasy.Assembly.AssemblySystem.ForEachAssembly
  - Fantasy.Assembly.AssemblySystem.GetAssembly(System.Int64)
  - Fantasy.Assembly.AssemblySystem.Initialize(System.Reflection.Assembly[])
  - Fantasy.Assembly.AssemblySystem.LoadAssembly(System.Reflection.Assembly)
  - Fantasy.Assembly.AssemblySystem.Register(System.Object)
  - Fantasy.Assembly.AssemblySystem.UnLoadAssembly(System.Reflection.Assembly)
  - Fantasy.Assembly.AssemblySystem.UnRegister(System.Object)
  langs:
  - csharp
  - vb
  name: AssemblySystem
  nameWithType: AssemblySystem
  fullName: Fantasy.Assembly.AssemblySystem
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: AssemblySystem
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 19
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 管理程序集加载和卸载的帮助类。
  example: []
  syntax:
    content: public static class AssemblySystem
    content.vb: Public Module AssemblySystem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: Fantasy.Assembly.AssemblySystem.Initialize(System.Reflection.Assembly[])
  commentId: M:Fantasy.Assembly.AssemblySystem.Initialize(System.Reflection.Assembly[])
  id: Initialize(System.Reflection.Assembly[])
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: Initialize(params Assembly[])
  nameWithType: AssemblySystem.Initialize(params Assembly[])
  fullName: Fantasy.Assembly.AssemblySystem.Initialize(params System.Reflection.Assembly[])
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Initialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 31
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 初始化 AssemblySystem。
  example: []
  syntax:
    content: public static void Initialize(params Assembly[] assemblies)
    parameters:
    - id: assemblies
      type: System.Reflection.Assembly[]
    content.vb: Public Shared Sub Initialize(ParamArray assemblies As Assembly())
  overload: Fantasy.Assembly.AssemblySystem.Initialize*
  nameWithType.vb: AssemblySystem.Initialize(ParamArray Assembly())
  fullName.vb: Fantasy.Assembly.AssemblySystem.Initialize(ParamArray System.Reflection.Assembly())
  name.vb: Initialize(ParamArray Assembly())
- uid: Fantasy.Assembly.AssemblySystem.LoadAssembly(System.Reflection.Assembly)
  commentId: M:Fantasy.Assembly.AssemblySystem.LoadAssembly(System.Reflection.Assembly)
  id: LoadAssembly(System.Reflection.Assembly)
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: LoadAssembly(Assembly)
  nameWithType: AssemblySystem.LoadAssembly(Assembly)
  fullName: Fantasy.Assembly.AssemblySystem.LoadAssembly(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: LoadAssembly
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 44
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 加载指定的程序集，并触发相应的事件。
  example: []
  syntax:
    content: public static void LoadAssembly(Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: 要加载的程序集。
    content.vb: Public Shared Sub LoadAssembly(assembly As Assembly)
  overload: Fantasy.Assembly.AssemblySystem.LoadAssembly*
- uid: Fantasy.Assembly.AssemblySystem.UnLoadAssembly(System.Reflection.Assembly)
  commentId: M:Fantasy.Assembly.AssemblySystem.UnLoadAssembly(System.Reflection.Assembly)
  id: UnLoadAssembly(System.Reflection.Assembly)
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: UnLoadAssembly(Assembly)
  nameWithType: AssemblySystem.UnLoadAssembly(Assembly)
  fullName: Fantasy.Assembly.AssemblySystem.UnLoadAssembly(System.Reflection.Assembly)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: UnLoadAssembly
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 73
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 卸载程序集
  example: []
  syntax:
    content: public static void UnLoadAssembly(Assembly assembly)
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: ''
    content.vb: Public Shared Sub UnLoadAssembly(assembly As Assembly)
  overload: Fantasy.Assembly.AssemblySystem.UnLoadAssembly*
- uid: Fantasy.Assembly.AssemblySystem.Register(System.Object)
  commentId: M:Fantasy.Assembly.AssemblySystem.Register(System.Object)
  id: Register(System.Object)
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: Register(object)
  nameWithType: AssemblySystem.Register(object)
  fullName: Fantasy.Assembly.AssemblySystem.Register(object)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Register
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 93
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 将AssemblySystem接口的object注册到程序集管理中心
  example: []
  syntax:
    content: public static FTask Register(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    return:
      type: Fantasy.Async.FTask
    content.vb: Public Shared Function Register(obj As Object) As FTask
  overload: Fantasy.Assembly.AssemblySystem.Register*
  nameWithType.vb: AssemblySystem.Register(Object)
  fullName.vb: Fantasy.Assembly.AssemblySystem.Register(Object)
  name.vb: Register(Object)
- uid: Fantasy.Assembly.AssemblySystem.UnRegister(System.Object)
  commentId: M:Fantasy.Assembly.AssemblySystem.UnRegister(System.Object)
  id: UnRegister(System.Object)
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: UnRegister(object)
  nameWithType: AssemblySystem.UnRegister(object)
  fullName: Fantasy.Assembly.AssemblySystem.UnRegister(object)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: UnRegister
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 112
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 程序集管理中心卸载注册的Load、ReLoad、UnLoad的接口
  example: []
  syntax:
    content: public static void UnRegister(object obj)
    parameters:
    - id: obj
      type: System.Object
      description: ''
    content.vb: Public Shared Sub UnRegister(obj As Object)
  overload: Fantasy.Assembly.AssemblySystem.UnRegister*
  nameWithType.vb: AssemblySystem.UnRegister(Object)
  fullName.vb: Fantasy.Assembly.AssemblySystem.UnRegister(Object)
  name.vb: UnRegister(Object)
- uid: Fantasy.Assembly.AssemblySystem.ForEach
  commentId: M:Fantasy.Assembly.AssemblySystem.ForEach
  id: ForEach
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: ForEach()
  nameWithType: AssemblySystem.ForEach()
  fullName: Fantasy.Assembly.AssemblySystem.ForEach()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ForEach
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 137
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 获取所有已加载程序集中的所有类型。
  example: []
  syntax:
    content: public static IEnumerable<Type> ForEach()
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: 所有已加载程序集中的类型。
    content.vb: Public Shared Function ForEach() As IEnumerable(Of Type)
  overload: Fantasy.Assembly.AssemblySystem.ForEach*
- uid: Fantasy.Assembly.AssemblySystem.ForEach(System.Int64)
  commentId: M:Fantasy.Assembly.AssemblySystem.ForEach(System.Int64)
  id: ForEach(System.Int64)
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: ForEach(long)
  nameWithType: AssemblySystem.ForEach(long)
  fullName: Fantasy.Assembly.AssemblySystem.ForEach(long)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ForEach
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 153
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 获取指定程序集中的所有类型。
  example: []
  syntax:
    content: public static IEnumerable<Type> ForEach(long assemblyIdentity)
    parameters:
    - id: assemblyIdentity
      type: System.Int64
      description: 程序集唯一标识。
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: 指定程序集中的类型。
    content.vb: Public Shared Function ForEach(assemblyIdentity As Long) As IEnumerable(Of Type)
  overload: Fantasy.Assembly.AssemblySystem.ForEach*
  nameWithType.vb: AssemblySystem.ForEach(Long)
  fullName.vb: Fantasy.Assembly.AssemblySystem.ForEach(Long)
  name.vb: ForEach(Long)
- uid: Fantasy.Assembly.AssemblySystem.ForEach(System.Type)
  commentId: M:Fantasy.Assembly.AssemblySystem.ForEach(System.Type)
  id: ForEach(System.Type)
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: ForEach(Type)
  nameWithType: AssemblySystem.ForEach(Type)
  fullName: Fantasy.Assembly.AssemblySystem.ForEach(System.Type)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ForEach
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 171
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 获取所有已加载程序集中实现指定类型的所有类型。
  example: []
  syntax:
    content: public static IEnumerable<Type> ForEach(Type findType)
    parameters:
    - id: findType
      type: System.Type
      description: 要查找的基类或接口类型。
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: 所有已加载程序集中实现指定类型的类型。
    content.vb: Public Shared Function ForEach(findType As Type) As IEnumerable(Of Type)
  overload: Fantasy.Assembly.AssemblySystem.ForEach*
- uid: Fantasy.Assembly.AssemblySystem.ForEach(System.Int64,System.Type)
  commentId: M:Fantasy.Assembly.AssemblySystem.ForEach(System.Int64,System.Type)
  id: ForEach(System.Int64,System.Type)
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: ForEach(long, Type)
  nameWithType: AssemblySystem.ForEach(long, Type)
  fullName: Fantasy.Assembly.AssemblySystem.ForEach(long, System.Type)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ForEach
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 193
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 获取指定程序集中实现指定类型的所有类型。
  example: []
  syntax:
    content: public static IEnumerable<Type> ForEach(long assemblyIdentity, Type findType)
    parameters:
    - id: assemblyIdentity
      type: System.Int64
      description: 程序集唯一标识。
    - id: findType
      type: System.Type
      description: 要查找的基类或接口类型。
    return:
      type: System.Collections.Generic.IEnumerable{System.Type}
      description: 指定程序集中实现指定类型的类型。
    content.vb: Public Shared Function ForEach(assemblyIdentity As Long, findType As Type) As IEnumerable(Of Type)
  overload: Fantasy.Assembly.AssemblySystem.ForEach*
  nameWithType.vb: AssemblySystem.ForEach(Long, Type)
  fullName.vb: Fantasy.Assembly.AssemblySystem.ForEach(Long, System.Type)
  name.vb: ForEach(Long, Type)
- uid: Fantasy.Assembly.AssemblySystem.GetAssembly(System.Int64)
  commentId: M:Fantasy.Assembly.AssemblySystem.GetAssembly(System.Int64)
  id: GetAssembly(System.Int64)
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: GetAssembly(long)
  nameWithType: AssemblySystem.GetAssembly(long)
  fullName: Fantasy.Assembly.AssemblySystem.GetAssembly(long)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetAssembly
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 216
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 获取指定程序集的实例。
  example: []
  syntax:
    content: public static Assembly GetAssembly(long assemblyIdentity)
    parameters:
    - id: assemblyIdentity
      type: System.Int64
      description: 程序集名称。
    return:
      type: System.Reflection.Assembly
      description: 指定程序集的实例，如果未加载则返回 null。
    content.vb: Public Shared Function GetAssembly(assemblyIdentity As Long) As Assembly
  overload: Fantasy.Assembly.AssemblySystem.GetAssembly*
  nameWithType.vb: AssemblySystem.GetAssembly(Long)
  fullName.vb: Fantasy.Assembly.AssemblySystem.GetAssembly(Long)
  name.vb: GetAssembly(Long)
- uid: Fantasy.Assembly.AssemblySystem.ForEachAssembly
  commentId: P:Fantasy.Assembly.AssemblySystem.ForEachAssembly
  id: ForEachAssembly
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: ForEachAssembly
  nameWithType: AssemblySystem.ForEachAssembly
  fullName: Fantasy.Assembly.AssemblySystem.ForEachAssembly
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ForEachAssembly
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 225
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 获取当前框架注册的Assembly
  example: []
  syntax:
    content: public static IEnumerable<Assembly> ForEachAssembly { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
      description: ''
    content.vb: Public Shared ReadOnly Property ForEachAssembly As IEnumerable(Of Assembly)
  overload: Fantasy.Assembly.AssemblySystem.ForEachAssembly*
- uid: Fantasy.Assembly.AssemblySystem.Dispose
  commentId: M:Fantasy.Assembly.AssemblySystem.Dispose
  id: Dispose
  parent: Fantasy.Assembly.AssemblySystem
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: AssemblySystem.Dispose()
  fullName: Fantasy.Assembly.AssemblySystem.Dispose()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Dispose
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Assembly/AssemblySystem.cs
    startLine: 249
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Assembly
  summary: 释放资源，卸载所有加载的程序集。
  example: []
  syntax:
    content: public static void Dispose()
    content.vb: Public Shared Sub Dispose()
  overload: Fantasy.Assembly.AssemblySystem.Dispose*
references:
- uid: Fantasy.Assembly
  commentId: N:Fantasy.Assembly
  href: Fantasy.html
  name: Fantasy.Assembly
  nameWithType: Fantasy.Assembly
  fullName: Fantasy.Assembly
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Assembly
    name: Assembly
    href: Fantasy.Assembly.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Assembly
    name: Assembly
    href: Fantasy.Assembly.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantasy.Assembly.AssemblySystem.Initialize*
  commentId: Overload:Fantasy.Assembly.AssemblySystem.Initialize
  href: Fantasy.Assembly.AssemblySystem.html#Fantasy_Assembly_AssemblySystem_Initialize_System_Reflection_Assembly___
  name: Initialize
  nameWithType: AssemblySystem.Initialize
  fullName: Fantasy.Assembly.AssemblySystem.Initialize
- uid: System.Reflection.Assembly[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly[]
  nameWithType: Assembly[]
  fullName: System.Reflection.Assembly[]
  nameWithType.vb: Assembly()
  fullName.vb: System.Reflection.Assembly()
  name.vb: Assembly()
  spec.csharp:
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: (
  - name: )
- uid: Fantasy.Assembly.AssemblySystem.LoadAssembly*
  commentId: Overload:Fantasy.Assembly.AssemblySystem.LoadAssembly
  href: Fantasy.Assembly.AssemblySystem.html#Fantasy_Assembly_AssemblySystem_LoadAssembly_System_Reflection_Assembly_
  name: LoadAssembly
  nameWithType: AssemblySystem.LoadAssembly
  fullName: Fantasy.Assembly.AssemblySystem.LoadAssembly
- uid: System.Reflection.Assembly
  commentId: T:System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Reflection
  commentId: N:System.Reflection
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Reflection
  nameWithType: System.Reflection
  fullName: System.Reflection
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Reflection
    name: Reflection
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection
- uid: Fantasy.Assembly.AssemblySystem.UnLoadAssembly*
  commentId: Overload:Fantasy.Assembly.AssemblySystem.UnLoadAssembly
  href: Fantasy.Assembly.AssemblySystem.html#Fantasy_Assembly_AssemblySystem_UnLoadAssembly_System_Reflection_Assembly_
  name: UnLoadAssembly
  nameWithType: AssemblySystem.UnLoadAssembly
  fullName: Fantasy.Assembly.AssemblySystem.UnLoadAssembly
- uid: Fantasy.Assembly.AssemblySystem.Register*
  commentId: Overload:Fantasy.Assembly.AssemblySystem.Register
  href: Fantasy.Assembly.AssemblySystem.html#Fantasy_Assembly_AssemblySystem_Register_System_Object_
  name: Register
  nameWithType: AssemblySystem.Register
  fullName: Fantasy.Assembly.AssemblySystem.Register
- uid: Fantasy.Async.FTask
  commentId: T:Fantasy.Async.FTask
  parent: Fantasy.Async
  href: Fantasy.Async.FTask.html
  name: FTask
  nameWithType: FTask
  fullName: Fantasy.Async.FTask
- uid: Fantasy.Async
  commentId: N:Fantasy.Async
  href: Fantasy.html
  name: Fantasy.Async
  nameWithType: Fantasy.Async
  fullName: Fantasy.Async
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Async
    name: Async
    href: Fantasy.Async.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Async
    name: Async
    href: Fantasy.Async.html
- uid: Fantasy.Assembly.AssemblySystem.UnRegister*
  commentId: Overload:Fantasy.Assembly.AssemblySystem.UnRegister
  href: Fantasy.Assembly.AssemblySystem.html#Fantasy_Assembly_AssemblySystem_UnRegister_System_Object_
  name: UnRegister
  nameWithType: AssemblySystem.UnRegister
  fullName: Fantasy.Assembly.AssemblySystem.UnRegister
- uid: Fantasy.Assembly.AssemblySystem.ForEach*
  commentId: Overload:Fantasy.Assembly.AssemblySystem.ForEach
  href: Fantasy.Assembly.AssemblySystem.html#Fantasy_Assembly_AssemblySystem_ForEach
  name: ForEach
  nameWithType: AssemblySystem.ForEach
  fullName: Fantasy.Assembly.AssemblySystem.ForEach
- uid: System.Collections.Generic.IEnumerable{System.Type}
  commentId: T:System.Collections.Generic.IEnumerable{System.Type}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Type>
  nameWithType: IEnumerable<Type>
  fullName: System.Collections.Generic.IEnumerable<System.Type>
  nameWithType.vb: IEnumerable(Of Type)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Type)
  name.vb: IEnumerable(Of Type)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Fantasy.Assembly.AssemblySystem.GetAssembly*
  commentId: Overload:Fantasy.Assembly.AssemblySystem.GetAssembly
  href: Fantasy.Assembly.AssemblySystem.html#Fantasy_Assembly_AssemblySystem_GetAssembly_System_Int64_
  name: GetAssembly
  nameWithType: AssemblySystem.GetAssembly
  fullName: Fantasy.Assembly.AssemblySystem.GetAssembly
- uid: Fantasy.Assembly.AssemblySystem.ForEachAssembly*
  commentId: Overload:Fantasy.Assembly.AssemblySystem.ForEachAssembly
  href: Fantasy.Assembly.AssemblySystem.html#Fantasy_Assembly_AssemblySystem_ForEachAssembly
  name: ForEachAssembly
  nameWithType: AssemblySystem.ForEachAssembly
  fullName: Fantasy.Assembly.AssemblySystem.ForEachAssembly
- uid: System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  commentId: T:System.Collections.Generic.IEnumerable{System.Reflection.Assembly}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Assembly>
  nameWithType: IEnumerable<Assembly>
  fullName: System.Collections.Generic.IEnumerable<System.Reflection.Assembly>
  nameWithType.vb: IEnumerable(Of Assembly)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Reflection.Assembly)
  name.vb: IEnumerable(Of Assembly)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Reflection.Assembly
    name: Assembly
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.reflection.assembly
  - name: )
- uid: Fantasy.Assembly.AssemblySystem.Dispose*
  commentId: Overload:Fantasy.Assembly.AssemblySystem.Dispose
  href: Fantasy.Assembly.AssemblySystem.html#Fantasy_Assembly_AssemblySystem_Dispose
  name: Dispose
  nameWithType: AssemblySystem.Dispose
  fullName: Fantasy.Assembly.AssemblySystem.Dispose
