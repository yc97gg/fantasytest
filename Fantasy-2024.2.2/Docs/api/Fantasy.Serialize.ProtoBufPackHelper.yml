### YamlMime:ManagedReference
items:
- uid: Fantasy.Serialize.ProtoBufPackHelper
  commentId: T:Fantasy.Serialize.ProtoBufPackHelper
  id: ProtoBufPackHelper
  parent: Fantasy.Serialize
  children:
  - Fantasy.Serialize.ProtoBufPackHelper.#ctor
  - Fantasy.Serialize.ProtoBufPackHelper.Clone``1(``0)
  - Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type,Fantasy.Serialize.MemoryStreamBuffer)
  - Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type,System.Byte[])
  - Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type,System.Byte[],System.Int32,System.Int32)
  - Fantasy.Serialize.ProtoBufPackHelper.Deserialize``1(Fantasy.Serialize.MemoryStreamBuffer)
  - Fantasy.Serialize.ProtoBufPackHelper.Deserialize``1(System.Byte[])
  - Fantasy.Serialize.ProtoBufPackHelper.Deserialize``1(System.Byte[],System.Int32,System.Int32)
  - Fantasy.Serialize.ProtoBufPackHelper.Serialize(System.Object,System.Buffers.IBufferWriter{System.Byte})
  - Fantasy.Serialize.ProtoBufPackHelper.Serialize(System.Type,System.Object,System.Buffers.IBufferWriter{System.Byte})
  - Fantasy.Serialize.ProtoBufPackHelper.SerializeName
  - Fantasy.Serialize.ProtoBufPackHelper.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
  langs:
  - csharp
  - vb
  name: ProtoBufPackHelper
  nameWithType: ProtoBufPackHelper
  fullName: Fantasy.Serialize.ProtoBufPackHelper
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ProtoBufPackHelper
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 10
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: ProtoBufP帮助类，Net平台使用
  example: []
  syntax:
    content: 'public sealed class ProtoBufPackHelper : ISerialize'
    content.vb: Public NotInheritable Class ProtoBufPackHelper Implements ISerialize
  inheritance:
  - System.Object
  implements:
  - Fantasy.Serialize.ISerialize
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Fantasy.Serialize.ProtoBufPackHelper.Fantasy.Helper.JsonHelper.ToJson``1
- uid: Fantasy.Serialize.ProtoBufPackHelper.SerializeName
  commentId: P:Fantasy.Serialize.ProtoBufPackHelper.SerializeName
  id: SerializeName
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: SerializeName
  nameWithType: ProtoBufPackHelper.SerializeName
  fullName: Fantasy.Serialize.ProtoBufPackHelper.SerializeName
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: SerializeName
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 15
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 序列化器的名字
  example: []
  syntax:
    content: public string SerializeName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property SerializeName As String
  overload: Fantasy.Serialize.ProtoBufPackHelper.SerializeName*
  implements:
  - Fantasy.Serialize.ISerialize.SerializeName
- uid: Fantasy.Serialize.ProtoBufPackHelper.#ctor
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.#ctor
  id: '#ctor'
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: ProtoBufPackHelper()
  nameWithType: ProtoBufPackHelper.ProtoBufPackHelper()
  fullName: Fantasy.Serialize.ProtoBufPackHelper.ProtoBufPackHelper()
  type: Constructor
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: .ctor
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 20
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 构造函数
  example: []
  syntax:
    content: public ProtoBufPackHelper()
    content.vb: Public Sub New()
  overload: Fantasy.Serialize.ProtoBufPackHelper.#ctor*
  nameWithType.vb: ProtoBufPackHelper.New()
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.New()
  name.vb: New()
- uid: Fantasy.Serialize.ProtoBufPackHelper.Deserialize``1(System.Byte[])
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.Deserialize``1(System.Byte[])
  id: Deserialize``1(System.Byte[])
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: Deserialize<T>(byte[])
  nameWithType: ProtoBufPackHelper.Deserialize<T>(byte[])
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Deserialize<T>(byte[])
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Deserialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 45
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 使用ProtoBuf反序列化数据到实例
  example: []
  syntax:
    content: public T Deserialize<T>(byte[] bytes)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function Deserialize(Of T)(bytes As Byte()) As T
  overload: Fantasy.Serialize.ProtoBufPackHelper.Deserialize*
  implements:
  - Fantasy.Serialize.ISerialize.Deserialize``1(System.Byte[])
  nameWithType.vb: ProtoBufPackHelper.Deserialize(Of T)(Byte())
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(Of T)(Byte())
  name.vb: Deserialize(Of T)(Byte())
- uid: Fantasy.Serialize.ProtoBufPackHelper.Deserialize``1(Fantasy.Serialize.MemoryStreamBuffer)
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.Deserialize``1(Fantasy.Serialize.MemoryStreamBuffer)
  id: Deserialize``1(Fantasy.Serialize.MemoryStreamBuffer)
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: Deserialize<T>(MemoryStreamBuffer)
  nameWithType: ProtoBufPackHelper.Deserialize<T>(MemoryStreamBuffer)
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Deserialize<T>(Fantasy.Serialize.MemoryStreamBuffer)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Deserialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 61
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 使用ProtoBuf反序列化数据到实例
  example: []
  syntax:
    content: public T Deserialize<T>(MemoryStreamBuffer buffer)
    parameters:
    - id: buffer
      type: Fantasy.Serialize.MemoryStreamBuffer
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function Deserialize(Of T)(buffer As MemoryStreamBuffer) As T
  overload: Fantasy.Serialize.ProtoBufPackHelper.Deserialize*
  implements:
  - Fantasy.Serialize.ISerialize.Deserialize``1(Fantasy.Serialize.MemoryStreamBuffer)
  nameWithType.vb: ProtoBufPackHelper.Deserialize(Of T)(MemoryStreamBuffer)
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(Of T)(Fantasy.Serialize.MemoryStreamBuffer)
  name.vb: Deserialize(Of T)(MemoryStreamBuffer)
- uid: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type,System.Byte[])
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type,System.Byte[])
  id: Deserialize(System.Type,System.Byte[])
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: Deserialize(Type, byte[])
  nameWithType: ProtoBufPackHelper.Deserialize(Type, byte[])
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type, byte[])
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Deserialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 77
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 使用ProtoBuf反序列化数据到实例
  example: []
  syntax:
    content: public object Deserialize(Type type, byte[] bytes)
    parameters:
    - id: type
      type: System.Type
      description: ''
    - id: bytes
      type: System.Byte[]
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Function Deserialize(type As Type, bytes As Byte()) As Object
  overload: Fantasy.Serialize.ProtoBufPackHelper.Deserialize*
  implements:
  - Fantasy.Serialize.ISerialize.Deserialize(System.Type,System.Byte[])
  nameWithType.vb: ProtoBufPackHelper.Deserialize(Type, Byte())
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type, Byte())
  name.vb: Deserialize(Type, Byte())
- uid: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type,Fantasy.Serialize.MemoryStreamBuffer)
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type,Fantasy.Serialize.MemoryStreamBuffer)
  id: Deserialize(System.Type,Fantasy.Serialize.MemoryStreamBuffer)
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: Deserialize(Type, MemoryStreamBuffer)
  nameWithType: ProtoBufPackHelper.Deserialize(Type, MemoryStreamBuffer)
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type, Fantasy.Serialize.MemoryStreamBuffer)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Deserialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 94
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 使用ProtoBuf反序列化数据到实例
  example: []
  syntax:
    content: public object Deserialize(Type type, MemoryStreamBuffer buffer)
    parameters:
    - id: type
      type: System.Type
      description: ''
    - id: buffer
      type: Fantasy.Serialize.MemoryStreamBuffer
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Function Deserialize(type As Type, buffer As MemoryStreamBuffer) As Object
  overload: Fantasy.Serialize.ProtoBufPackHelper.Deserialize*
  implements:
  - Fantasy.Serialize.ISerialize.Deserialize(System.Type,Fantasy.Serialize.MemoryStreamBuffer)
- uid: Fantasy.Serialize.ProtoBufPackHelper.Deserialize``1(System.Byte[],System.Int32,System.Int32)
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.Deserialize``1(System.Byte[],System.Int32,System.Int32)
  id: Deserialize``1(System.Byte[],System.Int32,System.Int32)
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: Deserialize<T>(byte[], int, int)
  nameWithType: ProtoBufPackHelper.Deserialize<T>(byte[], int, int)
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Deserialize<T>(byte[], int, int)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Deserialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 112
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 使用ProtoBuf反序列化数据到实例
  example: []
  syntax:
    content: public T Deserialize<T>(byte[] bytes, int index, int count)
    parameters:
    - id: bytes
      type: System.Byte[]
      description: ''
    - id: index
      type: System.Int32
      description: ''
    - id: count
      type: System.Int32
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function Deserialize(Of T)(bytes As Byte(), index As Integer, count As Integer) As T
  overload: Fantasy.Serialize.ProtoBufPackHelper.Deserialize*
  implements:
  - Fantasy.Serialize.ISerialize.Deserialize``1(System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: ProtoBufPackHelper.Deserialize(Of T)(Byte(), Integer, Integer)
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(Of T)(Byte(), Integer, Integer)
  name.vb: Deserialize(Of T)(Byte(), Integer, Integer)
- uid: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type,System.Byte[],System.Int32,System.Int32)
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type,System.Byte[],System.Int32,System.Int32)
  id: Deserialize(System.Type,System.Byte[],System.Int32,System.Int32)
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: Deserialize(Type, byte[], int, int)
  nameWithType: ProtoBufPackHelper.Deserialize(Type, byte[], int, int)
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type, byte[], int, int)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Deserialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 131
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 使用ProtoBuf反序列化数据到实例
  example: []
  syntax:
    content: public object Deserialize(Type type, byte[] bytes, int index, int count)
    parameters:
    - id: type
      type: System.Type
      description: ''
    - id: bytes
      type: System.Byte[]
      description: ''
    - id: index
      type: System.Int32
      description: ''
    - id: count
      type: System.Int32
      description: ''
    return:
      type: System.Object
      description: ''
    content.vb: Public Function Deserialize(type As Type, bytes As Byte(), index As Integer, count As Integer) As Object
  overload: Fantasy.Serialize.ProtoBufPackHelper.Deserialize*
  implements:
  - Fantasy.Serialize.ISerialize.Deserialize(System.Type,System.Byte[],System.Int32,System.Int32)
  nameWithType.vb: ProtoBufPackHelper.Deserialize(Type, Byte(), Integer, Integer)
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.Deserialize(System.Type, Byte(), Integer, Integer)
  name.vb: Deserialize(Type, Byte(), Integer, Integer)
- uid: Fantasy.Serialize.ProtoBufPackHelper.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
  id: Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: Serialize<T>(T, IBufferWriter<byte>)
  nameWithType: ProtoBufPackHelper.Serialize<T>(T, IBufferWriter<byte>)
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Serialize<T>(T, System.Buffers.IBufferWriter<byte>)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Serialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 148
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 使用ProtoBuf序列化某一个实例到IBufferWriter中
  example: []
  syntax:
    content: public void Serialize<T>(T @object, IBufferWriter<byte> buffer)
    parameters:
    - id: object
      type: '{T}'
      description: ''
    - id: buffer
      type: System.Buffers.IBufferWriter{System.Byte}
      description: ''
    typeParameters:
    - id: T
      description: ''
    content.vb: Public Sub Serialize(Of T)([object] As T, buffer As IBufferWriter(Of Byte))
  overload: Fantasy.Serialize.ProtoBufPackHelper.Serialize*
  implements:
  - Fantasy.Serialize.ISerialize.Serialize``1({T},System.Buffers.IBufferWriter{System.Byte})
  nameWithType.vb: ProtoBufPackHelper.Serialize(Of T)(T, IBufferWriter(Of Byte))
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.Serialize(Of T)(T, System.Buffers.IBufferWriter(Of Byte))
  name.vb: Serialize(Of T)(T, IBufferWriter(Of Byte))
- uid: Fantasy.Serialize.ProtoBufPackHelper.Serialize(System.Object,System.Buffers.IBufferWriter{System.Byte})
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.Serialize(System.Object,System.Buffers.IBufferWriter{System.Byte})
  id: Serialize(System.Object,System.Buffers.IBufferWriter{System.Byte})
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: Serialize(object, IBufferWriter<byte>)
  nameWithType: ProtoBufPackHelper.Serialize(object, IBufferWriter<byte>)
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Serialize(object, System.Buffers.IBufferWriter<byte>)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Serialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 162
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 使用ProtoBuf序列化某一个实例到IBufferWriter中
  example: []
  syntax:
    content: public void Serialize(object @object, IBufferWriter<byte> buffer)
    parameters:
    - id: object
      type: System.Object
      description: ''
    - id: buffer
      type: System.Buffers.IBufferWriter{System.Byte}
      description: ''
    content.vb: Public Sub Serialize([object] As Object, buffer As IBufferWriter(Of Byte))
  overload: Fantasy.Serialize.ProtoBufPackHelper.Serialize*
  implements:
  - Fantasy.Serialize.ISerialize.Serialize(System.Object,System.Buffers.IBufferWriter{System.Byte})
  nameWithType.vb: ProtoBufPackHelper.Serialize(Object, IBufferWriter(Of Byte))
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.Serialize(Object, System.Buffers.IBufferWriter(Of Byte))
  name.vb: Serialize(Object, IBufferWriter(Of Byte))
- uid: Fantasy.Serialize.ProtoBufPackHelper.Serialize(System.Type,System.Object,System.Buffers.IBufferWriter{System.Byte})
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.Serialize(System.Type,System.Object,System.Buffers.IBufferWriter{System.Byte})
  id: Serialize(System.Type,System.Object,System.Buffers.IBufferWriter{System.Byte})
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: Serialize(Type, object, IBufferWriter<byte>)
  nameWithType: ProtoBufPackHelper.Serialize(Type, object, IBufferWriter<byte>)
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Serialize(System.Type, object, System.Buffers.IBufferWriter<byte>)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Serialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 177
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 使用ProtoBuf序列化某一个实例到IBufferWriter中
  example: []
  syntax:
    content: public void Serialize(Type type, object @object, IBufferWriter<byte> buffer)
    parameters:
    - id: type
      type: System.Type
      description: ''
    - id: object
      type: System.Object
      description: ''
    - id: buffer
      type: System.Buffers.IBufferWriter{System.Byte}
      description: ''
    content.vb: Public Sub Serialize(type As Type, [object] As Object, buffer As IBufferWriter(Of Byte))
  overload: Fantasy.Serialize.ProtoBufPackHelper.Serialize*
  implements:
  - Fantasy.Serialize.ISerialize.Serialize(System.Type,System.Object,System.Buffers.IBufferWriter{System.Byte})
  nameWithType.vb: ProtoBufPackHelper.Serialize(Type, Object, IBufferWriter(Of Byte))
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.Serialize(System.Type, Object, System.Buffers.IBufferWriter(Of Byte))
  name.vb: Serialize(Type, Object, IBufferWriter(Of Byte))
- uid: Fantasy.Serialize.ProtoBufPackHelper.Clone``1(``0)
  commentId: M:Fantasy.Serialize.ProtoBufPackHelper.Clone``1(``0)
  id: Clone``1(``0)
  parent: Fantasy.Serialize.ProtoBufPackHelper
  langs:
  - csharp
  - vb
  name: Clone<T>(T)
  nameWithType: ProtoBufPackHelper.Clone<T>(T)
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Clone<T>(T)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Clone
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Serialize/ProtoBufPackHelper/ProtoBufPackHelperNet.cs
    startLine: 214
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Serialize
  summary: 克隆
  example: []
  syntax:
    content: public T Clone<T>(T t)
    parameters:
    - id: t
      type: '{T}'
      description: ''
    typeParameters:
    - id: T
      description: ''
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function Clone(Of T)(t As T) As T
  overload: Fantasy.Serialize.ProtoBufPackHelper.Clone*
  implements:
  - Fantasy.Serialize.ISerialize.Clone``1({T})
  nameWithType.vb: ProtoBufPackHelper.Clone(Of T)(T)
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.Clone(Of T)(T)
  name.vb: Clone(Of T)(T)
references:
- uid: Fantasy.Serialize
  commentId: N:Fantasy.Serialize
  href: Fantasy.html
  name: Fantasy.Serialize
  nameWithType: Fantasy.Serialize
  fullName: Fantasy.Serialize
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Serialize
    name: Serialize
    href: Fantasy.Serialize.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Serialize
    name: Serialize
    href: Fantasy.Serialize.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Fantasy.Serialize.ISerialize
  commentId: T:Fantasy.Serialize.ISerialize
  parent: Fantasy.Serialize
  href: Fantasy.Serialize.ISerialize.html
  name: ISerialize
  nameWithType: ISerialize
  fullName: Fantasy.Serialize.ISerialize
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Fantasy.Serialize.ProtoBufPackHelper.Fantasy.Helper.JsonHelper.ToJson``1
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  parent: Fantasy.Helper.JsonHelper
  definition: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<ProtoBufPackHelper>(ProtoBufPackHelper)
  nameWithType: JsonHelper.ToJson<ProtoBufPackHelper>(ProtoBufPackHelper)
  fullName: Fantasy.Helper.JsonHelper.ToJson<Fantasy.Serialize.ProtoBufPackHelper>(Fantasy.Serialize.ProtoBufPackHelper)
  nameWithType.vb: JsonHelper.ToJson(Of ProtoBufPackHelper)(ProtoBufPackHelper)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of Fantasy.Serialize.ProtoBufPackHelper)(Fantasy.Serialize.ProtoBufPackHelper)
  name.vb: ToJson(Of ProtoBufPackHelper)(ProtoBufPackHelper)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.Serialize.ProtoBufPackHelper)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - uid: Fantasy.Serialize.ProtoBufPackHelper
    name: ProtoBufPackHelper
    href: Fantasy.Serialize.ProtoBufPackHelper.html
  - name: '>'
  - name: (
  - uid: Fantasy.Serialize.ProtoBufPackHelper
    name: ProtoBufPackHelper
    href: Fantasy.Serialize.ProtoBufPackHelper.html
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.Serialize.ProtoBufPackHelper)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.Serialize.ProtoBufPackHelper
    name: ProtoBufPackHelper
    href: Fantasy.Serialize.ProtoBufPackHelper.html
  - name: )
  - name: (
  - uid: Fantasy.Serialize.ProtoBufPackHelper
    name: ProtoBufPackHelper
    href: Fantasy.Serialize.ProtoBufPackHelper.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<T>(T)
  nameWithType: JsonHelper.ToJson<T>(T)
  fullName: Fantasy.Helper.JsonHelper.ToJson<T>(T)
  nameWithType.vb: JsonHelper.ToJson(Of T)(T)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of T)(T)
  name.vb: ToJson(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Fantasy.Helper.JsonHelper
  commentId: T:Fantasy.Helper.JsonHelper
  parent: Fantasy.Helper
  href: Fantasy.Helper.JsonHelper.html
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: Fantasy.Helper.JsonHelper
- uid: Fantasy.Helper
  commentId: N:Fantasy.Helper
  href: Fantasy.html
  name: Fantasy.Helper
  nameWithType: Fantasy.Helper
  fullName: Fantasy.Helper
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
- uid: Fantasy.Serialize.ProtoBufPackHelper.SerializeName*
  commentId: Overload:Fantasy.Serialize.ProtoBufPackHelper.SerializeName
  href: Fantasy.Serialize.ProtoBufPackHelper.html#Fantasy_Serialize_ProtoBufPackHelper_SerializeName
  name: SerializeName
  nameWithType: ProtoBufPackHelper.SerializeName
  fullName: Fantasy.Serialize.ProtoBufPackHelper.SerializeName
- uid: Fantasy.Serialize.ISerialize.SerializeName
  commentId: P:Fantasy.Serialize.ISerialize.SerializeName
  parent: Fantasy.Serialize.ISerialize
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_SerializeName
  name: SerializeName
  nameWithType: ISerialize.SerializeName
  fullName: Fantasy.Serialize.ISerialize.SerializeName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Fantasy.Serialize.ProtoBufPackHelper.#ctor*
  commentId: Overload:Fantasy.Serialize.ProtoBufPackHelper.#ctor
  href: Fantasy.Serialize.ProtoBufPackHelper.html#Fantasy_Serialize_ProtoBufPackHelper__ctor
  name: ProtoBufPackHelper
  nameWithType: ProtoBufPackHelper.ProtoBufPackHelper
  fullName: Fantasy.Serialize.ProtoBufPackHelper.ProtoBufPackHelper
  nameWithType.vb: ProtoBufPackHelper.New
  fullName.vb: Fantasy.Serialize.ProtoBufPackHelper.New
  name.vb: New
- uid: Fantasy.Serialize.ProtoBufPackHelper.Deserialize*
  commentId: Overload:Fantasy.Serialize.ProtoBufPackHelper.Deserialize
  href: Fantasy.Serialize.ProtoBufPackHelper.html#Fantasy_Serialize_ProtoBufPackHelper_Deserialize__1_System_Byte___
  name: Deserialize
  nameWithType: ProtoBufPackHelper.Deserialize
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Deserialize
- uid: Fantasy.Serialize.ISerialize.Deserialize``1(System.Byte[])
  commentId: M:Fantasy.Serialize.ISerialize.Deserialize``1(System.Byte[])
  parent: Fantasy.Serialize.ISerialize
  isExternal: true
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize__1_System_Byte___
  name: Deserialize<T>(byte[])
  nameWithType: ISerialize.Deserialize<T>(byte[])
  fullName: Fantasy.Serialize.ISerialize.Deserialize<T>(byte[])
  nameWithType.vb: ISerialize.Deserialize(Of T)(Byte())
  fullName.vb: Fantasy.Serialize.ISerialize.Deserialize(Of T)(Byte())
  name.vb: Deserialize(Of T)(Byte())
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Deserialize``1(System.Byte[])
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize__1_System_Byte___
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Deserialize``1(System.Byte[])
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize__1_System_Byte___
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Fantasy.Serialize.ISerialize.Deserialize``1(Fantasy.Serialize.MemoryStreamBuffer)
  commentId: M:Fantasy.Serialize.ISerialize.Deserialize``1(Fantasy.Serialize.MemoryStreamBuffer)
  parent: Fantasy.Serialize.ISerialize
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize__1_Fantasy_Serialize_MemoryStreamBuffer_
  name: Deserialize<T>(MemoryStreamBuffer)
  nameWithType: ISerialize.Deserialize<T>(MemoryStreamBuffer)
  fullName: Fantasy.Serialize.ISerialize.Deserialize<T>(Fantasy.Serialize.MemoryStreamBuffer)
  nameWithType.vb: ISerialize.Deserialize(Of T)(MemoryStreamBuffer)
  fullName.vb: Fantasy.Serialize.ISerialize.Deserialize(Of T)(Fantasy.Serialize.MemoryStreamBuffer)
  name.vb: Deserialize(Of T)(MemoryStreamBuffer)
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Deserialize``1(Fantasy.Serialize.MemoryStreamBuffer)
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize__1_Fantasy_Serialize_MemoryStreamBuffer_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: Fantasy.Serialize.MemoryStreamBuffer
    name: MemoryStreamBuffer
    href: Fantasy.Serialize.MemoryStreamBuffer.html
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Deserialize``1(Fantasy.Serialize.MemoryStreamBuffer)
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize__1_Fantasy_Serialize_MemoryStreamBuffer_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: Fantasy.Serialize.MemoryStreamBuffer
    name: MemoryStreamBuffer
    href: Fantasy.Serialize.MemoryStreamBuffer.html
  - name: )
- uid: Fantasy.Serialize.MemoryStreamBuffer
  commentId: T:Fantasy.Serialize.MemoryStreamBuffer
  parent: Fantasy.Serialize
  href: Fantasy.Serialize.MemoryStreamBuffer.html
  name: MemoryStreamBuffer
  nameWithType: MemoryStreamBuffer
  fullName: Fantasy.Serialize.MemoryStreamBuffer
- uid: Fantasy.Serialize.ISerialize.Deserialize(System.Type,System.Byte[])
  commentId: M:Fantasy.Serialize.ISerialize.Deserialize(System.Type,System.Byte[])
  parent: Fantasy.Serialize.ISerialize
  isExternal: true
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize_System_Type_System_Byte___
  name: Deserialize(Type, byte[])
  nameWithType: ISerialize.Deserialize(Type, byte[])
  fullName: Fantasy.Serialize.ISerialize.Deserialize(System.Type, byte[])
  nameWithType.vb: ISerialize.Deserialize(Type, Byte())
  fullName.vb: Fantasy.Serialize.ISerialize.Deserialize(System.Type, Byte())
  name.vb: Deserialize(Type, Byte())
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Deserialize(System.Type,System.Byte[])
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize_System_Type_System_Byte___
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Deserialize(System.Type,System.Byte[])
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize_System_Type_System_Byte___
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Fantasy.Serialize.ISerialize.Deserialize(System.Type,Fantasy.Serialize.MemoryStreamBuffer)
  commentId: M:Fantasy.Serialize.ISerialize.Deserialize(System.Type,Fantasy.Serialize.MemoryStreamBuffer)
  parent: Fantasy.Serialize.ISerialize
  isExternal: true
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize_System_Type_Fantasy_Serialize_MemoryStreamBuffer_
  name: Deserialize(Type, MemoryStreamBuffer)
  nameWithType: ISerialize.Deserialize(Type, MemoryStreamBuffer)
  fullName: Fantasy.Serialize.ISerialize.Deserialize(System.Type, Fantasy.Serialize.MemoryStreamBuffer)
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Deserialize(System.Type,Fantasy.Serialize.MemoryStreamBuffer)
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize_System_Type_Fantasy_Serialize_MemoryStreamBuffer_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: Fantasy.Serialize.MemoryStreamBuffer
    name: MemoryStreamBuffer
    href: Fantasy.Serialize.MemoryStreamBuffer.html
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Deserialize(System.Type,Fantasy.Serialize.MemoryStreamBuffer)
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize_System_Type_Fantasy_Serialize_MemoryStreamBuffer_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: Fantasy.Serialize.MemoryStreamBuffer
    name: MemoryStreamBuffer
    href: Fantasy.Serialize.MemoryStreamBuffer.html
  - name: )
- uid: Fantasy.Serialize.ISerialize.Deserialize``1(System.Byte[],System.Int32,System.Int32)
  commentId: M:Fantasy.Serialize.ISerialize.Deserialize``1(System.Byte[],System.Int32,System.Int32)
  parent: Fantasy.Serialize.ISerialize
  isExternal: true
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize__1_System_Byte___System_Int32_System_Int32_
  name: Deserialize<T>(byte[], int, int)
  nameWithType: ISerialize.Deserialize<T>(byte[], int, int)
  fullName: Fantasy.Serialize.ISerialize.Deserialize<T>(byte[], int, int)
  nameWithType.vb: ISerialize.Deserialize(Of T)(Byte(), Integer, Integer)
  fullName.vb: Fantasy.Serialize.ISerialize.Deserialize(Of T)(Byte(), Integer, Integer)
  name.vb: Deserialize(Of T)(Byte(), Integer, Integer)
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Deserialize``1(System.Byte[],System.Int32,System.Int32)
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize__1_System_Byte___System_Int32_System_Int32_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Deserialize``1(System.Byte[],System.Int32,System.Int32)
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize__1_System_Byte___System_Int32_System_Int32_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Fantasy.Serialize.ISerialize.Deserialize(System.Type,System.Byte[],System.Int32,System.Int32)
  commentId: M:Fantasy.Serialize.ISerialize.Deserialize(System.Type,System.Byte[],System.Int32,System.Int32)
  parent: Fantasy.Serialize.ISerialize
  isExternal: true
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize_System_Type_System_Byte___System_Int32_System_Int32_
  name: Deserialize(Type, byte[], int, int)
  nameWithType: ISerialize.Deserialize(Type, byte[], int, int)
  fullName: Fantasy.Serialize.ISerialize.Deserialize(System.Type, byte[], int, int)
  nameWithType.vb: ISerialize.Deserialize(Type, Byte(), Integer, Integer)
  fullName.vb: Fantasy.Serialize.ISerialize.Deserialize(System.Type, Byte(), Integer, Integer)
  name.vb: Deserialize(Type, Byte(), Integer, Integer)
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Deserialize(System.Type,System.Byte[],System.Int32,System.Int32)
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize_System_Type_System_Byte___System_Int32_System_Int32_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Deserialize(System.Type,System.Byte[],System.Int32,System.Int32)
    name: Deserialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Deserialize_System_Type_System_Byte___System_Int32_System_Int32_
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: Fantasy.Serialize.ProtoBufPackHelper.Serialize*
  commentId: Overload:Fantasy.Serialize.ProtoBufPackHelper.Serialize
  href: Fantasy.Serialize.ProtoBufPackHelper.html#Fantasy_Serialize_ProtoBufPackHelper_Serialize__1___0_System_Buffers_IBufferWriter_System_Byte__
  name: Serialize
  nameWithType: ProtoBufPackHelper.Serialize
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Serialize
- uid: Fantasy.Serialize.ISerialize.Serialize``1({T},System.Buffers.IBufferWriter{System.Byte})
  commentId: M:Fantasy.Serialize.ISerialize.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
  parent: Fantasy.Serialize.ISerialize
  definition: Fantasy.Serialize.ISerialize.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize__1___0_System_Buffers_IBufferWriter_System_Byte__
  name: Serialize<T>(T, IBufferWriter<byte>)
  nameWithType: ISerialize.Serialize<T>(T, IBufferWriter<byte>)
  fullName: Fantasy.Serialize.ISerialize.Serialize<T>(T, System.Buffers.IBufferWriter<byte>)
  nameWithType.vb: ISerialize.Serialize(Of T)(T, IBufferWriter(Of Byte))
  fullName.vb: Fantasy.Serialize.ISerialize.Serialize(Of T)(T, System.Buffers.IBufferWriter(Of Byte))
  name.vb: Serialize(Of T)(T, IBufferWriter(Of Byte))
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
    name: Serialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize__1___0_System_Buffers_IBufferWriter_System_Byte__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
    name: Serialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize__1___0_System_Buffers_IBufferWriter_System_Byte__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.Buffers.IBufferWriter{System.Byte}
  commentId: T:System.Buffers.IBufferWriter{System.Byte}
  parent: System.Buffers
  definition: System.Buffers.IBufferWriter`1
  href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  name: IBufferWriter<byte>
  nameWithType: IBufferWriter<byte>
  fullName: System.Buffers.IBufferWriter<byte>
  nameWithType.vb: IBufferWriter(Of Byte)
  fullName.vb: System.Buffers.IBufferWriter(Of Byte)
  name.vb: IBufferWriter(Of Byte)
  spec.csharp:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  spec.vb:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: Fantasy.Serialize.ISerialize.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
  commentId: M:Fantasy.Serialize.ISerialize.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
  isExternal: true
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize__1___0_System_Buffers_IBufferWriter_System_Byte__
  name: Serialize<T>(T, IBufferWriter<byte>)
  nameWithType: ISerialize.Serialize<T>(T, IBufferWriter<byte>)
  fullName: Fantasy.Serialize.ISerialize.Serialize<T>(T, System.Buffers.IBufferWriter<byte>)
  nameWithType.vb: ISerialize.Serialize(Of T)(T, IBufferWriter(Of Byte))
  fullName.vb: Fantasy.Serialize.ISerialize.Serialize(Of T)(T, System.Buffers.IBufferWriter(Of Byte))
  name.vb: Serialize(Of T)(T, IBufferWriter(Of Byte))
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
    name: Serialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize__1___0_System_Buffers_IBufferWriter_System_Byte__
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Serialize``1(``0,System.Buffers.IBufferWriter{System.Byte})
    name: Serialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize__1___0_System_Buffers_IBufferWriter_System_Byte__
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.Buffers.IBufferWriter`1
  commentId: T:System.Buffers.IBufferWriter`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  name: IBufferWriter<T>
  nameWithType: IBufferWriter<T>
  fullName: System.Buffers.IBufferWriter<T>
  nameWithType.vb: IBufferWriter(Of T)
  fullName.vb: System.Buffers.IBufferWriter(Of T)
  name.vb: IBufferWriter(Of T)
  spec.csharp:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Buffers
  commentId: N:System.Buffers
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Buffers
  nameWithType: System.Buffers
  fullName: System.Buffers
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Buffers
    name: Buffers
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers
- uid: Fantasy.Serialize.ISerialize.Serialize(System.Object,System.Buffers.IBufferWriter{System.Byte})
  commentId: M:Fantasy.Serialize.ISerialize.Serialize(System.Object,System.Buffers.IBufferWriter{System.Byte})
  parent: Fantasy.Serialize.ISerialize
  isExternal: true
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize_System_Object_System_Buffers_IBufferWriter_System_Byte__
  name: Serialize(object, IBufferWriter<byte>)
  nameWithType: ISerialize.Serialize(object, IBufferWriter<byte>)
  fullName: Fantasy.Serialize.ISerialize.Serialize(object, System.Buffers.IBufferWriter<byte>)
  nameWithType.vb: ISerialize.Serialize(Object, IBufferWriter(Of Byte))
  fullName.vb: Fantasy.Serialize.ISerialize.Serialize(Object, System.Buffers.IBufferWriter(Of Byte))
  name.vb: Serialize(Object, IBufferWriter(Of Byte))
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Serialize(System.Object,System.Buffers.IBufferWriter{System.Byte})
    name: Serialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize_System_Object_System_Buffers_IBufferWriter_System_Byte__
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Serialize(System.Object,System.Buffers.IBufferWriter{System.Byte})
    name: Serialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize_System_Object_System_Buffers_IBufferWriter_System_Byte__
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: Fantasy.Serialize.ISerialize.Serialize(System.Type,System.Object,System.Buffers.IBufferWriter{System.Byte})
  commentId: M:Fantasy.Serialize.ISerialize.Serialize(System.Type,System.Object,System.Buffers.IBufferWriter{System.Byte})
  parent: Fantasy.Serialize.ISerialize
  isExternal: true
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize_System_Type_System_Object_System_Buffers_IBufferWriter_System_Byte__
  name: Serialize(Type, object, IBufferWriter<byte>)
  nameWithType: ISerialize.Serialize(Type, object, IBufferWriter<byte>)
  fullName: Fantasy.Serialize.ISerialize.Serialize(System.Type, object, System.Buffers.IBufferWriter<byte>)
  nameWithType.vb: ISerialize.Serialize(Type, Object, IBufferWriter(Of Byte))
  fullName.vb: Fantasy.Serialize.ISerialize.Serialize(System.Type, Object, System.Buffers.IBufferWriter(Of Byte))
  name.vb: Serialize(Type, Object, IBufferWriter(Of Byte))
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Serialize(System.Type,System.Object,System.Buffers.IBufferWriter{System.Byte})
    name: Serialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize_System_Type_System_Object_System_Buffers_IBufferWriter_System_Byte__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Serialize(System.Type,System.Object,System.Buffers.IBufferWriter{System.Byte})
    name: Serialize
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Serialize_System_Type_System_Object_System_Buffers_IBufferWriter_System_Byte__
  - name: (
  - uid: System.Type
    name: Type
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.type
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Buffers.IBufferWriter`1
    name: IBufferWriter
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.buffers.ibufferwriter-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: Fantasy.Serialize.ProtoBufPackHelper.Clone*
  commentId: Overload:Fantasy.Serialize.ProtoBufPackHelper.Clone
  href: Fantasy.Serialize.ProtoBufPackHelper.html#Fantasy_Serialize_ProtoBufPackHelper_Clone__1___0_
  name: Clone
  nameWithType: ProtoBufPackHelper.Clone
  fullName: Fantasy.Serialize.ProtoBufPackHelper.Clone
- uid: Fantasy.Serialize.ISerialize.Clone``1({T})
  commentId: M:Fantasy.Serialize.ISerialize.Clone``1(``0)
  parent: Fantasy.Serialize.ISerialize
  definition: Fantasy.Serialize.ISerialize.Clone``1(``0)
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Clone__1___0_
  name: Clone<T>(T)
  nameWithType: ISerialize.Clone<T>(T)
  fullName: Fantasy.Serialize.ISerialize.Clone<T>(T)
  nameWithType.vb: ISerialize.Clone(Of T)(T)
  fullName.vb: Fantasy.Serialize.ISerialize.Clone(Of T)(T)
  name.vb: Clone(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Clone``1(``0)
    name: Clone
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Clone__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Clone``1(``0)
    name: Clone
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Clone__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Fantasy.Serialize.ISerialize.Clone``1(``0)
  commentId: M:Fantasy.Serialize.ISerialize.Clone``1(``0)
  href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Clone__1___0_
  name: Clone<T>(T)
  nameWithType: ISerialize.Clone<T>(T)
  fullName: Fantasy.Serialize.ISerialize.Clone<T>(T)
  nameWithType.vb: ISerialize.Clone(Of T)(T)
  fullName.vb: Fantasy.Serialize.ISerialize.Clone(Of T)(T)
  name.vb: Clone(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Serialize.ISerialize.Clone``1(``0)
    name: Clone
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Clone__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Serialize.ISerialize.Clone``1(``0)
    name: Clone
    href: Fantasy.Serialize.ISerialize.html#Fantasy_Serialize_ISerialize_Clone__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
