### YamlMime:ManagedReference
items:
- uid: Fantasy.Entitas.Entity
  commentId: T:Fantasy.Entitas.Entity
  id: Entity
  parent: Fantasy.Entitas
  children:
  - Fantasy.Entitas.Entity.AddComponent(Fantasy.Entitas.Entity)
  - Fantasy.Entitas.Entity.AddComponent``1(System.Boolean)
  - Fantasy.Entitas.Entity.AddComponent``1(System.Int64,System.Boolean)
  - Fantasy.Entitas.Entity.AddComponent``1(``0)
  - Fantasy.Entitas.Entity.Create``1(Fantasy.Scene,System.Boolean,System.Boolean)
  - Fantasy.Entitas.Entity.Create``1(Fantasy.Scene,System.Int64,System.Boolean,System.Boolean)
  - Fantasy.Entitas.Entity.Deserialize(Fantasy.Scene,System.Boolean)
  - Fantasy.Entitas.Entity.Dispose
  - Fantasy.Entitas.Entity.ForEachEntity
  - Fantasy.Entitas.Entity.ForEachMultiEntity
  - Fantasy.Entitas.Entity.ForEachSingleCollection
  - Fantasy.Entitas.Entity.ForEachTransfer
  - Fantasy.Entitas.Entity.GetComponent(System.Type)
  - Fantasy.Entitas.Entity.GetComponent``1
  - Fantasy.Entitas.Entity.GetComponent``1(System.Int64)
  - Fantasy.Entitas.Entity.GetOrAddComponent``1(System.Boolean)
  - Fantasy.Entitas.Entity.GetParent``1
  - Fantasy.Entitas.Entity.Id
  - Fantasy.Entitas.Entity.IsDisposed
  - Fantasy.Entitas.Entity.IsPool
  - Fantasy.Entitas.Entity.Parent
  - Fantasy.Entitas.Entity.RemoveComponent(Fantasy.Entitas.Entity,System.Boolean)
  - Fantasy.Entitas.Entity.RemoveComponent``1(System.Boolean)
  - Fantasy.Entitas.Entity.RemoveComponent``1(System.Int64,System.Boolean)
  - Fantasy.Entitas.Entity.RemoveComponent``1(``0,System.Boolean)
  - Fantasy.Entitas.Entity.RunTimeId
  - Fantasy.Entitas.Entity.Scene
  - Fantasy.Entitas.Entity.SetIsPool(System.Boolean)
  - Fantasy.Entitas.Entity.Type
  langs:
  - csharp
  - vb
  name: Entity
  nameWithType: Entity
  fullName: Fantasy.Entitas.Entity
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Entity
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 31
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: Entity的抽象类，任何Entity必须继承这个接口才可以使用
  example: []
  syntax:
    content: 'public abstract class Entity : IEntity, IDisposable, IPool'
    content.vb: Public MustInherit Class Entity Implements IEntity, IDisposable, IPool
  inheritance:
  - System.Object
  derivedClasses:
  - Fantasy.Async.CoroutineLockComponent
  - Fantasy.Entitas.EntityComponent
  - Fantasy.Entitas.MessagePoolComponent
  - Fantasy.Event.EventComponent
  - Fantasy.Network.Interface.ANetwork
  - Fantasy.Network.Interface.MessageDispatcherComponent
  - Fantasy.Network.Route.AddressableManageComponent
  - Fantasy.Network.Route.AddressableMessageComponent
  - Fantasy.Network.Route.AddressableRouteComponent
  - Fantasy.Network.RouteComponent
  - Fantasy.Network.Session
  - Fantasy.Network.SessionIdleCheckerComponent
  - Fantasy.Scene
  - Fantasy.Scheduler.NetworkMessagingComponent
  - Fantasy.SingleCollection.SingleCollectionComponent
  - Fantasy.Timer.TimerComponent
  implements:
  - Fantasy.Entitas.IEntity
  - System.IDisposable
  - Fantasy.Pool.IPool
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Fantasy.Entitas.Entity.Fantasy.Helper.JsonHelper.ToJson``1
- uid: Fantasy.Entitas.Entity.Id
  commentId: P:Fantasy.Entitas.Entity.Id
  id: Id
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: Entity.Id
  fullName: Fantasy.Entitas.Entity.Id
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Id
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 46
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 实体的Id
  example: []
  syntax:
    content: >-
      [BsonId]

      [BsonElement]

      [BsonIgnoreIfDefault]

      [BsonDefaultValue(0)]

      public long Id { get; protected set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <BsonId>

      <BsonElement>

      <BsonIgnoreIfDefault>

      <BsonDefaultValue(0)>

      Public Property Id As Long
  overload: Fantasy.Entitas.Entity.Id*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIdAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIdAttribute.#ctor
    arguments: []
  - type: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonElementAttribute.#ctor
    arguments: []
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreIfDefaultAttribute.#ctor
    arguments: []
  - type: MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonDefaultValueAttribute.#ctor(System.Object)
    arguments:
    - type: System.Int64
      value: "0"
- uid: Fantasy.Entitas.Entity.RunTimeId
  commentId: P:Fantasy.Entitas.Entity.RunTimeId
  id: RunTimeId
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: RunTimeId
  nameWithType: Entity.RunTimeId
  fullName: Fantasy.Entitas.Entity.RunTimeId
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: RunTimeId
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 54
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 实体的RunTimeId，其他系统可以通过这个Id发送Route消息，这个Id也可以理解为RouteId
  example: []
  syntax:
    content: >-
      [BsonIgnore]

      [IgnoreDataMember]

      [ProtoIgnore]

      public long RunTimeId { get; protected set; }
    parameters: []
    return:
      type: System.Int64
    content.vb: >-
      <BsonIgnore>

      <IgnoreDataMember>

      <ProtoIgnore>

      Public Property RunTimeId As Long
  overload: Fantasy.Entitas.Entity.RunTimeId*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoIgnoreAttribute
    ctor: ProtoBuf.ProtoIgnoreAttribute.#ctor
    arguments: []
- uid: Fantasy.Entitas.Entity.IsDisposed
  commentId: P:Fantasy.Entitas.Entity.IsDisposed
  id: IsDisposed
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: IsDisposed
  nameWithType: Entity.IsDisposed
  fullName: Fantasy.Entitas.Entity.IsDisposed
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: IsDisposed
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 61
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 当前实体是否已经被销毁
  example: []
  syntax:
    content: >-
      [BsonIgnore]

      [JsonIgnore]

      [IgnoreDataMember]

      [ProtoIgnore]

      public bool IsDisposed { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <BsonIgnore>

      <JsonIgnore>

      <IgnoreDataMember>

      <ProtoIgnore>

      Public ReadOnly Property IsDisposed As Boolean
  overload: Fantasy.Entitas.Entity.IsDisposed*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoIgnoreAttribute
    ctor: ProtoBuf.ProtoIgnoreAttribute.#ctor
    arguments: []
- uid: Fantasy.Entitas.Entity.Scene
  commentId: P:Fantasy.Entitas.Entity.Scene
  id: Scene
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: Scene
  nameWithType: Entity.Scene
  fullName: Fantasy.Entitas.Entity.Scene
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Scene
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 69
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 当前实体所归属的Scene
  example: []
  syntax:
    content: >-
      [BsonIgnore]

      [JsonIgnore]

      [IgnoreDataMember]

      [ProtoIgnore]

      public Scene Scene { get; protected set; }
    parameters: []
    return:
      type: Fantasy.Scene
    content.vb: >-
      <BsonIgnore>

      <JsonIgnore>

      <IgnoreDataMember>

      <ProtoIgnore>

      Public Property Scene As Scene
  overload: Fantasy.Entitas.Entity.Scene*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoIgnoreAttribute
    ctor: ProtoBuf.ProtoIgnoreAttribute.#ctor
    arguments: []
- uid: Fantasy.Entitas.Entity.Parent
  commentId: P:Fantasy.Entitas.Entity.Parent
  id: Parent
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: Parent
  nameWithType: Entity.Parent
  fullName: Fantasy.Entitas.Entity.Parent
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Parent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 77
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 实体的父实体
  example: []
  syntax:
    content: >-
      [BsonIgnore]

      [JsonIgnore]

      [IgnoreDataMember]

      [ProtoIgnore]

      public Entity Parent { get; protected set; }
    parameters: []
    return:
      type: Fantasy.Entitas.Entity
    content.vb: >-
      <BsonIgnore>

      <JsonIgnore>

      <IgnoreDataMember>

      <ProtoIgnore>

      Public Property Parent As Entity
  overload: Fantasy.Entitas.Entity.Parent*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoIgnoreAttribute
    ctor: ProtoBuf.ProtoIgnoreAttribute.#ctor
    arguments: []
- uid: Fantasy.Entitas.Entity.Type
  commentId: P:Fantasy.Entitas.Entity.Type
  id: Type
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Entity.Type
  fullName: Fantasy.Entitas.Entity.Type
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Type
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 85
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 实体的真实Type
  example: []
  syntax:
    content: >-
      [BsonIgnore]

      [JsonIgnore]

      [IgnoreDataMember]

      [ProtoIgnore]

      public Type Type { get; protected set; }
    parameters: []
    return:
      type: System.Type
    content.vb: >-
      <BsonIgnore>

      <JsonIgnore>

      <IgnoreDataMember>

      <ProtoIgnore>

      Public Property Type As Type
  overload: Fantasy.Entitas.Entity.Type*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoIgnoreAttribute
    ctor: ProtoBuf.ProtoIgnoreAttribute.#ctor
    arguments: []
- uid: Fantasy.Entitas.Entity.GetParent``1
  commentId: M:Fantasy.Entitas.Entity.GetParent``1
  id: GetParent``1
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: GetParent<T>()
  nameWithType: Entity.GetParent<T>()
  fullName: Fantasy.Entitas.Entity.GetParent<T>()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetParent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 102
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 获得父Entity
  example: []
  syntax:
    content: 'public T GetParent<T>() where T : Entity, new()'
    typeParameters:
    - id: T
      description: 父实体的泛型类型
    return:
      type: '{T}'
      description: ''
    content.vb: Public Function GetParent(Of T As {Entity, New})() As T
  overload: Fantasy.Entitas.Entity.GetParent*
  nameWithType.vb: Entity.GetParent(Of T)()
  fullName.vb: Fantasy.Entitas.Entity.GetParent(Of T)()
  name.vb: GetParent(Of T)()
- uid: Fantasy.Entitas.Entity.Create``1(Fantasy.Scene,System.Boolean,System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.Create``1(Fantasy.Scene,System.Boolean,System.Boolean)
  id: Create``1(Fantasy.Scene,System.Boolean,System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: Create<T>(Scene, bool, bool)
  nameWithType: Entity.Create<T>(Scene, bool, bool)
  fullName: Fantasy.Entitas.Entity.Create<T>(Fantasy.Scene, bool, bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Create
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 119
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 创建一个实体
  example: []
  syntax:
    content: 'public static T Create<T>(Scene scene, bool isPool, bool isRunEvent) where T : Entity, new()'
    parameters:
    - id: scene
      type: Fantasy.Scene
      description: 所属的Scene
    - id: isPool
      type: System.Boolean
      description: 是否从对象池创建，如果选择的是，销毁的时候同样会进入对象池
    - id: isRunEvent
      type: System.Boolean
      description: 是否执行实体事件
    typeParameters:
    - id: T
      description: 要创建的实体泛型类型
    return:
      type: '{T}'
      description: ''
    content.vb: Public Shared Function Create(Of T As {Entity, New})(scene As Scene, isPool As Boolean, isRunEvent As Boolean) As T
  overload: Fantasy.Entitas.Entity.Create*
  nameWithType.vb: Entity.Create(Of T)(Scene, Boolean, Boolean)
  fullName.vb: Fantasy.Entitas.Entity.Create(Of T)(Fantasy.Scene, Boolean, Boolean)
  name.vb: Create(Of T)(Scene, Boolean, Boolean)
- uid: Fantasy.Entitas.Entity.Create``1(Fantasy.Scene,System.Int64,System.Boolean,System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.Create``1(Fantasy.Scene,System.Int64,System.Boolean,System.Boolean)
  id: Create``1(Fantasy.Scene,System.Int64,System.Boolean,System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: Create<T>(Scene, long, bool, bool)
  nameWithType: Entity.Create<T>(Scene, long, bool, bool)
  fullName: Fantasy.Entitas.Entity.Create<T>(Fantasy.Scene, long, bool, bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Create
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 147
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 创建一个实体
  example: []
  syntax:
    content: 'public static T Create<T>(Scene scene, long id, bool isPool, bool isRunEvent) where T : Entity, new()'
    parameters:
    - id: scene
      type: Fantasy.Scene
      description: 所属的Scene
    - id: id
      type: System.Int64
      description: 指定实体的Id
    - id: isPool
      type: System.Boolean
      description: 是否从对象池创建，如果选择的是，销毁的时候同样会进入对象池
    - id: isRunEvent
      type: System.Boolean
      description: 是否执行实体事件
    typeParameters:
    - id: T
      description: 要创建的实体泛型类型
    return:
      type: '{T}'
      description: ''
    content.vb: Public Shared Function Create(Of T As {Entity, New})(scene As Scene, id As Long, isPool As Boolean, isRunEvent As Boolean) As T
  overload: Fantasy.Entitas.Entity.Create*
  nameWithType.vb: Entity.Create(Of T)(Scene, Long, Boolean, Boolean)
  fullName.vb: Fantasy.Entitas.Entity.Create(Of T)(Fantasy.Scene, Long, Boolean, Boolean)
  name.vb: Create(Of T)(Scene, Long, Boolean, Boolean)
- uid: Fantasy.Entitas.Entity.AddComponent``1(System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.AddComponent``1(System.Boolean)
  id: AddComponent``1(System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: AddComponent<T>(bool)
  nameWithType: Entity.AddComponent<T>(bool)
  fullName: Fantasy.Entitas.Entity.AddComponent<T>(bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: AddComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 176
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 添加一个组件到当前实体上
  example: []
  syntax:
    content: 'public T AddComponent<T>(bool isPool = true) where T : Entity, new()'
    parameters:
    - id: isPool
      type: System.Boolean
      description: 是否从对象池里创建
    typeParameters:
    - id: T
      description: 要添加组件的泛型类型
    return:
      type: '{T}'
      description: 返回添加到实体上组件的实例
    content.vb: Public Function AddComponent(Of T As {Entity, New})(isPool As Boolean = True) As T
  overload: Fantasy.Entitas.Entity.AddComponent*
  nameWithType.vb: Entity.AddComponent(Of T)(Boolean)
  fullName.vb: Fantasy.Entitas.Entity.AddComponent(Of T)(Boolean)
  name.vb: AddComponent(Of T)(Boolean)
- uid: Fantasy.Entitas.Entity.AddComponent``1(System.Int64,System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.AddComponent``1(System.Int64,System.Boolean)
  id: AddComponent``1(System.Int64,System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: AddComponent<T>(long, bool)
  nameWithType: Entity.AddComponent<T>(long, bool)
  fullName: Fantasy.Entitas.Entity.AddComponent<T>(long, bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: AddComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 193
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 添加一个组件到当前实体上
  example: []
  syntax:
    content: 'public T AddComponent<T>(long id, bool isPool = true) where T : Entity, new()'
    parameters:
    - id: id
      type: System.Int64
      description: 要添加组件的Id
    - id: isPool
      type: System.Boolean
      description: 是否从对象池里创建
    typeParameters:
    - id: T
      description: 要添加组件的泛型类型
    return:
      type: '{T}'
      description: 返回添加到实体上组件的实例
    content.vb: Public Function AddComponent(Of T As {Entity, New})(id As Long, isPool As Boolean = True) As T
  overload: Fantasy.Entitas.Entity.AddComponent*
  nameWithType.vb: Entity.AddComponent(Of T)(Long, Boolean)
  fullName.vb: Fantasy.Entitas.Entity.AddComponent(Of T)(Long, Boolean)
  name.vb: AddComponent(Of T)(Long, Boolean)
- uid: Fantasy.Entitas.Entity.AddComponent(Fantasy.Entitas.Entity)
  commentId: M:Fantasy.Entitas.Entity.AddComponent(Fantasy.Entitas.Entity)
  id: AddComponent(Fantasy.Entitas.Entity)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: AddComponent(Entity)
  nameWithType: Entity.AddComponent(Entity)
  fullName: Fantasy.Entitas.Entity.AddComponent(Fantasy.Entitas.Entity)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: AddComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 206
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 添加一个组件到当前实体上
  example: []
  syntax:
    content: public void AddComponent(Entity component)
    parameters:
    - id: component
      type: Fantasy.Entitas.Entity
      description: 要添加的实体实例
    content.vb: Public Sub AddComponent(component As Entity)
  overload: Fantasy.Entitas.Entity.AddComponent*
- uid: Fantasy.Entitas.Entity.AddComponent``1(``0)
  commentId: M:Fantasy.Entitas.Entity.AddComponent``1(``0)
  id: AddComponent``1(``0)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: AddComponent<T>(T)
  nameWithType: Entity.AddComponent<T>(T)
  fullName: Fantasy.Entitas.Entity.AddComponent<T>(T)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: AddComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 274
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 添加一个组件到当前实体上
  example: []
  syntax:
    content: 'public void AddComponent<T>(T component) where T : Entity'
    parameters:
    - id: component
      type: '{T}'
      description: 要添加的实体实例
    typeParameters:
    - id: T
      description: 要添加组件的泛型类型
    content.vb: Public Sub AddComponent(Of T As Entity)(component As T)
  overload: Fantasy.Entitas.Entity.AddComponent*
  nameWithType.vb: Entity.AddComponent(Of T)(T)
  fullName.vb: Fantasy.Entitas.Entity.AddComponent(Of T)(T)
  name.vb: AddComponent(Of T)(T)
- uid: Fantasy.Entitas.Entity.GetComponent``1
  commentId: M:Fantasy.Entitas.Entity.GetComponent``1
  id: GetComponent``1
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: GetComponent<T>()
  nameWithType: Entity.GetComponent<T>()
  fullName: Fantasy.Entitas.Entity.GetComponent<T>()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 353
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 当前实体上查找一个字实体
  example: []
  syntax:
    content: 'public T GetComponent<T>() where T : Entity, new()'
    typeParameters:
    - id: T
      description: 要查找实体泛型类型
    return:
      type: '{T}'
      description: 查找的实体实例
    content.vb: Public Function GetComponent(Of T As {Entity, New})() As T
  overload: Fantasy.Entitas.Entity.GetComponent*
  nameWithType.vb: Entity.GetComponent(Of T)()
  fullName.vb: Fantasy.Entitas.Entity.GetComponent(Of T)()
  name.vb: GetComponent(Of T)()
- uid: Fantasy.Entitas.Entity.GetComponent(System.Type)
  commentId: M:Fantasy.Entitas.Entity.GetComponent(System.Type)
  id: GetComponent(System.Type)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: GetComponent(Type)
  nameWithType: Entity.GetComponent(Type)
  fullName: Fantasy.Entitas.Entity.GetComponent(System.Type)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 369
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 当前实体上查找一个字实体
  example: []
  syntax:
    content: public Entity GetComponent(Type type)
    parameters:
    - id: type
      type: System.Type
      description: 要查找实体类型
    return:
      type: Fantasy.Entitas.Entity
      description: 查找的实体实例
    content.vb: Public Function GetComponent(type As Type) As Entity
  overload: Fantasy.Entitas.Entity.GetComponent*
- uid: Fantasy.Entitas.Entity.GetComponent``1(System.Int64)
  commentId: M:Fantasy.Entitas.Entity.GetComponent``1(System.Int64)
  id: GetComponent``1(System.Int64)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: GetComponent<T>(long)
  nameWithType: Entity.GetComponent<T>(long)
  fullName: Fantasy.Entitas.Entity.GetComponent<T>(long)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 386
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 当前实体上查找一个字实体
  example: []
  syntax:
    content: 'public T GetComponent<T>(long id) where T : Entity, ISupportedMultiEntity, new()'
    parameters:
    - id: id
      type: System.Int64
      description: 要查找实体的Id
    typeParameters:
    - id: T
      description: 要查找实体泛型类型
    return:
      type: '{T}'
      description: 查找的实体实例
    content.vb: Public Function GetComponent(Of T As {Entity, ISupportedMultiEntity, New})(id As Long) As T
  overload: Fantasy.Entitas.Entity.GetComponent*
  nameWithType.vb: Entity.GetComponent(Of T)(Long)
  fullName.vb: Fantasy.Entitas.Entity.GetComponent(Of T)(Long)
  name.vb: GetComponent(Of T)(Long)
- uid: Fantasy.Entitas.Entity.GetOrAddComponent``1(System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.GetOrAddComponent``1(System.Boolean)
  id: GetOrAddComponent``1(System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: GetOrAddComponent<T>(bool)
  nameWithType: Entity.GetOrAddComponent<T>(bool)
  fullName: Fantasy.Entitas.Entity.GetOrAddComponent<T>(bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: GetOrAddComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 402
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 当前实体上查找一个字实体，如果没有就创建一个新的并添加到当前实体上
  example: []
  syntax:
    content: 'public T GetOrAddComponent<T>(bool isPool = true) where T : Entity, new()'
    parameters:
    - id: isPool
      type: System.Boolean
      description: 是否从对象池创建
    typeParameters:
    - id: T
      description: 要查找或添加实体泛型类型
    return:
      type: '{T}'
      description: 查找的实体实例
    content.vb: Public Function GetOrAddComponent(Of T As {Entity, New})(isPool As Boolean = True) As T
  overload: Fantasy.Entitas.Entity.GetOrAddComponent*
  nameWithType.vb: Entity.GetOrAddComponent(Of T)(Boolean)
  fullName.vb: Fantasy.Entitas.Entity.GetOrAddComponent(Of T)(Boolean)
  name.vb: GetOrAddComponent(Of T)(Boolean)
- uid: Fantasy.Entitas.Entity.RemoveComponent``1(System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.RemoveComponent``1(System.Boolean)
  id: RemoveComponent``1(System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: RemoveComponent<T>(bool)
  nameWithType: Entity.RemoveComponent<T>(bool)
  fullName: Fantasy.Entitas.Entity.RemoveComponent<T>(bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: RemoveComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 417
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 当前实体下删除一个实体
  example: []
  syntax:
    content: 'public void RemoveComponent<T>(bool isDispose = true) where T : Entity, new()'
    parameters:
    - id: isDispose
      type: System.Boolean
      description: 是否执行删除实体的Dispose方法
    typeParameters:
    - id: T
      description: 实体的泛型类型
    content.vb: Public Sub RemoveComponent(Of T As {Entity, New})(isDispose As Boolean = True)
  overload: Fantasy.Entitas.Entity.RemoveComponent*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: ''
  nameWithType.vb: Entity.RemoveComponent(Of T)(Boolean)
  fullName.vb: Fantasy.Entitas.Entity.RemoveComponent(Of T)(Boolean)
  name.vb: RemoveComponent(Of T)(Boolean)
- uid: Fantasy.Entitas.Entity.RemoveComponent``1(System.Int64,System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.RemoveComponent``1(System.Int64,System.Boolean)
  id: RemoveComponent``1(System.Int64,System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: RemoveComponent<T>(long, bool)
  nameWithType: Entity.RemoveComponent<T>(long, bool)
  fullName: Fantasy.Entitas.Entity.RemoveComponent<T>(long, bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: RemoveComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 467
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 当前实体下删除一个实体
  example: []
  syntax:
    content: 'public void RemoveComponent<T>(long id, bool isDispose = true) where T : Entity, ISupportedMultiEntity, new()'
    parameters:
    - id: id
      type: System.Int64
      description: 要删除的实体Id
    - id: isDispose
      type: System.Boolean
      description: 是否执行删除实体的Dispose方法
    typeParameters:
    - id: T
      description: 实体的泛型类型
    content.vb: Public Sub RemoveComponent(Of T As {Entity, ISupportedMultiEntity, New})(id As Long, isDispose As Boolean = True)
  overload: Fantasy.Entitas.Entity.RemoveComponent*
  nameWithType.vb: Entity.RemoveComponent(Of T)(Long, Boolean)
  fullName.vb: Fantasy.Entitas.Entity.RemoveComponent(Of T)(Long, Boolean)
  name.vb: RemoveComponent(Of T)(Long, Boolean)
- uid: Fantasy.Entitas.Entity.RemoveComponent(Fantasy.Entitas.Entity,System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.RemoveComponent(Fantasy.Entitas.Entity,System.Boolean)
  id: RemoveComponent(Fantasy.Entitas.Entity,System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: RemoveComponent(Entity, bool)
  nameWithType: Entity.RemoveComponent(Entity, bool)
  fullName: Fantasy.Entitas.Entity.RemoveComponent(Fantasy.Entitas.Entity, bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: RemoveComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 507
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 当前实体下删除一个实体
  example: []
  syntax:
    content: public void RemoveComponent(Entity component, bool isDispose = true)
    parameters:
    - id: component
      type: Fantasy.Entitas.Entity
      description: 要删除的实体实例
    - id: isDispose
      type: System.Boolean
      description: 是否执行删除实体的Dispose方法
    content.vb: Public Sub RemoveComponent(component As Entity, isDispose As Boolean = True)
  overload: Fantasy.Entitas.Entity.RemoveComponent*
  nameWithType.vb: Entity.RemoveComponent(Entity, Boolean)
  fullName.vb: Fantasy.Entitas.Entity.RemoveComponent(Fantasy.Entitas.Entity, Boolean)
  name.vb: RemoveComponent(Entity, Boolean)
- uid: Fantasy.Entitas.Entity.RemoveComponent``1(``0,System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.RemoveComponent``1(``0,System.Boolean)
  id: RemoveComponent``1(``0,System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: RemoveComponent<T>(T, bool)
  nameWithType: Entity.RemoveComponent<T>(T, bool)
  fullName: Fantasy.Entitas.Entity.RemoveComponent<T>(T, bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: RemoveComponent
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 581
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 当前实体下删除一个实体
  example: []
  syntax:
    content: 'public void RemoveComponent<T>(T component, bool isDispose = true) where T : Entity'
    parameters:
    - id: component
      type: '{T}'
      description: 要删除的实体实例
    - id: isDispose
      type: System.Boolean
      description: 是否执行删除实体的Dispose方法
    typeParameters:
    - id: T
      description: 实体的泛型类型
    content.vb: Public Sub RemoveComponent(Of T As Entity)(component As T, isDispose As Boolean = True)
  overload: Fantasy.Entitas.Entity.RemoveComponent*
  nameWithType.vb: Entity.RemoveComponent(Of T)(T, Boolean)
  fullName.vb: Fantasy.Entitas.Entity.RemoveComponent(Of T)(T, Boolean)
  name.vb: RemoveComponent(Of T)(T, Boolean)
- uid: Fantasy.Entitas.Entity.Deserialize(Fantasy.Scene,System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.Deserialize(Fantasy.Scene,System.Boolean)
  id: Deserialize(Fantasy.Scene,System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: Deserialize(Scene, bool)
  nameWithType: Entity.Deserialize(Scene, bool)
  fullName: Fantasy.Entitas.Entity.Deserialize(Fantasy.Scene, bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Deserialize
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 665
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: >-
    反序列化当前实体，因为在数据库加载过来的或通过协议传送过来的实体并没有跟当前Scene做关联。

    所以必须要执行一下这个反序列化的方法才可以使用。
  example: []
  syntax:
    content: public void Deserialize(Scene scene, bool resetId = false)
    parameters:
    - id: scene
      type: Fantasy.Scene
      description: Scene
    - id: resetId
      type: System.Boolean
      description: 是否是重新生成实体的Id,如果是数据库加载过来的一般是不需要的
    content.vb: Public Sub Deserialize(scene As Scene, resetId As Boolean = False)
  overload: Fantasy.Entitas.Entity.Deserialize*
  nameWithType.vb: Entity.Deserialize(Scene, Boolean)
  fullName.vb: Fantasy.Entitas.Entity.Deserialize(Fantasy.Scene, Boolean)
  name.vb: Deserialize(Scene, Boolean)
- uid: Fantasy.Entitas.Entity.ForEachSingleCollection
  commentId: P:Fantasy.Entitas.Entity.ForEachSingleCollection
  id: ForEachSingleCollection
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: ForEachSingleCollection
  nameWithType: Entity.ForEachSingleCollection
  fullName: Fantasy.Entitas.Entity.ForEachSingleCollection
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ForEachSingleCollection
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 724
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 查询当前实体下支持数据库分表存储实体
  example: []
  syntax:
    content: >-
      [BsonIgnore]

      [JsonIgnore]

      [IgnoreDataMember]

      [ProtoIgnore]

      public IEnumerable<Entity> ForEachSingleCollection { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Fantasy.Entitas.Entity}
    content.vb: >-
      <BsonIgnore>

      <JsonIgnore>

      <IgnoreDataMember>

      <ProtoIgnore>

      Public ReadOnly Property ForEachSingleCollection As IEnumerable(Of Entity)
  overload: Fantasy.Entitas.Entity.ForEachSingleCollection*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoIgnoreAttribute
    ctor: ProtoBuf.ProtoIgnoreAttribute.#ctor
    arguments: []
- uid: Fantasy.Entitas.Entity.ForEachTransfer
  commentId: P:Fantasy.Entitas.Entity.ForEachTransfer
  id: ForEachTransfer
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: ForEachTransfer
  nameWithType: Entity.ForEachTransfer
  fullName: Fantasy.Entitas.Entity.ForEachTransfer
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ForEachTransfer
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 746
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 查询当前实体下支持传送实体
  example: []
  syntax:
    content: >-
      [BsonIgnore]

      [JsonIgnore]

      [IgnoreDataMember]

      [ProtoIgnore]

      public IEnumerable<Entity> ForEachTransfer { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Fantasy.Entitas.Entity}
    content.vb: >-
      <BsonIgnore>

      <JsonIgnore>

      <IgnoreDataMember>

      <ProtoIgnore>

      Public ReadOnly Property ForEachTransfer As IEnumerable(Of Entity)
  overload: Fantasy.Entitas.Entity.ForEachTransfer*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoIgnoreAttribute
    ctor: ProtoBuf.ProtoIgnoreAttribute.#ctor
    arguments: []
- uid: Fantasy.Entitas.Entity.ForEachMultiEntity
  commentId: P:Fantasy.Entitas.Entity.ForEachMultiEntity
  id: ForEachMultiEntity
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: ForEachMultiEntity
  nameWithType: Entity.ForEachMultiEntity
  fullName: Fantasy.Entitas.Entity.ForEachMultiEntity
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ForEachMultiEntity
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 783
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 查询当前实体下的实现了ISupportedMultiEntity接口的实体
  example: []
  syntax:
    content: >-
      [BsonIgnore]

      [JsonIgnore]

      [IgnoreDataMember]

      [ProtoIgnore]

      public IEnumerable<Entity> ForEachMultiEntity { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Fantasy.Entitas.Entity}
    content.vb: >-
      <BsonIgnore>

      <JsonIgnore>

      <IgnoreDataMember>

      <ProtoIgnore>

      Public ReadOnly Property ForEachMultiEntity As IEnumerable(Of Entity)
  overload: Fantasy.Entitas.Entity.ForEachMultiEntity*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoIgnoreAttribute
    ctor: ProtoBuf.ProtoIgnoreAttribute.#ctor
    arguments: []
- uid: Fantasy.Entitas.Entity.ForEachEntity
  commentId: P:Fantasy.Entitas.Entity.ForEachEntity
  id: ForEachEntity
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: ForEachEntity
  nameWithType: Entity.ForEachEntity
  fullName: Fantasy.Entitas.Entity.ForEachEntity
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: ForEachEntity
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 805
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 查找当前实体下的所有实体，不包括实现ISupportedMultiEntity接口的实体
  example: []
  syntax:
    content: >-
      [BsonIgnore]

      [JsonIgnore]

      [IgnoreDataMember]

      [ProtoIgnore]

      public IEnumerable<Entity> ForEachEntity { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{Fantasy.Entitas.Entity}
    content.vb: >-
      <BsonIgnore>

      <JsonIgnore>

      <IgnoreDataMember>

      <ProtoIgnore>

      Public ReadOnly Property ForEachEntity As IEnumerable(Of Entity)
  overload: Fantasy.Entitas.Entity.ForEachEntity*
  attributes:
  - type: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute
    ctor: MongoDB.Bson.Serialization.Attributes.BsonIgnoreAttribute.#ctor
    arguments: []
  - type: Newtonsoft.Json.JsonIgnoreAttribute
    ctor: Newtonsoft.Json.JsonIgnoreAttribute.#ctor
    arguments: []
  - type: System.Runtime.Serialization.IgnoreDataMemberAttribute
    ctor: System.Runtime.Serialization.IgnoreDataMemberAttribute.#ctor
    arguments: []
  - type: ProtoBuf.ProtoIgnoreAttribute
    ctor: ProtoBuf.ProtoIgnoreAttribute.#ctor
    arguments: []
- uid: Fantasy.Entitas.Entity.Dispose
  commentId: M:Fantasy.Entitas.Entity.Dispose
  id: Dispose
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Entity.Dispose()
  fullName: Fantasy.Entitas.Entity.Dispose()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Dispose
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 831
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 销毁当前实体，销毁后会自动销毁当前实体下的所有实体。
  example: []
  syntax:
    content: public virtual void Dispose()
    content.vb: Public Overridable Sub Dispose()
  overload: Fantasy.Entitas.Entity.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Fantasy.Entitas.Entity.IsPool
  commentId: M:Fantasy.Entitas.Entity.IsPool
  id: IsPool
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: IsPool()
  nameWithType: Entity.IsPool()
  fullName: Fantasy.Entitas.Entity.IsPool()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: IsPool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 915
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 获取一个值，该值指示当前实例是否为对象池中的实例。
  example: []
  syntax:
    content: public bool IsPool()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsPool() As Boolean
  overload: Fantasy.Entitas.Entity.IsPool*
  implements:
  - Fantasy.Pool.IPool.IsPool
- uid: Fantasy.Entitas.Entity.SetIsPool(System.Boolean)
  commentId: M:Fantasy.Entitas.Entity.SetIsPool(System.Boolean)
  id: SetIsPool(System.Boolean)
  parent: Fantasy.Entitas.Entity
  langs:
  - csharp
  - vb
  name: SetIsPool(bool)
  nameWithType: Entity.SetIsPool(bool)
  fullName: Fantasy.Entitas.Entity.SetIsPool(bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: SetIsPool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Entity.cs
    startLine: 924
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Entitas
  summary: 设置一个值，该值指示当前实例是否为对象池中的实例。
  example: []
  syntax:
    content: public void SetIsPool(bool isPool)
    parameters:
    - id: isPool
      type: System.Boolean
      description: ''
    content.vb: Public Sub SetIsPool(isPool As Boolean)
  overload: Fantasy.Entitas.Entity.SetIsPool*
  implements:
  - Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  nameWithType.vb: Entity.SetIsPool(Boolean)
  fullName.vb: Fantasy.Entitas.Entity.SetIsPool(Boolean)
  name.vb: SetIsPool(Boolean)
references:
- uid: Fantasy.Entitas
  commentId: N:Fantasy.Entitas
  href: Fantasy.html
  name: Fantasy.Entitas
  nameWithType: Fantasy.Entitas
  fullName: Fantasy.Entitas
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Entitas
    name: Entitas
    href: Fantasy.Entitas.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Entitas
    name: Entitas
    href: Fantasy.Entitas.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Fantasy.Entitas.IEntity
  commentId: T:Fantasy.Entitas.IEntity
  parent: Fantasy.Entitas
  href: Fantasy.Entitas.IEntity.html
  name: IEntity
  nameWithType: IEntity
  fullName: Fantasy.Entitas.IEntity
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: Fantasy.Pool.IPool
  commentId: T:Fantasy.Pool.IPool
  parent: Fantasy.Pool
  href: Fantasy.Pool.IPool.html
  name: IPool
  nameWithType: IPool
  fullName: Fantasy.Pool.IPool
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Fantasy.Entitas.Entity.Fantasy.Helper.JsonHelper.ToJson``1
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  parent: Fantasy.Helper.JsonHelper
  definition: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<Entity>(Entity)
  nameWithType: JsonHelper.ToJson<Entity>(Entity)
  fullName: Fantasy.Helper.JsonHelper.ToJson<Fantasy.Entitas.Entity>(Fantasy.Entitas.Entity)
  nameWithType.vb: JsonHelper.ToJson(Of Entity)(Entity)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of Fantasy.Entitas.Entity)(Fantasy.Entitas.Entity)
  name.vb: ToJson(Of Entity)(Entity)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.Entitas.Entity)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: '>'
  - name: (
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.Entitas.Entity)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: )
  - name: (
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantasy.Pool
  commentId: N:Fantasy.Pool
  href: Fantasy.html
  name: Fantasy.Pool
  nameWithType: Fantasy.Pool
  fullName: Fantasy.Pool
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Pool
    name: Pool
    href: Fantasy.Pool.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Pool
    name: Pool
    href: Fantasy.Pool.html
- uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<T>(T)
  nameWithType: JsonHelper.ToJson<T>(T)
  fullName: Fantasy.Helper.JsonHelper.ToJson<T>(T)
  nameWithType.vb: JsonHelper.ToJson(Of T)(T)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of T)(T)
  name.vb: ToJson(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Fantasy.Helper.JsonHelper
  commentId: T:Fantasy.Helper.JsonHelper
  parent: Fantasy.Helper
  href: Fantasy.Helper.JsonHelper.html
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: Fantasy.Helper.JsonHelper
- uid: Fantasy.Helper
  commentId: N:Fantasy.Helper
  href: Fantasy.html
  name: Fantasy.Helper
  nameWithType: Fantasy.Helper
  fullName: Fantasy.Helper
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
- uid: Fantasy.Entitas.Entity.Id*
  commentId: Overload:Fantasy.Entitas.Entity.Id
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_Id
  name: Id
  nameWithType: Entity.Id
  fullName: Fantasy.Entitas.Entity.Id
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Fantasy.Entitas.Entity.RunTimeId*
  commentId: Overload:Fantasy.Entitas.Entity.RunTimeId
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_RunTimeId
  name: RunTimeId
  nameWithType: Entity.RunTimeId
  fullName: Fantasy.Entitas.Entity.RunTimeId
- uid: Fantasy.Entitas.Entity.IsDisposed*
  commentId: Overload:Fantasy.Entitas.Entity.IsDisposed
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_IsDisposed
  name: IsDisposed
  nameWithType: Entity.IsDisposed
  fullName: Fantasy.Entitas.Entity.IsDisposed
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Fantasy.Entitas.Entity.Scene*
  commentId: Overload:Fantasy.Entitas.Entity.Scene
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_Scene
  name: Scene
  nameWithType: Entity.Scene
  fullName: Fantasy.Entitas.Entity.Scene
- uid: Fantasy.Scene
  commentId: T:Fantasy.Scene
  parent: Fantasy
  href: Fantasy.Scene.html
  name: Scene
  nameWithType: Scene
  fullName: Fantasy.Scene
- uid: Fantasy
  commentId: N:Fantasy
  href: Fantasy.html
  name: Fantasy
  nameWithType: Fantasy
  fullName: Fantasy
- uid: Fantasy.Entitas.Entity.Parent*
  commentId: Overload:Fantasy.Entitas.Entity.Parent
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_Parent
  name: Parent
  nameWithType: Entity.Parent
  fullName: Fantasy.Entitas.Entity.Parent
- uid: Fantasy.Entitas.Entity
  commentId: T:Fantasy.Entitas.Entity
  parent: Fantasy.Entitas
  href: Fantasy.Entitas.Entity.html
  name: Entity
  nameWithType: Entity
  fullName: Fantasy.Entitas.Entity
- uid: Fantasy.Entitas.Entity.Type*
  commentId: Overload:Fantasy.Entitas.Entity.Type
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_Type
  name: Type
  nameWithType: Entity.Type
  fullName: Fantasy.Entitas.Entity.Type
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: Fantasy.Entitas.Entity.GetParent*
  commentId: Overload:Fantasy.Entitas.Entity.GetParent
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_GetParent__1
  name: GetParent
  nameWithType: Entity.GetParent
  fullName: Fantasy.Entitas.Entity.GetParent
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: Fantasy.Entitas.Entity.Create*
  commentId: Overload:Fantasy.Entitas.Entity.Create
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_Create__1_Fantasy_Scene_System_Boolean_System_Boolean_
  name: Create
  nameWithType: Entity.Create
  fullName: Fantasy.Entitas.Entity.Create
- uid: Fantasy.Entitas.Entity.AddComponent*
  commentId: Overload:Fantasy.Entitas.Entity.AddComponent
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_AddComponent__1_System_Boolean_
  name: AddComponent
  nameWithType: Entity.AddComponent
  fullName: Fantasy.Entitas.Entity.AddComponent
- uid: Fantasy.Entitas.Entity.GetComponent*
  commentId: Overload:Fantasy.Entitas.Entity.GetComponent
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_GetComponent__1
  name: GetComponent
  nameWithType: Entity.GetComponent
  fullName: Fantasy.Entitas.Entity.GetComponent
- uid: Fantasy.Entitas.Entity.GetOrAddComponent*
  commentId: Overload:Fantasy.Entitas.Entity.GetOrAddComponent
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_GetOrAddComponent__1_System_Boolean_
  name: GetOrAddComponent
  nameWithType: Entity.GetOrAddComponent
  fullName: Fantasy.Entitas.Entity.GetOrAddComponent
- uid: System.NotSupportedException
  commentId: T:System.NotSupportedException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.notsupportedexception
  name: NotSupportedException
  nameWithType: NotSupportedException
  fullName: System.NotSupportedException
- uid: Fantasy.Entitas.Entity.RemoveComponent*
  commentId: Overload:Fantasy.Entitas.Entity.RemoveComponent
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_RemoveComponent__1_System_Boolean_
  name: RemoveComponent
  nameWithType: Entity.RemoveComponent
  fullName: Fantasy.Entitas.Entity.RemoveComponent
- uid: Fantasy.Entitas.Entity.Deserialize*
  commentId: Overload:Fantasy.Entitas.Entity.Deserialize
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_Deserialize_Fantasy_Scene_System_Boolean_
  name: Deserialize
  nameWithType: Entity.Deserialize
  fullName: Fantasy.Entitas.Entity.Deserialize
- uid: Fantasy.Entitas.Entity.ForEachSingleCollection*
  commentId: Overload:Fantasy.Entitas.Entity.ForEachSingleCollection
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_ForEachSingleCollection
  name: ForEachSingleCollection
  nameWithType: Entity.ForEachSingleCollection
  fullName: Fantasy.Entitas.Entity.ForEachSingleCollection
- uid: System.Collections.Generic.IEnumerable{Fantasy.Entitas.Entity}
  commentId: T:System.Collections.Generic.IEnumerable{Fantasy.Entitas.Entity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<Entity>
  nameWithType: IEnumerable<Entity>
  fullName: System.Collections.Generic.IEnumerable<Fantasy.Entitas.Entity>
  nameWithType.vb: IEnumerable(Of Entity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of Fantasy.Entitas.Entity)
  name.vb: IEnumerable(Of Entity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.Entitas.Entity
    name: Entity
    href: Fantasy.Entitas.Entity.html
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: Fantasy.Entitas.Entity.ForEachTransfer*
  commentId: Overload:Fantasy.Entitas.Entity.ForEachTransfer
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_ForEachTransfer
  name: ForEachTransfer
  nameWithType: Entity.ForEachTransfer
  fullName: Fantasy.Entitas.Entity.ForEachTransfer
- uid: Fantasy.Entitas.Entity.ForEachMultiEntity*
  commentId: Overload:Fantasy.Entitas.Entity.ForEachMultiEntity
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_ForEachMultiEntity
  name: ForEachMultiEntity
  nameWithType: Entity.ForEachMultiEntity
  fullName: Fantasy.Entitas.Entity.ForEachMultiEntity
- uid: Fantasy.Entitas.Entity.ForEachEntity*
  commentId: Overload:Fantasy.Entitas.Entity.ForEachEntity
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_ForEachEntity
  name: ForEachEntity
  nameWithType: Entity.ForEachEntity
  fullName: Fantasy.Entitas.Entity.ForEachEntity
- uid: Fantasy.Entitas.Entity.Dispose*
  commentId: Overload:Fantasy.Entitas.Entity.Dispose
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_Dispose
  name: Dispose
  nameWithType: Entity.Dispose
  fullName: Fantasy.Entitas.Entity.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Fantasy.Entitas.Entity.IsPool*
  commentId: Overload:Fantasy.Entitas.Entity.IsPool
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_IsPool
  name: IsPool
  nameWithType: Entity.IsPool
  fullName: Fantasy.Entitas.Entity.IsPool
- uid: Fantasy.Pool.IPool.IsPool
  commentId: M:Fantasy.Pool.IPool.IsPool
  parent: Fantasy.Pool.IPool
  href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  name: IsPool()
  nameWithType: IPool.IsPool()
  fullName: Fantasy.Pool.IPool.IsPool()
  spec.csharp:
  - uid: Fantasy.Pool.IPool.IsPool
    name: IsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  - name: (
  - name: )
  spec.vb:
  - uid: Fantasy.Pool.IPool.IsPool
    name: IsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  - name: (
  - name: )
- uid: Fantasy.Entitas.Entity.SetIsPool*
  commentId: Overload:Fantasy.Entitas.Entity.SetIsPool
  href: Fantasy.Entitas.Entity.html#Fantasy_Entitas_Entity_SetIsPool_System_Boolean_
  name: SetIsPool
  nameWithType: Entity.SetIsPool
  fullName: Fantasy.Entitas.Entity.SetIsPool
- uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  commentId: M:Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  parent: Fantasy.Pool.IPool
  isExternal: true
  href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  name: SetIsPool(bool)
  nameWithType: IPool.SetIsPool(bool)
  fullName: Fantasy.Pool.IPool.SetIsPool(bool)
  nameWithType.vb: IPool.SetIsPool(Boolean)
  fullName.vb: Fantasy.Pool.IPool.SetIsPool(Boolean)
  name.vb: SetIsPool(Boolean)
  spec.csharp:
  - uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
    name: SetIsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
    name: SetIsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
