### YamlMime:ManagedReference
items:
- uid: Fantasy.Async.CoroutineLock
  commentId: T:Fantasy.Async.CoroutineLock
  id: CoroutineLock
  parent: Fantasy.Async
  children:
  - Fantasy.Async.CoroutineLock.CoroutineLockType
  - Fantasy.Async.CoroutineLock.Dispose
  - Fantasy.Async.CoroutineLock.IsPool
  - Fantasy.Async.CoroutineLock.Release(System.Int64)
  - Fantasy.Async.CoroutineLock.SetIsPool(System.Boolean)
  - Fantasy.Async.CoroutineLock.Wait(System.Int64,System.String,System.Int32)
  langs:
  - csharp
  - vb
  name: CoroutineLock
  nameWithType: CoroutineLock
  fullName: Fantasy.Async.CoroutineLock
  type: Class
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: CoroutineLock
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
    startLine: 22
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Async
  summary: 协程锁
  example: []
  syntax:
    content: 'public sealed class CoroutineLock : IPool, IDisposable'
    content.vb: Public NotInheritable Class CoroutineLock Implements IPool, IDisposable
  inheritance:
  - System.Object
  implements:
  - Fantasy.Pool.IPool
  - System.IDisposable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  extensionMethods:
  - Fantasy.Async.CoroutineLock.Fantasy.Helper.JsonHelper.ToJson``1
- uid: Fantasy.Async.CoroutineLock.CoroutineLockType
  commentId: P:Fantasy.Async.CoroutineLock.CoroutineLockType
  id: CoroutineLockType
  parent: Fantasy.Async.CoroutineLock
  langs:
  - csharp
  - vb
  name: CoroutineLockType
  nameWithType: CoroutineLock.CoroutineLockType
  fullName: Fantasy.Async.CoroutineLock.CoroutineLockType
  type: Property
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: CoroutineLockType
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
    startLine: 34
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Async
  summary: 协程锁的类型
  example: []
  syntax:
    content: public long CoroutineLockType { get; }
    parameters: []
    return:
      type: System.Int64
    content.vb: Public Property CoroutineLockType As Long
  overload: Fantasy.Async.CoroutineLock.CoroutineLockType*
- uid: Fantasy.Async.CoroutineLock.Dispose
  commentId: M:Fantasy.Async.CoroutineLock.Dispose
  id: Dispose
  parent: Fantasy.Async.CoroutineLock
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: CoroutineLock.Dispose()
  fullName: Fantasy.Async.CoroutineLock.Dispose()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Dispose
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
    startLine: 45
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Async
  summary: 销毁协程锁，如果调用了该方法，所有使用当前协程锁等待的逻辑会按照顺序释放锁。
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: Fantasy.Async.CoroutineLock.Dispose*
  implements:
  - System.IDisposable.Dispose
- uid: Fantasy.Async.CoroutineLock.Wait(System.Int64,System.String,System.Int32)
  commentId: M:Fantasy.Async.CoroutineLock.Wait(System.Int64,System.String,System.Int32)
  id: Wait(System.Int64,System.String,System.Int32)
  parent: Fantasy.Async.CoroutineLock
  langs:
  - csharp
  - vb
  name: Wait(long, string, int)
  nameWithType: CoroutineLock.Wait(long, string, int)
  fullName: Fantasy.Async.CoroutineLock.Wait(long, string, int)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Wait
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
    startLine: 64
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Async
  summary: 等待上一个任务完成
  example: []
  syntax:
    content: public FTask<WaitCoroutineLock> Wait(long coroutineLockQueueKey, string tag = null, int timeOut = 30000)
    parameters:
    - id: coroutineLockQueueKey
      type: System.Int64
      description: 需要等待的Id
    - id: tag
      type: System.String
      description: 用于查询协程锁的标记，可不传入，只有在超时的时候排查是哪个锁超时时使用
    - id: timeOut
      type: System.Int32
      description: 等待多久会超时，当到达设定的时候会把当前锁给按照超时处理
    return:
      type: Fantasy.Async.FTask{Fantasy.Async.WaitCoroutineLock}
      description: ''
    content.vb: Public Function Wait(coroutineLockQueueKey As Long, tag As String = Nothing, timeOut As Integer = 30000) As FTask(Of WaitCoroutineLock)
  overload: Fantasy.Async.CoroutineLock.Wait*
  nameWithType.vb: CoroutineLock.Wait(Long, String, Integer)
  fullName.vb: Fantasy.Async.CoroutineLock.Wait(Long, String, Integer)
  name.vb: Wait(Long, String, Integer)
- uid: Fantasy.Async.CoroutineLock.Release(System.Int64)
  commentId: M:Fantasy.Async.CoroutineLock.Release(System.Int64)
  id: Release(System.Int64)
  parent: Fantasy.Async.CoroutineLock
  langs:
  - csharp
  - vb
  name: Release(long)
  nameWithType: CoroutineLock.Release(long)
  fullName: Fantasy.Async.CoroutineLock.Release(long)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: Release
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
    startLine: 82
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Async
  summary: 按照先入先出的顺序，释放最早的一个协程锁
  example: []
  syntax:
    content: public void Release(long coroutineLockQueueKey)
    parameters:
    - id: coroutineLockQueueKey
      type: System.Int64
      description: ''
    content.vb: Public Sub Release(coroutineLockQueueKey As Long)
  overload: Fantasy.Async.CoroutineLock.Release*
  nameWithType.vb: CoroutineLock.Release(Long)
  fullName.vb: Fantasy.Async.CoroutineLock.Release(Long)
  name.vb: Release(Long)
- uid: Fantasy.Async.CoroutineLock.IsPool
  commentId: M:Fantasy.Async.CoroutineLock.IsPool
  id: IsPool
  parent: Fantasy.Async.CoroutineLock
  langs:
  - csharp
  - vb
  name: IsPool()
  nameWithType: CoroutineLock.IsPool()
  fullName: Fantasy.Async.CoroutineLock.IsPool()
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: IsPool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
    startLine: 125
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Async
  summary: 获取一个值，该值指示当前实例是否为对象池中的实例。
  example: []
  syntax:
    content: public bool IsPool()
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Function IsPool() As Boolean
  overload: Fantasy.Async.CoroutineLock.IsPool*
  implements:
  - Fantasy.Pool.IPool.IsPool
- uid: Fantasy.Async.CoroutineLock.SetIsPool(System.Boolean)
  commentId: M:Fantasy.Async.CoroutineLock.SetIsPool(System.Boolean)
  id: SetIsPool(System.Boolean)
  parent: Fantasy.Async.CoroutineLock
  langs:
  - csharp
  - vb
  name: SetIsPool(bool)
  nameWithType: CoroutineLock.SetIsPool(bool)
  fullName: Fantasy.Async.CoroutineLock.SetIsPool(bool)
  type: Method
  source:
    remote:
      path: Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
      branch: main
      repo: https://github.com/qq362946/Fantasy.git
    id: SetIsPool
    path: ../Fantasy.Net/Fantasy.Net/Runtime/Core/Entitas/Component/CoroutineLock/CoroutineLock.cs
    startLine: 134
  assemblies:
  - Fantasy.Net
  namespace: Fantasy.Async
  summary: 设置一个值，该值指示当前实例是否为对象池中的实例。
  example: []
  syntax:
    content: public void SetIsPool(bool isPool)
    parameters:
    - id: isPool
      type: System.Boolean
      description: ''
    content.vb: Public Sub SetIsPool(isPool As Boolean)
  overload: Fantasy.Async.CoroutineLock.SetIsPool*
  implements:
  - Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  nameWithType.vb: CoroutineLock.SetIsPool(Boolean)
  fullName.vb: Fantasy.Async.CoroutineLock.SetIsPool(Boolean)
  name.vb: SetIsPool(Boolean)
references:
- uid: Fantasy.Async
  commentId: N:Fantasy.Async
  href: Fantasy.html
  name: Fantasy.Async
  nameWithType: Fantasy.Async
  fullName: Fantasy.Async
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Async
    name: Async
    href: Fantasy.Async.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Async
    name: Async
    href: Fantasy.Async.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: Fantasy.Pool.IPool
  commentId: T:Fantasy.Pool.IPool
  parent: Fantasy.Pool
  href: Fantasy.Pool.IPool.html
  name: IPool
  nameWithType: IPool
  fullName: Fantasy.Pool.IPool
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: Fantasy.Async.CoroutineLock.Fantasy.Helper.JsonHelper.ToJson``1
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  parent: Fantasy.Helper.JsonHelper
  definition: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<CoroutineLock>(CoroutineLock)
  nameWithType: JsonHelper.ToJson<CoroutineLock>(CoroutineLock)
  fullName: Fantasy.Helper.JsonHelper.ToJson<Fantasy.Async.CoroutineLock>(Fantasy.Async.CoroutineLock)
  nameWithType.vb: JsonHelper.ToJson(Of CoroutineLock)(CoroutineLock)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of Fantasy.Async.CoroutineLock)(Fantasy.Async.CoroutineLock)
  name.vb: ToJson(Of CoroutineLock)(CoroutineLock)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.Async.CoroutineLock)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - uid: Fantasy.Async.CoroutineLock
    name: CoroutineLock
    href: Fantasy.Async.CoroutineLock.html
  - name: '>'
  - name: (
  - uid: Fantasy.Async.CoroutineLock
    name: CoroutineLock
    href: Fantasy.Async.CoroutineLock.html
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(Fantasy.Async.CoroutineLock)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.Async.CoroutineLock
    name: CoroutineLock
    href: Fantasy.Async.CoroutineLock.html
  - name: )
  - name: (
  - uid: Fantasy.Async.CoroutineLock
    name: CoroutineLock
    href: Fantasy.Async.CoroutineLock.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: Fantasy.Pool
  commentId: N:Fantasy.Pool
  href: Fantasy.html
  name: Fantasy.Pool
  nameWithType: Fantasy.Pool
  fullName: Fantasy.Pool
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Pool
    name: Pool
    href: Fantasy.Pool.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Pool
    name: Pool
    href: Fantasy.Pool.html
- uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
  commentId: M:Fantasy.Helper.JsonHelper.ToJson``1(``0)
  href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  name: ToJson<T>(T)
  nameWithType: JsonHelper.ToJson<T>(T)
  fullName: Fantasy.Helper.JsonHelper.ToJson<T>(T)
  nameWithType.vb: JsonHelper.ToJson(Of T)(T)
  fullName.vb: Fantasy.Helper.JsonHelper.ToJson(Of T)(T)
  name.vb: ToJson(Of T)(T)
  spec.csharp:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: Fantasy.Helper.JsonHelper.ToJson``1(``0)
    name: ToJson
    href: Fantasy.Helper.JsonHelper.html#Fantasy_Helper_JsonHelper_ToJson__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: Fantasy.Helper.JsonHelper
  commentId: T:Fantasy.Helper.JsonHelper
  parent: Fantasy.Helper
  href: Fantasy.Helper.JsonHelper.html
  name: JsonHelper
  nameWithType: JsonHelper
  fullName: Fantasy.Helper.JsonHelper
- uid: Fantasy.Helper
  commentId: N:Fantasy.Helper
  href: Fantasy.html
  name: Fantasy.Helper
  nameWithType: Fantasy.Helper
  fullName: Fantasy.Helper
  spec.csharp:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
  spec.vb:
  - uid: Fantasy
    name: Fantasy
    href: Fantasy.html
  - name: .
  - uid: Fantasy.Helper
    name: Helper
    href: Fantasy.Helper.html
- uid: Fantasy.Async.CoroutineLock.CoroutineLockType*
  commentId: Overload:Fantasy.Async.CoroutineLock.CoroutineLockType
  href: Fantasy.Async.CoroutineLock.html#Fantasy_Async_CoroutineLock_CoroutineLockType
  name: CoroutineLockType
  nameWithType: CoroutineLock.CoroutineLockType
  fullName: Fantasy.Async.CoroutineLock.CoroutineLockType
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: Fantasy.Async.CoroutineLock.Dispose*
  commentId: Overload:Fantasy.Async.CoroutineLock.Dispose
  href: Fantasy.Async.CoroutineLock.html#Fantasy_Async_CoroutineLock_Dispose
  name: Dispose
  nameWithType: CoroutineLock.Dispose
  fullName: Fantasy.Async.CoroutineLock.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
- uid: Fantasy.Async.CoroutineLock.Wait*
  commentId: Overload:Fantasy.Async.CoroutineLock.Wait
  href: Fantasy.Async.CoroutineLock.html#Fantasy_Async_CoroutineLock_Wait_System_Int64_System_String_System_Int32_
  name: Wait
  nameWithType: CoroutineLock.Wait
  fullName: Fantasy.Async.CoroutineLock.Wait
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: Fantasy.Async.FTask{Fantasy.Async.WaitCoroutineLock}
  commentId: T:Fantasy.Async.FTask{Fantasy.Async.WaitCoroutineLock}
  parent: Fantasy.Async
  definition: Fantasy.Async.FTask`1
  href: Fantasy.Async.FTask-1.html
  name: FTask<WaitCoroutineLock>
  nameWithType: FTask<WaitCoroutineLock>
  fullName: Fantasy.Async.FTask<Fantasy.Async.WaitCoroutineLock>
  nameWithType.vb: FTask(Of WaitCoroutineLock)
  fullName.vb: Fantasy.Async.FTask(Of Fantasy.Async.WaitCoroutineLock)
  name.vb: FTask(Of WaitCoroutineLock)
  spec.csharp:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: <
  - uid: Fantasy.Async.WaitCoroutineLock
    name: WaitCoroutineLock
    href: Fantasy.Async.WaitCoroutineLock.html
  - name: '>'
  spec.vb:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: Fantasy.Async.WaitCoroutineLock
    name: WaitCoroutineLock
    href: Fantasy.Async.WaitCoroutineLock.html
  - name: )
- uid: Fantasy.Async.FTask`1
  commentId: T:Fantasy.Async.FTask`1
  parent: Fantasy.Async
  href: Fantasy.Async.FTask-1.html
  name: FTask<T>
  nameWithType: FTask<T>
  fullName: Fantasy.Async.FTask<T>
  nameWithType.vb: FTask(Of T)
  fullName.vb: Fantasy.Async.FTask(Of T)
  name.vb: FTask(Of T)
  spec.csharp:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Fantasy.Async.FTask`1
    name: FTask
    href: Fantasy.Async.FTask-1.html
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Fantasy.Async.CoroutineLock.Release*
  commentId: Overload:Fantasy.Async.CoroutineLock.Release
  href: Fantasy.Async.CoroutineLock.html#Fantasy_Async_CoroutineLock_Release_System_Int64_
  name: Release
  nameWithType: CoroutineLock.Release
  fullName: Fantasy.Async.CoroutineLock.Release
- uid: Fantasy.Async.CoroutineLock.IsPool*
  commentId: Overload:Fantasy.Async.CoroutineLock.IsPool
  href: Fantasy.Async.CoroutineLock.html#Fantasy_Async_CoroutineLock_IsPool
  name: IsPool
  nameWithType: CoroutineLock.IsPool
  fullName: Fantasy.Async.CoroutineLock.IsPool
- uid: Fantasy.Pool.IPool.IsPool
  commentId: M:Fantasy.Pool.IPool.IsPool
  parent: Fantasy.Pool.IPool
  href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  name: IsPool()
  nameWithType: IPool.IsPool()
  fullName: Fantasy.Pool.IPool.IsPool()
  spec.csharp:
  - uid: Fantasy.Pool.IPool.IsPool
    name: IsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  - name: (
  - name: )
  spec.vb:
  - uid: Fantasy.Pool.IPool.IsPool
    name: IsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_IsPool
  - name: (
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: Fantasy.Async.CoroutineLock.SetIsPool*
  commentId: Overload:Fantasy.Async.CoroutineLock.SetIsPool
  href: Fantasy.Async.CoroutineLock.html#Fantasy_Async_CoroutineLock_SetIsPool_System_Boolean_
  name: SetIsPool
  nameWithType: CoroutineLock.SetIsPool
  fullName: Fantasy.Async.CoroutineLock.SetIsPool
- uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  commentId: M:Fantasy.Pool.IPool.SetIsPool(System.Boolean)
  parent: Fantasy.Pool.IPool
  isExternal: true
  href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  name: SetIsPool(bool)
  nameWithType: IPool.SetIsPool(bool)
  fullName: Fantasy.Pool.IPool.SetIsPool(bool)
  nameWithType.vb: IPool.SetIsPool(Boolean)
  fullName.vb: Fantasy.Pool.IPool.SetIsPool(Boolean)
  name.vb: SetIsPool(Boolean)
  spec.csharp:
  - uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
    name: SetIsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: Fantasy.Pool.IPool.SetIsPool(System.Boolean)
    name: SetIsPool
    href: Fantasy.Pool.IPool.html#Fantasy_Pool_IPool_SetIsPool_System_Boolean_
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
